Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> consts
Rule 1     consts -> CONST IDENTIFIER EQUALITY NUMBER SEMICOLON begin_program
Rule 2     consts -> CONST IDENTIFIER EQUALITY STRING SEMICOLON begin_program
Rule 3     consts -> CONST IDENTIFIER EQUALITY matrix SEMICOLON begin_program
Rule 4     consts -> begin_program
Rule 5     matrix -> OPEN_SQUARE_BRACKET identifiers CLOSE_SQUARE_BRACKET
Rule 6     identifiers -> IDENTIFIER ZAPYATAYA identifiers
Rule 7     identifiers -> NUMBER ZAPYATAYA identifiers
Rule 8     identifiers -> STRING ZAPYATAYA identifiers
Rule 9     identifiers -> IDENTIFIER
Rule 10    identifiers -> NUMBER
Rule 11    identifiers -> STRING
Rule 12    begin_program -> VAR declarations BEGIN body END POINT
Rule 13    block -> BEGIN body END SEMICOLON
Rule 14    body -> expression
Rule 15    identifier -> IDENTIFIER
Rule 16    identifier -> IDENTIFIER SEMICOLON
Rule 17    expression -> assignment expression
Rule 18    expression -> if expression
Rule 19    expression -> function expression
Rule 20    expression -> empty
Rule 21    expression -> while expression
Rule 22    expression -> for expression
Rule 23    expression -> break
Rule 24    break -> BREAK SEMICOLON
Rule 25    declarations -> declaration declarations
Rule 26    declarations -> empty
Rule 27    declaration -> IDENTIFIER another_identifiers COLON type SEMICOLON
Rule 28    another_identifiers -> ZAPYATAYA IDENTIFIER another_identifiers
Rule 29    another_identifiers -> empty
Rule 30    type -> TYPE_STRING
Rule 31    type -> TYPE_INTEGER
Rule 32    type -> TYPE_REAL
Rule 33    empty -> <empty>
Rule 34    assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON
Rule 35    assignment -> identifier ASSIGNMENT function SEMICOLON
Rule 36    assignment -> identifier ASSIGNMENT function
Rule 37    assignment -> identifier ASSIGNMENT arithmetic_expression
Rule 38    arithmetic_expression -> NUMBER
Rule 39    arithmetic_expression -> identifier
Rule 40    arithmetic_expression -> STRING
Rule 41    arithmetic_expression -> function
Rule 42    arithmetic_expression -> identifier PLUS arithmetic_expression
Rule 43    arithmetic_expression -> identifier MINUS arithmetic_expression
Rule 44    arithmetic_expression -> identifier MUL arithmetic_expression
Rule 45    arithmetic_expression -> identifier DIV arithmetic_expression
Rule 46    arithmetic_expression -> NUMBER PLUS arithmetic_expression
Rule 47    arithmetic_expression -> NUMBER MINUS arithmetic_expression
Rule 48    arithmetic_expression -> NUMBER MUL arithmetic_expression
Rule 49    arithmetic_expression -> NUMBER DIV arithmetic_expression
Rule 50    arithmetic_expression -> function PLUS arithmetic_expression
Rule 51    arithmetic_expression -> function MINUS arithmetic_expression
Rule 52    arithmetic_expression -> function MUL arithmetic_expression
Rule 53    arithmetic_expression -> function DIV arithmetic_expression
Rule 54    arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
Rule 55    arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression
Rule 56    arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression
Rule 57    arithmetic_expression -> arithmetic_expression MUL arithmetic_expression
Rule 58    arithmetic_expression -> arithmetic_expression DIV arithmetic_expression
Rule 59    arithmetic_expression -> arithmetic_expression SEMICOLON
Rule 60    function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
Rule 61    function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
Rule 62    function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
Rule 63    function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
Rule 64    function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
Rule 65    function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
Rule 66    function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
Rule 67    predicate -> arithmetic_expression COMPARISON arithmetic_expression
Rule 68    predicate -> arithmetic_expression EQUALITY arithmetic_expression
Rule 69    predicate -> arithmetic_expression NON_EQUALITY arithmetic_expression
Rule 70    predicate -> arithmetic_expression NON_STRICT_COMPARISON arithmetic_expression
Rule 71    predicate -> arithmetic_expression IN identifier
Rule 72    predicate -> arithmetic_expression IN matrix
Rule 73    some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET AND some_predicates
Rule 74    some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET OR some_predicates
Rule 75    some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET
Rule 76    some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET AND some_predicates
Rule 77    some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET OR some_predicates
Rule 78    some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET
Rule 79    while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block
Rule 80    while -> WHILE some_predicates DO block
Rule 81    for -> FOR assignment TO arithmetic_expression DO block
Rule 82    for -> FOR assignment DOWNTO arithmetic_expression DO block
Rule 83    if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block
Rule 84    if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else
Rule 85    else -> ELSE block

Terminals, with rules where they appear

AND                  : 73 76
ASSIGNMENT           : 34 35 36 37
BEGIN                : 12 13
BREAK                : 24
CLOSE_BRACKET        : 60 61 62 63 64 65 66 73 74 75 76 76 77 77 78 78 79 83 84
CLOSE_SQUARE_BRACKET : 5 54
COLON                : 27
COMPARISON           : 67
CONST                : 1 2 3
DIV                  : 45 49 53 58
DO                   : 79 80 81 82
DOWNTO               : 82
ELSE                 : 85
END                  : 12 13
EQUALITY             : 1 2 3 68
FOR                  : 81 82
IDENTIFIER           : 1 2 3 6 9 15 16 27 28
IF                   : 83 84
IN                   : 71 72
INC                  : 65
LENGTH               : 64 66
MINUS                : 43 47 51 56
MUL                  : 44 48 52 57
NON_EQUALITY         : 69
NON_STRICT_COMPARISON : 70
NOT                  : 76 77 78
NUMBER               : 1 7 10 38 46 47 48 49
OPEN_BRACKET         : 60 61 62 63 64 65 66 73 74 75 76 76 77 77 78 78 79 83 84
OPEN_SQUARE_BRACKET  : 5 54
OR                   : 74 77
PLUS                 : 42 46 50 55
POINT                : 12
READ                 : 62
READLN               : 63
SEMICOLON            : 1 2 3 13 16 24 27 34 35 59 60 61 62 63 65 66
STRING               : 2 8 11 40
THEN                 : 83 84
TO                   : 81
TYPE_INTEGER         : 31
TYPE_REAL            : 32
TYPE_STRING          : 30
VAR                  : 12
WHILE                : 79 80
WRITE                : 60
WRITELN              : 61
ZAPYATAYA            : 6 7 8 28
error                : 

Nonterminals, with rules where they appear

another_identifiers  : 27 28
arithmetic_expression : 34 37 42 43 44 45 46 47 48 49 50 51 52 53 54 55 55 56 56 57 57 58 58 59 60 61 67 67 68 68 69 69 70 70 71 72 81 82
assignment           : 17 81 82
begin_program        : 1 2 3 4
block                : 79 80 81 82 83 84 85
body                 : 12 13
break                : 23
consts               : 0
declaration          : 25
declarations         : 12 25
else                 : 84
empty                : 20 26 29
expression           : 14 17 18 19 21 22
for                  : 22
function             : 19 35 36 41 50 51 52 53
identifier           : 34 35 36 37 39 42 43 44 45 54 62 63 64 65 66 71
identifiers          : 5 6 7 8
if                   : 18
matrix               : 3 72
predicate            : 73 74 75 76 77 78 79 83 84
some_predicates      : 73 74 76 77 80
type                 : 27
while                : 21

Parsing method: LALR

state 0

    (0) S' -> . consts
    (1) consts -> . CONST IDENTIFIER EQUALITY NUMBER SEMICOLON begin_program
    (2) consts -> . CONST IDENTIFIER EQUALITY STRING SEMICOLON begin_program
    (3) consts -> . CONST IDENTIFIER EQUALITY matrix SEMICOLON begin_program
    (4) consts -> . begin_program
    (12) begin_program -> . VAR declarations BEGIN body END POINT

    CONST           shift and go to state 3
    VAR             shift and go to state 1

    consts                         shift and go to state 4
    begin_program                  shift and go to state 2

state 1

    (12) begin_program -> VAR . declarations BEGIN body END POINT
    (25) declarations -> . declaration declarations
    (26) declarations -> . empty
    (27) declaration -> . IDENTIFIER another_identifiers COLON type SEMICOLON
    (33) empty -> .

    IDENTIFIER      shift and go to state 6
    BEGIN           reduce using rule 33 (empty -> .)

    declaration                    shift and go to state 5
    declarations                   shift and go to state 8
    empty                          shift and go to state 7

state 2

    (4) consts -> begin_program .

    $end            reduce using rule 4 (consts -> begin_program .)


state 3

    (1) consts -> CONST . IDENTIFIER EQUALITY NUMBER SEMICOLON begin_program
    (2) consts -> CONST . IDENTIFIER EQUALITY STRING SEMICOLON begin_program
    (3) consts -> CONST . IDENTIFIER EQUALITY matrix SEMICOLON begin_program

    IDENTIFIER      shift and go to state 9


state 4

    (0) S' -> consts .



state 5

    (25) declarations -> declaration . declarations
    (25) declarations -> . declaration declarations
    (26) declarations -> . empty
    (27) declaration -> . IDENTIFIER another_identifiers COLON type SEMICOLON
    (33) empty -> .

    IDENTIFIER      shift and go to state 6
    BEGIN           reduce using rule 33 (empty -> .)

    empty                          shift and go to state 7
    declaration                    shift and go to state 5
    declarations                   shift and go to state 10

state 6

    (27) declaration -> IDENTIFIER . another_identifiers COLON type SEMICOLON
    (28) another_identifiers -> . ZAPYATAYA IDENTIFIER another_identifiers
    (29) another_identifiers -> . empty
    (33) empty -> .

    ZAPYATAYA       shift and go to state 13
    COLON           reduce using rule 33 (empty -> .)

    another_identifiers            shift and go to state 11
    empty                          shift and go to state 12

state 7

    (26) declarations -> empty .

    BEGIN           reduce using rule 26 (declarations -> empty .)


state 8

    (12) begin_program -> VAR declarations . BEGIN body END POINT

    BEGIN           shift and go to state 14


state 9

    (1) consts -> CONST IDENTIFIER . EQUALITY NUMBER SEMICOLON begin_program
    (2) consts -> CONST IDENTIFIER . EQUALITY STRING SEMICOLON begin_program
    (3) consts -> CONST IDENTIFIER . EQUALITY matrix SEMICOLON begin_program

    EQUALITY        shift and go to state 15


state 10

    (25) declarations -> declaration declarations .

    BEGIN           reduce using rule 25 (declarations -> declaration declarations .)


state 11

    (27) declaration -> IDENTIFIER another_identifiers . COLON type SEMICOLON

    COLON           shift and go to state 16


state 12

    (29) another_identifiers -> empty .

    COLON           reduce using rule 29 (another_identifiers -> empty .)


state 13

    (28) another_identifiers -> ZAPYATAYA . IDENTIFIER another_identifiers

    IDENTIFIER      shift and go to state 17


state 14

    (12) begin_program -> VAR declarations BEGIN . body END POINT
    (14) body -> . expression
    (17) expression -> . assignment expression
    (18) expression -> . if expression
    (19) expression -> . function expression
    (20) expression -> . empty
    (21) expression -> . while expression
    (22) expression -> . for expression
    (23) expression -> . break
    (34) assignment -> . identifier ASSIGNMENT arithmetic_expression SEMICOLON
    (35) assignment -> . identifier ASSIGNMENT function SEMICOLON
    (36) assignment -> . identifier ASSIGNMENT function
    (37) assignment -> . identifier ASSIGNMENT arithmetic_expression
    (83) if -> . IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block
    (84) if -> . IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (33) empty -> .
    (79) while -> . WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block
    (80) while -> . WHILE some_predicates DO block
    (81) for -> . FOR assignment TO arithmetic_expression DO block
    (82) for -> . FOR assignment DOWNTO arithmetic_expression DO block
    (24) break -> . BREAK SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON

    IF              shift and go to state 27
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30
    END             reduce using rule 33 (empty -> .)
    WHILE           shift and go to state 37
    FOR             shift and go to state 19
    BREAK           shift and go to state 29
    IDENTIFIER      shift and go to state 34

    break                          shift and go to state 31
    while                          shift and go to state 32
    for                            shift and go to state 33
    empty                          shift and go to state 35
    expression                     shift and go to state 36
    assignment                     shift and go to state 21
    identifier                     shift and go to state 22
    if                             shift and go to state 23
    body                           shift and go to state 38
    function                       shift and go to state 25

state 15

    (1) consts -> CONST IDENTIFIER EQUALITY . NUMBER SEMICOLON begin_program
    (2) consts -> CONST IDENTIFIER EQUALITY . STRING SEMICOLON begin_program
    (3) consts -> CONST IDENTIFIER EQUALITY . matrix SEMICOLON begin_program
    (5) matrix -> . OPEN_SQUARE_BRACKET identifiers CLOSE_SQUARE_BRACKET

    NUMBER          shift and go to state 39
    STRING          shift and go to state 41
    OPEN_SQUARE_BRACKET shift and go to state 42

    matrix                         shift and go to state 40

state 16

    (27) declaration -> IDENTIFIER another_identifiers COLON . type SEMICOLON
    (30) type -> . TYPE_STRING
    (31) type -> . TYPE_INTEGER
    (32) type -> . TYPE_REAL

    TYPE_STRING     shift and go to state 44
    TYPE_INTEGER    shift and go to state 43
    TYPE_REAL       shift and go to state 46

    type                           shift and go to state 45

state 17

    (28) another_identifiers -> ZAPYATAYA IDENTIFIER . another_identifiers
    (28) another_identifiers -> . ZAPYATAYA IDENTIFIER another_identifiers
    (29) another_identifiers -> . empty
    (33) empty -> .

    ZAPYATAYA       shift and go to state 13
    COLON           reduce using rule 33 (empty -> .)

    another_identifiers            shift and go to state 47
    empty                          shift and go to state 12

state 18

    (61) function -> WRITELN . OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON

    OPEN_BRACKET    shift and go to state 48


state 19

    (81) for -> FOR . assignment TO arithmetic_expression DO block
    (82) for -> FOR . assignment DOWNTO arithmetic_expression DO block
    (34) assignment -> . identifier ASSIGNMENT arithmetic_expression SEMICOLON
    (35) assignment -> . identifier ASSIGNMENT function SEMICOLON
    (36) assignment -> . identifier ASSIGNMENT function
    (37) assignment -> . identifier ASSIGNMENT arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 34

    assignment                     shift and go to state 49
    identifier                     shift and go to state 22

state 20

    (64) function -> LENGTH . OPEN_BRACKET identifier CLOSE_BRACKET
    (66) function -> LENGTH . OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    OPEN_BRACKET    shift and go to state 50


state 21

    (17) expression -> assignment . expression
    (17) expression -> . assignment expression
    (18) expression -> . if expression
    (19) expression -> . function expression
    (20) expression -> . empty
    (21) expression -> . while expression
    (22) expression -> . for expression
    (23) expression -> . break
    (34) assignment -> . identifier ASSIGNMENT arithmetic_expression SEMICOLON
    (35) assignment -> . identifier ASSIGNMENT function SEMICOLON
    (36) assignment -> . identifier ASSIGNMENT function
    (37) assignment -> . identifier ASSIGNMENT arithmetic_expression
    (83) if -> . IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block
    (84) if -> . IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (33) empty -> .
    (79) while -> . WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block
    (80) while -> . WHILE some_predicates DO block
    (81) for -> . FOR assignment TO arithmetic_expression DO block
    (82) for -> . FOR assignment DOWNTO arithmetic_expression DO block
    (24) break -> . BREAK SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON

    IF              shift and go to state 27
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30
    END             reduce using rule 33 (empty -> .)
    WHILE           shift and go to state 37
    FOR             shift and go to state 19
    BREAK           shift and go to state 29
    IDENTIFIER      shift and go to state 34

    break                          shift and go to state 31
    while                          shift and go to state 32
    for                            shift and go to state 33
    empty                          shift and go to state 35
    expression                     shift and go to state 51
    assignment                     shift and go to state 21
    identifier                     shift and go to state 22
    if                             shift and go to state 23
    function                       shift and go to state 25

state 22

    (34) assignment -> identifier . ASSIGNMENT arithmetic_expression SEMICOLON
    (35) assignment -> identifier . ASSIGNMENT function SEMICOLON
    (36) assignment -> identifier . ASSIGNMENT function
    (37) assignment -> identifier . ASSIGNMENT arithmetic_expression

    ASSIGNMENT      shift and go to state 52


state 23

    (18) expression -> if . expression
    (17) expression -> . assignment expression
    (18) expression -> . if expression
    (19) expression -> . function expression
    (20) expression -> . empty
    (21) expression -> . while expression
    (22) expression -> . for expression
    (23) expression -> . break
    (34) assignment -> . identifier ASSIGNMENT arithmetic_expression SEMICOLON
    (35) assignment -> . identifier ASSIGNMENT function SEMICOLON
    (36) assignment -> . identifier ASSIGNMENT function
    (37) assignment -> . identifier ASSIGNMENT arithmetic_expression
    (83) if -> . IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block
    (84) if -> . IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (33) empty -> .
    (79) while -> . WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block
    (80) while -> . WHILE some_predicates DO block
    (81) for -> . FOR assignment TO arithmetic_expression DO block
    (82) for -> . FOR assignment DOWNTO arithmetic_expression DO block
    (24) break -> . BREAK SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON

    IF              shift and go to state 27
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30
    END             reduce using rule 33 (empty -> .)
    WHILE           shift and go to state 37
    FOR             shift and go to state 19
    BREAK           shift and go to state 29
    IDENTIFIER      shift and go to state 34

    break                          shift and go to state 31
    while                          shift and go to state 32
    for                            shift and go to state 33
    empty                          shift and go to state 35
    expression                     shift and go to state 53
    assignment                     shift and go to state 21
    identifier                     shift and go to state 22
    if                             shift and go to state 23
    function                       shift and go to state 25

state 24

    (62) function -> READ . OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    OPEN_BRACKET    shift and go to state 54


state 25

    (19) expression -> function . expression
    (17) expression -> . assignment expression
    (18) expression -> . if expression
    (19) expression -> . function expression
    (20) expression -> . empty
    (21) expression -> . while expression
    (22) expression -> . for expression
    (23) expression -> . break
    (34) assignment -> . identifier ASSIGNMENT arithmetic_expression SEMICOLON
    (35) assignment -> . identifier ASSIGNMENT function SEMICOLON
    (36) assignment -> . identifier ASSIGNMENT function
    (37) assignment -> . identifier ASSIGNMENT arithmetic_expression
    (83) if -> . IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block
    (84) if -> . IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (33) empty -> .
    (79) while -> . WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block
    (80) while -> . WHILE some_predicates DO block
    (81) for -> . FOR assignment TO arithmetic_expression DO block
    (82) for -> . FOR assignment DOWNTO arithmetic_expression DO block
    (24) break -> . BREAK SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON

    IF              shift and go to state 27
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30
    END             reduce using rule 33 (empty -> .)
    WHILE           shift and go to state 37
    FOR             shift and go to state 19
    BREAK           shift and go to state 29
    IDENTIFIER      shift and go to state 34

    break                          shift and go to state 31
    while                          shift and go to state 32
    for                            shift and go to state 33
    empty                          shift and go to state 35
    expression                     shift and go to state 55
    assignment                     shift and go to state 21
    identifier                     shift and go to state 22
    if                             shift and go to state 23
    function                       shift and go to state 25

state 26

    (60) function -> WRITE . OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON

    OPEN_BRACKET    shift and go to state 56


state 27

    (83) if -> IF . OPEN_BRACKET predicate CLOSE_BRACKET THEN block
    (84) if -> IF . OPEN_BRACKET predicate CLOSE_BRACKET THEN block else

    OPEN_BRACKET    shift and go to state 57


state 28

    (63) function -> READLN . OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    OPEN_BRACKET    shift and go to state 58


state 29

    (24) break -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 59


state 30

    (65) function -> INC . OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    OPEN_BRACKET    shift and go to state 60


state 31

    (23) expression -> break .

    END             reduce using rule 23 (expression -> break .)


state 32

    (21) expression -> while . expression
    (17) expression -> . assignment expression
    (18) expression -> . if expression
    (19) expression -> . function expression
    (20) expression -> . empty
    (21) expression -> . while expression
    (22) expression -> . for expression
    (23) expression -> . break
    (34) assignment -> . identifier ASSIGNMENT arithmetic_expression SEMICOLON
    (35) assignment -> . identifier ASSIGNMENT function SEMICOLON
    (36) assignment -> . identifier ASSIGNMENT function
    (37) assignment -> . identifier ASSIGNMENT arithmetic_expression
    (83) if -> . IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block
    (84) if -> . IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (33) empty -> .
    (79) while -> . WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block
    (80) while -> . WHILE some_predicates DO block
    (81) for -> . FOR assignment TO arithmetic_expression DO block
    (82) for -> . FOR assignment DOWNTO arithmetic_expression DO block
    (24) break -> . BREAK SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON

    IF              shift and go to state 27
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30
    END             reduce using rule 33 (empty -> .)
    WHILE           shift and go to state 37
    FOR             shift and go to state 19
    BREAK           shift and go to state 29
    IDENTIFIER      shift and go to state 34

    break                          shift and go to state 31
    while                          shift and go to state 32
    for                            shift and go to state 33
    empty                          shift and go to state 35
    expression                     shift and go to state 61
    assignment                     shift and go to state 21
    identifier                     shift and go to state 22
    if                             shift and go to state 23
    function                       shift and go to state 25

state 33

    (22) expression -> for . expression
    (17) expression -> . assignment expression
    (18) expression -> . if expression
    (19) expression -> . function expression
    (20) expression -> . empty
    (21) expression -> . while expression
    (22) expression -> . for expression
    (23) expression -> . break
    (34) assignment -> . identifier ASSIGNMENT arithmetic_expression SEMICOLON
    (35) assignment -> . identifier ASSIGNMENT function SEMICOLON
    (36) assignment -> . identifier ASSIGNMENT function
    (37) assignment -> . identifier ASSIGNMENT arithmetic_expression
    (83) if -> . IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block
    (84) if -> . IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (33) empty -> .
    (79) while -> . WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block
    (80) while -> . WHILE some_predicates DO block
    (81) for -> . FOR assignment TO arithmetic_expression DO block
    (82) for -> . FOR assignment DOWNTO arithmetic_expression DO block
    (24) break -> . BREAK SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON

    IF              shift and go to state 27
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30
    END             reduce using rule 33 (empty -> .)
    WHILE           shift and go to state 37
    FOR             shift and go to state 19
    BREAK           shift and go to state 29
    IDENTIFIER      shift and go to state 34

    break                          shift and go to state 31
    while                          shift and go to state 32
    for                            shift and go to state 33
    empty                          shift and go to state 35
    expression                     shift and go to state 62
    assignment                     shift and go to state 21
    identifier                     shift and go to state 22
    if                             shift and go to state 23
    function                       shift and go to state 25

state 34

    (15) identifier -> IDENTIFIER .
    (16) identifier -> IDENTIFIER . SEMICOLON

  ! shift/reduce conflict for SEMICOLON resolved as shift
    PLUS            reduce using rule 15 (identifier -> IDENTIFIER .)
    MINUS           reduce using rule 15 (identifier -> IDENTIFIER .)
    MUL             reduce using rule 15 (identifier -> IDENTIFIER .)
    DIV             reduce using rule 15 (identifier -> IDENTIFIER .)
    OPEN_SQUARE_BRACKET reduce using rule 15 (identifier -> IDENTIFIER .)
    CLOSE_BRACKET   reduce using rule 15 (identifier -> IDENTIFIER .)
    IF              reduce using rule 15 (identifier -> IDENTIFIER .)
    WRITE           reduce using rule 15 (identifier -> IDENTIFIER .)
    WRITELN         reduce using rule 15 (identifier -> IDENTIFIER .)
    READ            reduce using rule 15 (identifier -> IDENTIFIER .)
    READLN          reduce using rule 15 (identifier -> IDENTIFIER .)
    LENGTH          reduce using rule 15 (identifier -> IDENTIFIER .)
    INC             reduce using rule 15 (identifier -> IDENTIFIER .)
    WHILE           reduce using rule 15 (identifier -> IDENTIFIER .)
    FOR             reduce using rule 15 (identifier -> IDENTIFIER .)
    BREAK           reduce using rule 15 (identifier -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 15 (identifier -> IDENTIFIER .)
    END             reduce using rule 15 (identifier -> IDENTIFIER .)
    TO              reduce using rule 15 (identifier -> IDENTIFIER .)
    DOWNTO          reduce using rule 15 (identifier -> IDENTIFIER .)
    COMPARISON      reduce using rule 15 (identifier -> IDENTIFIER .)
    EQUALITY        reduce using rule 15 (identifier -> IDENTIFIER .)
    NON_EQUALITY    reduce using rule 15 (identifier -> IDENTIFIER .)
    NON_STRICT_COMPARISON reduce using rule 15 (identifier -> IDENTIFIER .)
    IN              reduce using rule 15 (identifier -> IDENTIFIER .)
    DO              reduce using rule 15 (identifier -> IDENTIFIER .)
    CLOSE_SQUARE_BRACKET reduce using rule 15 (identifier -> IDENTIFIER .)
    ASSIGNMENT      reduce using rule 15 (identifier -> IDENTIFIER .)
    SEMICOLON       shift and go to state 63

  ! SEMICOLON       [ reduce using rule 15 (identifier -> IDENTIFIER .) ]


state 35

    (20) expression -> empty .

    END             reduce using rule 20 (expression -> empty .)


state 36

    (14) body -> expression .

    END             reduce using rule 14 (body -> expression .)


state 37

    (79) while -> WHILE . OPEN_BRACKET predicate CLOSE_BRACKET DO block
    (80) while -> WHILE . some_predicates DO block
    (73) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET AND some_predicates
    (74) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET OR some_predicates
    (75) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET
    (76) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET AND some_predicates
    (77) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET OR some_predicates
    (78) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 65

    some_predicates                shift and go to state 64

state 38

    (12) begin_program -> VAR declarations BEGIN body . END POINT

    END             shift and go to state 66


state 39

    (1) consts -> CONST IDENTIFIER EQUALITY NUMBER . SEMICOLON begin_program

    SEMICOLON       shift and go to state 67


state 40

    (3) consts -> CONST IDENTIFIER EQUALITY matrix . SEMICOLON begin_program

    SEMICOLON       shift and go to state 68


state 41

    (2) consts -> CONST IDENTIFIER EQUALITY STRING . SEMICOLON begin_program

    SEMICOLON       shift and go to state 69


state 42

    (5) matrix -> OPEN_SQUARE_BRACKET . identifiers CLOSE_SQUARE_BRACKET
    (6) identifiers -> . IDENTIFIER ZAPYATAYA identifiers
    (7) identifiers -> . NUMBER ZAPYATAYA identifiers
    (8) identifiers -> . STRING ZAPYATAYA identifiers
    (9) identifiers -> . IDENTIFIER
    (10) identifiers -> . NUMBER
    (11) identifiers -> . STRING

    IDENTIFIER      shift and go to state 73
    NUMBER          shift and go to state 72
    STRING          shift and go to state 70

    identifiers                    shift and go to state 71

state 43

    (31) type -> TYPE_INTEGER .

    SEMICOLON       reduce using rule 31 (type -> TYPE_INTEGER .)


state 44

    (30) type -> TYPE_STRING .

    SEMICOLON       reduce using rule 30 (type -> TYPE_STRING .)


state 45

    (27) declaration -> IDENTIFIER another_identifiers COLON type . SEMICOLON

    SEMICOLON       shift and go to state 74


state 46

    (32) type -> TYPE_REAL .

    SEMICOLON       reduce using rule 32 (type -> TYPE_REAL .)


state 47

    (28) another_identifiers -> ZAPYATAYA IDENTIFIER another_identifiers .

    COLON           reduce using rule 28 (another_identifiers -> ZAPYATAYA IDENTIFIER another_identifiers .)


state 48

    (61) function -> WRITELN OPEN_BRACKET . arithmetic_expression CLOSE_BRACKET SEMICOLON
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    function                       shift and go to state 79
    arithmetic_expression          shift and go to state 76
    identifier                     shift and go to state 77

state 49

    (81) for -> FOR assignment . TO arithmetic_expression DO block
    (82) for -> FOR assignment . DOWNTO arithmetic_expression DO block

    TO              shift and go to state 80
    DOWNTO          shift and go to state 81


state 50

    (64) function -> LENGTH OPEN_BRACKET . identifier CLOSE_BRACKET
    (66) function -> LENGTH OPEN_BRACKET . identifier CLOSE_BRACKET SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 34

    identifier                     shift and go to state 82

state 51

    (17) expression -> assignment expression .

    END             reduce using rule 17 (expression -> assignment expression .)


state 52

    (34) assignment -> identifier ASSIGNMENT . arithmetic_expression SEMICOLON
    (35) assignment -> identifier ASSIGNMENT . function SEMICOLON
    (36) assignment -> identifier ASSIGNMENT . function
    (37) assignment -> identifier ASSIGNMENT . arithmetic_expression
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON

    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30
    IDENTIFIER      shift and go to state 34

    function                       shift and go to state 83
    arithmetic_expression          shift and go to state 84
    identifier                     shift and go to state 77

state 53

    (18) expression -> if expression .

    END             reduce using rule 18 (expression -> if expression .)


state 54

    (62) function -> READ OPEN_BRACKET . identifier CLOSE_BRACKET SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 34

    identifier                     shift and go to state 85

state 55

    (19) expression -> function expression .

    END             reduce using rule 19 (expression -> function expression .)


state 56

    (60) function -> WRITE OPEN_BRACKET . arithmetic_expression CLOSE_BRACKET SEMICOLON
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    function                       shift and go to state 79
    arithmetic_expression          shift and go to state 86
    identifier                     shift and go to state 77

state 57

    (83) if -> IF OPEN_BRACKET . predicate CLOSE_BRACKET THEN block
    (84) if -> IF OPEN_BRACKET . predicate CLOSE_BRACKET THEN block else
    (67) predicate -> . arithmetic_expression COMPARISON arithmetic_expression
    (68) predicate -> . arithmetic_expression EQUALITY arithmetic_expression
    (69) predicate -> . arithmetic_expression NON_EQUALITY arithmetic_expression
    (70) predicate -> . arithmetic_expression NON_STRICT_COMPARISON arithmetic_expression
    (71) predicate -> . arithmetic_expression IN identifier
    (72) predicate -> . arithmetic_expression IN matrix
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    arithmetic_expression          shift and go to state 87
    identifier                     shift and go to state 77
    predicate                      shift and go to state 88
    function                       shift and go to state 79

state 58

    (63) function -> READLN OPEN_BRACKET . identifier CLOSE_BRACKET SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 34

    identifier                     shift and go to state 89

state 59

    (24) break -> BREAK SEMICOLON .

    END             reduce using rule 24 (break -> BREAK SEMICOLON .)


state 60

    (65) function -> INC OPEN_BRACKET . identifier CLOSE_BRACKET SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 34

    identifier                     shift and go to state 90

state 61

    (21) expression -> while expression .

    END             reduce using rule 21 (expression -> while expression .)


state 62

    (22) expression -> for expression .

    END             reduce using rule 22 (expression -> for expression .)


state 63

    (16) identifier -> IDENTIFIER SEMICOLON .

    PLUS            reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)
    MINUS           reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)
    MUL             reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)
    DIV             reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)
    OPEN_SQUARE_BRACKET reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)
    SEMICOLON       reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)
    IF              reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)
    WRITE           reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)
    WRITELN         reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)
    READ            reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)
    READLN          reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)
    LENGTH          reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)
    INC             reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)
    BREAK           reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)
    END             reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)
    TO              reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)
    DOWNTO          reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)
    COMPARISON      reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)
    EQUALITY        reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)
    NON_EQUALITY    reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)
    NON_STRICT_COMPARISON reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)
    IN              reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)
    DO              reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)
    CLOSE_SQUARE_BRACKET reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)
    ASSIGNMENT      reduce using rule 16 (identifier -> IDENTIFIER SEMICOLON .)


state 64

    (80) while -> WHILE some_predicates . DO block

    DO              shift and go to state 91


state 65

    (79) while -> WHILE OPEN_BRACKET . predicate CLOSE_BRACKET DO block
    (73) some_predicates -> OPEN_BRACKET . predicate CLOSE_BRACKET AND some_predicates
    (74) some_predicates -> OPEN_BRACKET . predicate CLOSE_BRACKET OR some_predicates
    (75) some_predicates -> OPEN_BRACKET . predicate CLOSE_BRACKET
    (76) some_predicates -> OPEN_BRACKET . NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET AND some_predicates
    (77) some_predicates -> OPEN_BRACKET . NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET OR some_predicates
    (78) some_predicates -> OPEN_BRACKET . NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET
    (67) predicate -> . arithmetic_expression COMPARISON arithmetic_expression
    (68) predicate -> . arithmetic_expression EQUALITY arithmetic_expression
    (69) predicate -> . arithmetic_expression NON_EQUALITY arithmetic_expression
    (70) predicate -> . arithmetic_expression NON_STRICT_COMPARISON arithmetic_expression
    (71) predicate -> . arithmetic_expression IN identifier
    (72) predicate -> . arithmetic_expression IN matrix
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NOT             shift and go to state 92
    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    arithmetic_expression          shift and go to state 87
    identifier                     shift and go to state 77
    predicate                      shift and go to state 93
    function                       shift and go to state 79

state 66

    (12) begin_program -> VAR declarations BEGIN body END . POINT

    POINT           shift and go to state 94


state 67

    (1) consts -> CONST IDENTIFIER EQUALITY NUMBER SEMICOLON . begin_program
    (12) begin_program -> . VAR declarations BEGIN body END POINT

    VAR             shift and go to state 1

    begin_program                  shift and go to state 95

state 68

    (3) consts -> CONST IDENTIFIER EQUALITY matrix SEMICOLON . begin_program
    (12) begin_program -> . VAR declarations BEGIN body END POINT

    VAR             shift and go to state 1

    begin_program                  shift and go to state 96

state 69

    (2) consts -> CONST IDENTIFIER EQUALITY STRING SEMICOLON . begin_program
    (12) begin_program -> . VAR declarations BEGIN body END POINT

    VAR             shift and go to state 1

    begin_program                  shift and go to state 97

state 70

    (8) identifiers -> STRING . ZAPYATAYA identifiers
    (11) identifiers -> STRING .

    ZAPYATAYA       shift and go to state 98
    CLOSE_SQUARE_BRACKET reduce using rule 11 (identifiers -> STRING .)


state 71

    (5) matrix -> OPEN_SQUARE_BRACKET identifiers . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET shift and go to state 99


state 72

    (7) identifiers -> NUMBER . ZAPYATAYA identifiers
    (10) identifiers -> NUMBER .

    ZAPYATAYA       shift and go to state 100
    CLOSE_SQUARE_BRACKET reduce using rule 10 (identifiers -> NUMBER .)


state 73

    (6) identifiers -> IDENTIFIER . ZAPYATAYA identifiers
    (9) identifiers -> IDENTIFIER .

    ZAPYATAYA       shift and go to state 101
    CLOSE_SQUARE_BRACKET reduce using rule 9 (identifiers -> IDENTIFIER .)


state 74

    (27) declaration -> IDENTIFIER another_identifiers COLON type SEMICOLON .

    IDENTIFIER      reduce using rule 27 (declaration -> IDENTIFIER another_identifiers COLON type SEMICOLON .)
    BEGIN           reduce using rule 27 (declaration -> IDENTIFIER another_identifiers COLON type SEMICOLON .)


state 75

    (38) arithmetic_expression -> NUMBER .
    (46) arithmetic_expression -> NUMBER . PLUS arithmetic_expression
    (47) arithmetic_expression -> NUMBER . MINUS arithmetic_expression
    (48) arithmetic_expression -> NUMBER . MUL arithmetic_expression
    (49) arithmetic_expression -> NUMBER . DIV arithmetic_expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    CLOSE_SQUARE_BRACKET reduce using rule 38 (arithmetic_expression -> NUMBER .)
    SEMICOLON       reduce using rule 38 (arithmetic_expression -> NUMBER .)
    CLOSE_BRACKET   reduce using rule 38 (arithmetic_expression -> NUMBER .)
    IF              reduce using rule 38 (arithmetic_expression -> NUMBER .)
    WRITE           reduce using rule 38 (arithmetic_expression -> NUMBER .)
    WRITELN         reduce using rule 38 (arithmetic_expression -> NUMBER .)
    READ            reduce using rule 38 (arithmetic_expression -> NUMBER .)
    READLN          reduce using rule 38 (arithmetic_expression -> NUMBER .)
    LENGTH          reduce using rule 38 (arithmetic_expression -> NUMBER .)
    INC             reduce using rule 38 (arithmetic_expression -> NUMBER .)
    WHILE           reduce using rule 38 (arithmetic_expression -> NUMBER .)
    FOR             reduce using rule 38 (arithmetic_expression -> NUMBER .)
    BREAK           reduce using rule 38 (arithmetic_expression -> NUMBER .)
    IDENTIFIER      reduce using rule 38 (arithmetic_expression -> NUMBER .)
    END             reduce using rule 38 (arithmetic_expression -> NUMBER .)
    TO              reduce using rule 38 (arithmetic_expression -> NUMBER .)
    DOWNTO          reduce using rule 38 (arithmetic_expression -> NUMBER .)
    COMPARISON      reduce using rule 38 (arithmetic_expression -> NUMBER .)
    EQUALITY        reduce using rule 38 (arithmetic_expression -> NUMBER .)
    NON_EQUALITY    reduce using rule 38 (arithmetic_expression -> NUMBER .)
    NON_STRICT_COMPARISON reduce using rule 38 (arithmetic_expression -> NUMBER .)
    IN              reduce using rule 38 (arithmetic_expression -> NUMBER .)
    DO              reduce using rule 38 (arithmetic_expression -> NUMBER .)
    PLUS            shift and go to state 104
    MINUS           shift and go to state 102
    MUL             shift and go to state 103
    DIV             shift and go to state 105

  ! PLUS            [ reduce using rule 38 (arithmetic_expression -> NUMBER .) ]
  ! MINUS           [ reduce using rule 38 (arithmetic_expression -> NUMBER .) ]
  ! MUL             [ reduce using rule 38 (arithmetic_expression -> NUMBER .) ]
  ! DIV             [ reduce using rule 38 (arithmetic_expression -> NUMBER .) ]


state 76

    (61) function -> WRITELN OPEN_BRACKET arithmetic_expression . CLOSE_BRACKET SEMICOLON
    (55) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (58) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression
    (59) arithmetic_expression -> arithmetic_expression . SEMICOLON

    CLOSE_BRACKET   shift and go to state 108
    PLUS            shift and go to state 109
    MINUS           shift and go to state 107
    MUL             shift and go to state 110
    DIV             shift and go to state 111
    SEMICOLON       shift and go to state 106


state 77

    (39) arithmetic_expression -> identifier .
    (42) arithmetic_expression -> identifier . PLUS arithmetic_expression
    (43) arithmetic_expression -> identifier . MINUS arithmetic_expression
    (44) arithmetic_expression -> identifier . MUL arithmetic_expression
    (45) arithmetic_expression -> identifier . DIV arithmetic_expression
    (54) arithmetic_expression -> identifier . OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    CLOSE_SQUARE_BRACKET reduce using rule 39 (arithmetic_expression -> identifier .)
    SEMICOLON       reduce using rule 39 (arithmetic_expression -> identifier .)
    CLOSE_BRACKET   reduce using rule 39 (arithmetic_expression -> identifier .)
    IF              reduce using rule 39 (arithmetic_expression -> identifier .)
    WRITE           reduce using rule 39 (arithmetic_expression -> identifier .)
    WRITELN         reduce using rule 39 (arithmetic_expression -> identifier .)
    READ            reduce using rule 39 (arithmetic_expression -> identifier .)
    READLN          reduce using rule 39 (arithmetic_expression -> identifier .)
    LENGTH          reduce using rule 39 (arithmetic_expression -> identifier .)
    INC             reduce using rule 39 (arithmetic_expression -> identifier .)
    WHILE           reduce using rule 39 (arithmetic_expression -> identifier .)
    FOR             reduce using rule 39 (arithmetic_expression -> identifier .)
    BREAK           reduce using rule 39 (arithmetic_expression -> identifier .)
    IDENTIFIER      reduce using rule 39 (arithmetic_expression -> identifier .)
    END             reduce using rule 39 (arithmetic_expression -> identifier .)
    TO              reduce using rule 39 (arithmetic_expression -> identifier .)
    DOWNTO          reduce using rule 39 (arithmetic_expression -> identifier .)
    COMPARISON      reduce using rule 39 (arithmetic_expression -> identifier .)
    EQUALITY        reduce using rule 39 (arithmetic_expression -> identifier .)
    NON_EQUALITY    reduce using rule 39 (arithmetic_expression -> identifier .)
    NON_STRICT_COMPARISON reduce using rule 39 (arithmetic_expression -> identifier .)
    IN              reduce using rule 39 (arithmetic_expression -> identifier .)
    DO              reduce using rule 39 (arithmetic_expression -> identifier .)
    PLUS            shift and go to state 113
    MINUS           shift and go to state 112
    MUL             shift and go to state 116
    DIV             shift and go to state 114
    OPEN_SQUARE_BRACKET shift and go to state 115

  ! PLUS            [ reduce using rule 39 (arithmetic_expression -> identifier .) ]
  ! MINUS           [ reduce using rule 39 (arithmetic_expression -> identifier .) ]
  ! MUL             [ reduce using rule 39 (arithmetic_expression -> identifier .) ]
  ! DIV             [ reduce using rule 39 (arithmetic_expression -> identifier .) ]


state 78

    (40) arithmetic_expression -> STRING .

    CLOSE_SQUARE_BRACKET reduce using rule 40 (arithmetic_expression -> STRING .)
    PLUS            reduce using rule 40 (arithmetic_expression -> STRING .)
    MINUS           reduce using rule 40 (arithmetic_expression -> STRING .)
    MUL             reduce using rule 40 (arithmetic_expression -> STRING .)
    DIV             reduce using rule 40 (arithmetic_expression -> STRING .)
    SEMICOLON       reduce using rule 40 (arithmetic_expression -> STRING .)
    CLOSE_BRACKET   reduce using rule 40 (arithmetic_expression -> STRING .)
    IF              reduce using rule 40 (arithmetic_expression -> STRING .)
    WRITE           reduce using rule 40 (arithmetic_expression -> STRING .)
    WRITELN         reduce using rule 40 (arithmetic_expression -> STRING .)
    READ            reduce using rule 40 (arithmetic_expression -> STRING .)
    READLN          reduce using rule 40 (arithmetic_expression -> STRING .)
    LENGTH          reduce using rule 40 (arithmetic_expression -> STRING .)
    INC             reduce using rule 40 (arithmetic_expression -> STRING .)
    WHILE           reduce using rule 40 (arithmetic_expression -> STRING .)
    FOR             reduce using rule 40 (arithmetic_expression -> STRING .)
    BREAK           reduce using rule 40 (arithmetic_expression -> STRING .)
    IDENTIFIER      reduce using rule 40 (arithmetic_expression -> STRING .)
    END             reduce using rule 40 (arithmetic_expression -> STRING .)
    TO              reduce using rule 40 (arithmetic_expression -> STRING .)
    DOWNTO          reduce using rule 40 (arithmetic_expression -> STRING .)
    COMPARISON      reduce using rule 40 (arithmetic_expression -> STRING .)
    EQUALITY        reduce using rule 40 (arithmetic_expression -> STRING .)
    NON_EQUALITY    reduce using rule 40 (arithmetic_expression -> STRING .)
    NON_STRICT_COMPARISON reduce using rule 40 (arithmetic_expression -> STRING .)
    IN              reduce using rule 40 (arithmetic_expression -> STRING .)
    DO              reduce using rule 40 (arithmetic_expression -> STRING .)


state 79

    (41) arithmetic_expression -> function .
    (50) arithmetic_expression -> function . PLUS arithmetic_expression
    (51) arithmetic_expression -> function . MINUS arithmetic_expression
    (52) arithmetic_expression -> function . MUL arithmetic_expression
    (53) arithmetic_expression -> function . DIV arithmetic_expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    CLOSE_SQUARE_BRACKET reduce using rule 41 (arithmetic_expression -> function .)
    SEMICOLON       reduce using rule 41 (arithmetic_expression -> function .)
    CLOSE_BRACKET   reduce using rule 41 (arithmetic_expression -> function .)
    IF              reduce using rule 41 (arithmetic_expression -> function .)
    WRITE           reduce using rule 41 (arithmetic_expression -> function .)
    WRITELN         reduce using rule 41 (arithmetic_expression -> function .)
    READ            reduce using rule 41 (arithmetic_expression -> function .)
    READLN          reduce using rule 41 (arithmetic_expression -> function .)
    LENGTH          reduce using rule 41 (arithmetic_expression -> function .)
    INC             reduce using rule 41 (arithmetic_expression -> function .)
    WHILE           reduce using rule 41 (arithmetic_expression -> function .)
    FOR             reduce using rule 41 (arithmetic_expression -> function .)
    BREAK           reduce using rule 41 (arithmetic_expression -> function .)
    IDENTIFIER      reduce using rule 41 (arithmetic_expression -> function .)
    END             reduce using rule 41 (arithmetic_expression -> function .)
    TO              reduce using rule 41 (arithmetic_expression -> function .)
    DOWNTO          reduce using rule 41 (arithmetic_expression -> function .)
    COMPARISON      reduce using rule 41 (arithmetic_expression -> function .)
    EQUALITY        reduce using rule 41 (arithmetic_expression -> function .)
    NON_EQUALITY    reduce using rule 41 (arithmetic_expression -> function .)
    NON_STRICT_COMPARISON reduce using rule 41 (arithmetic_expression -> function .)
    IN              reduce using rule 41 (arithmetic_expression -> function .)
    DO              reduce using rule 41 (arithmetic_expression -> function .)
    PLUS            shift and go to state 119
    MINUS           shift and go to state 117
    MUL             shift and go to state 118
    DIV             shift and go to state 120

  ! PLUS            [ reduce using rule 41 (arithmetic_expression -> function .) ]
  ! MINUS           [ reduce using rule 41 (arithmetic_expression -> function .) ]
  ! MUL             [ reduce using rule 41 (arithmetic_expression -> function .) ]
  ! DIV             [ reduce using rule 41 (arithmetic_expression -> function .) ]


state 80

    (81) for -> FOR assignment TO . arithmetic_expression DO block
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    function                       shift and go to state 79
    arithmetic_expression          shift and go to state 121
    identifier                     shift and go to state 77

state 81

    (82) for -> FOR assignment DOWNTO . arithmetic_expression DO block
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    function                       shift and go to state 79
    arithmetic_expression          shift and go to state 122
    identifier                     shift and go to state 77

state 82

    (64) function -> LENGTH OPEN_BRACKET identifier . CLOSE_BRACKET
    (66) function -> LENGTH OPEN_BRACKET identifier . CLOSE_BRACKET SEMICOLON

    CLOSE_BRACKET   shift and go to state 123


state 83

    (35) assignment -> identifier ASSIGNMENT function . SEMICOLON
    (36) assignment -> identifier ASSIGNMENT function .
    (41) arithmetic_expression -> function .
    (50) arithmetic_expression -> function . PLUS arithmetic_expression
    (51) arithmetic_expression -> function . MINUS arithmetic_expression
    (52) arithmetic_expression -> function . MUL arithmetic_expression
    (53) arithmetic_expression -> function . DIV arithmetic_expression

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! reduce/reduce conflict for IF resolved using rule 36 (assignment -> identifier ASSIGNMENT function .)
  ! reduce/reduce conflict for WRITE resolved using rule 36 (assignment -> identifier ASSIGNMENT function .)
  ! reduce/reduce conflict for WRITELN resolved using rule 36 (assignment -> identifier ASSIGNMENT function .)
  ! reduce/reduce conflict for READ resolved using rule 36 (assignment -> identifier ASSIGNMENT function .)
  ! reduce/reduce conflict for READLN resolved using rule 36 (assignment -> identifier ASSIGNMENT function .)
  ! reduce/reduce conflict for LENGTH resolved using rule 36 (assignment -> identifier ASSIGNMENT function .)
  ! reduce/reduce conflict for INC resolved using rule 36 (assignment -> identifier ASSIGNMENT function .)
  ! reduce/reduce conflict for WHILE resolved using rule 36 (assignment -> identifier ASSIGNMENT function .)
  ! reduce/reduce conflict for FOR resolved using rule 36 (assignment -> identifier ASSIGNMENT function .)
  ! reduce/reduce conflict for BREAK resolved using rule 36 (assignment -> identifier ASSIGNMENT function .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 36 (assignment -> identifier ASSIGNMENT function .)
  ! reduce/reduce conflict for END resolved using rule 36 (assignment -> identifier ASSIGNMENT function .)
  ! reduce/reduce conflict for TO resolved using rule 36 (assignment -> identifier ASSIGNMENT function .)
  ! reduce/reduce conflict for DOWNTO resolved using rule 36 (assignment -> identifier ASSIGNMENT function .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    SEMICOLON       shift and go to state 124
    IF              reduce using rule 36 (assignment -> identifier ASSIGNMENT function .)
    WRITE           reduce using rule 36 (assignment -> identifier ASSIGNMENT function .)
    WRITELN         reduce using rule 36 (assignment -> identifier ASSIGNMENT function .)
    READ            reduce using rule 36 (assignment -> identifier ASSIGNMENT function .)
    READLN          reduce using rule 36 (assignment -> identifier ASSIGNMENT function .)
    LENGTH          reduce using rule 36 (assignment -> identifier ASSIGNMENT function .)
    INC             reduce using rule 36 (assignment -> identifier ASSIGNMENT function .)
    WHILE           reduce using rule 36 (assignment -> identifier ASSIGNMENT function .)
    FOR             reduce using rule 36 (assignment -> identifier ASSIGNMENT function .)
    BREAK           reduce using rule 36 (assignment -> identifier ASSIGNMENT function .)
    IDENTIFIER      reduce using rule 36 (assignment -> identifier ASSIGNMENT function .)
    END             reduce using rule 36 (assignment -> identifier ASSIGNMENT function .)
    TO              reduce using rule 36 (assignment -> identifier ASSIGNMENT function .)
    DOWNTO          reduce using rule 36 (assignment -> identifier ASSIGNMENT function .)
    PLUS            shift and go to state 119
    MINUS           shift and go to state 117
    MUL             shift and go to state 118
    DIV             shift and go to state 120

  ! SEMICOLON       [ reduce using rule 41 (arithmetic_expression -> function .) ]
  ! PLUS            [ reduce using rule 41 (arithmetic_expression -> function .) ]
  ! MINUS           [ reduce using rule 41 (arithmetic_expression -> function .) ]
  ! MUL             [ reduce using rule 41 (arithmetic_expression -> function .) ]
  ! DIV             [ reduce using rule 41 (arithmetic_expression -> function .) ]
  ! IF              [ reduce using rule 41 (arithmetic_expression -> function .) ]
  ! WRITE           [ reduce using rule 41 (arithmetic_expression -> function .) ]
  ! WRITELN         [ reduce using rule 41 (arithmetic_expression -> function .) ]
  ! READ            [ reduce using rule 41 (arithmetic_expression -> function .) ]
  ! READLN          [ reduce using rule 41 (arithmetic_expression -> function .) ]
  ! LENGTH          [ reduce using rule 41 (arithmetic_expression -> function .) ]
  ! INC             [ reduce using rule 41 (arithmetic_expression -> function .) ]
  ! WHILE           [ reduce using rule 41 (arithmetic_expression -> function .) ]
  ! FOR             [ reduce using rule 41 (arithmetic_expression -> function .) ]
  ! BREAK           [ reduce using rule 41 (arithmetic_expression -> function .) ]
  ! IDENTIFIER      [ reduce using rule 41 (arithmetic_expression -> function .) ]
  ! END             [ reduce using rule 41 (arithmetic_expression -> function .) ]
  ! TO              [ reduce using rule 41 (arithmetic_expression -> function .) ]
  ! DOWNTO          [ reduce using rule 41 (arithmetic_expression -> function .) ]


state 84

    (34) assignment -> identifier ASSIGNMENT arithmetic_expression . SEMICOLON
    (37) assignment -> identifier ASSIGNMENT arithmetic_expression .
    (55) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (58) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression
    (59) arithmetic_expression -> arithmetic_expression . SEMICOLON

    SEMICOLON       shift and go to state 125
    IF              reduce using rule 37 (assignment -> identifier ASSIGNMENT arithmetic_expression .)
    WRITE           reduce using rule 37 (assignment -> identifier ASSIGNMENT arithmetic_expression .)
    WRITELN         reduce using rule 37 (assignment -> identifier ASSIGNMENT arithmetic_expression .)
    READ            reduce using rule 37 (assignment -> identifier ASSIGNMENT arithmetic_expression .)
    READLN          reduce using rule 37 (assignment -> identifier ASSIGNMENT arithmetic_expression .)
    LENGTH          reduce using rule 37 (assignment -> identifier ASSIGNMENT arithmetic_expression .)
    INC             reduce using rule 37 (assignment -> identifier ASSIGNMENT arithmetic_expression .)
    WHILE           reduce using rule 37 (assignment -> identifier ASSIGNMENT arithmetic_expression .)
    FOR             reduce using rule 37 (assignment -> identifier ASSIGNMENT arithmetic_expression .)
    BREAK           reduce using rule 37 (assignment -> identifier ASSIGNMENT arithmetic_expression .)
    IDENTIFIER      reduce using rule 37 (assignment -> identifier ASSIGNMENT arithmetic_expression .)
    END             reduce using rule 37 (assignment -> identifier ASSIGNMENT arithmetic_expression .)
    TO              reduce using rule 37 (assignment -> identifier ASSIGNMENT arithmetic_expression .)
    DOWNTO          reduce using rule 37 (assignment -> identifier ASSIGNMENT arithmetic_expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 107
    MUL             shift and go to state 110
    DIV             shift and go to state 111


state 85

    (62) function -> READ OPEN_BRACKET identifier . CLOSE_BRACKET SEMICOLON

    CLOSE_BRACKET   shift and go to state 126


state 86

    (60) function -> WRITE OPEN_BRACKET arithmetic_expression . CLOSE_BRACKET SEMICOLON
    (55) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (58) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression
    (59) arithmetic_expression -> arithmetic_expression . SEMICOLON

    CLOSE_BRACKET   shift and go to state 127
    PLUS            shift and go to state 109
    MINUS           shift and go to state 107
    MUL             shift and go to state 110
    DIV             shift and go to state 111
    SEMICOLON       shift and go to state 106


state 87

    (67) predicate -> arithmetic_expression . COMPARISON arithmetic_expression
    (68) predicate -> arithmetic_expression . EQUALITY arithmetic_expression
    (69) predicate -> arithmetic_expression . NON_EQUALITY arithmetic_expression
    (70) predicate -> arithmetic_expression . NON_STRICT_COMPARISON arithmetic_expression
    (71) predicate -> arithmetic_expression . IN identifier
    (72) predicate -> arithmetic_expression . IN matrix
    (55) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (58) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression
    (59) arithmetic_expression -> arithmetic_expression . SEMICOLON

    COMPARISON      shift and go to state 129
    EQUALITY        shift and go to state 128
    NON_EQUALITY    shift and go to state 130
    NON_STRICT_COMPARISON shift and go to state 132
    IN              shift and go to state 131
    PLUS            shift and go to state 109
    MINUS           shift and go to state 107
    MUL             shift and go to state 110
    DIV             shift and go to state 111
    SEMICOLON       shift and go to state 106


state 88

    (83) if -> IF OPEN_BRACKET predicate . CLOSE_BRACKET THEN block
    (84) if -> IF OPEN_BRACKET predicate . CLOSE_BRACKET THEN block else

    CLOSE_BRACKET   shift and go to state 133


state 89

    (63) function -> READLN OPEN_BRACKET identifier . CLOSE_BRACKET SEMICOLON

    CLOSE_BRACKET   shift and go to state 134


state 90

    (65) function -> INC OPEN_BRACKET identifier . CLOSE_BRACKET SEMICOLON

    CLOSE_BRACKET   shift and go to state 135


state 91

    (80) while -> WHILE some_predicates DO . block
    (13) block -> . BEGIN body END SEMICOLON

    BEGIN           shift and go to state 136

    block                          shift and go to state 137

state 92

    (76) some_predicates -> OPEN_BRACKET NOT . OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET AND some_predicates
    (77) some_predicates -> OPEN_BRACKET NOT . OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET OR some_predicates
    (78) some_predicates -> OPEN_BRACKET NOT . OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 138


state 93

    (79) while -> WHILE OPEN_BRACKET predicate . CLOSE_BRACKET DO block
    (73) some_predicates -> OPEN_BRACKET predicate . CLOSE_BRACKET AND some_predicates
    (74) some_predicates -> OPEN_BRACKET predicate . CLOSE_BRACKET OR some_predicates
    (75) some_predicates -> OPEN_BRACKET predicate . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 139


state 94

    (12) begin_program -> VAR declarations BEGIN body END POINT .

    $end            reduce using rule 12 (begin_program -> VAR declarations BEGIN body END POINT .)


state 95

    (1) consts -> CONST IDENTIFIER EQUALITY NUMBER SEMICOLON begin_program .

    $end            reduce using rule 1 (consts -> CONST IDENTIFIER EQUALITY NUMBER SEMICOLON begin_program .)


state 96

    (3) consts -> CONST IDENTIFIER EQUALITY matrix SEMICOLON begin_program .

    $end            reduce using rule 3 (consts -> CONST IDENTIFIER EQUALITY matrix SEMICOLON begin_program .)


state 97

    (2) consts -> CONST IDENTIFIER EQUALITY STRING SEMICOLON begin_program .

    $end            reduce using rule 2 (consts -> CONST IDENTIFIER EQUALITY STRING SEMICOLON begin_program .)


state 98

    (8) identifiers -> STRING ZAPYATAYA . identifiers
    (6) identifiers -> . IDENTIFIER ZAPYATAYA identifiers
    (7) identifiers -> . NUMBER ZAPYATAYA identifiers
    (8) identifiers -> . STRING ZAPYATAYA identifiers
    (9) identifiers -> . IDENTIFIER
    (10) identifiers -> . NUMBER
    (11) identifiers -> . STRING

    IDENTIFIER      shift and go to state 73
    NUMBER          shift and go to state 72
    STRING          shift and go to state 70

    identifiers                    shift and go to state 140

state 99

    (5) matrix -> OPEN_SQUARE_BRACKET identifiers CLOSE_SQUARE_BRACKET .

    CLOSE_BRACKET   reduce using rule 5 (matrix -> OPEN_SQUARE_BRACKET identifiers CLOSE_SQUARE_BRACKET .)
    SEMICOLON       reduce using rule 5 (matrix -> OPEN_SQUARE_BRACKET identifiers CLOSE_SQUARE_BRACKET .)


state 100

    (7) identifiers -> NUMBER ZAPYATAYA . identifiers
    (6) identifiers -> . IDENTIFIER ZAPYATAYA identifiers
    (7) identifiers -> . NUMBER ZAPYATAYA identifiers
    (8) identifiers -> . STRING ZAPYATAYA identifiers
    (9) identifiers -> . IDENTIFIER
    (10) identifiers -> . NUMBER
    (11) identifiers -> . STRING

    IDENTIFIER      shift and go to state 73
    NUMBER          shift and go to state 72
    STRING          shift and go to state 70

    identifiers                    shift and go to state 141

state 101

    (6) identifiers -> IDENTIFIER ZAPYATAYA . identifiers
    (6) identifiers -> . IDENTIFIER ZAPYATAYA identifiers
    (7) identifiers -> . NUMBER ZAPYATAYA identifiers
    (8) identifiers -> . STRING ZAPYATAYA identifiers
    (9) identifiers -> . IDENTIFIER
    (10) identifiers -> . NUMBER
    (11) identifiers -> . STRING

    IDENTIFIER      shift and go to state 73
    NUMBER          shift and go to state 72
    STRING          shift and go to state 70

    identifiers                    shift and go to state 142

state 102

    (47) arithmetic_expression -> NUMBER MINUS . arithmetic_expression
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    function                       shift and go to state 79
    arithmetic_expression          shift and go to state 143
    identifier                     shift and go to state 77

state 103

    (48) arithmetic_expression -> NUMBER MUL . arithmetic_expression
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    function                       shift and go to state 79
    arithmetic_expression          shift and go to state 144
    identifier                     shift and go to state 77

state 104

    (46) arithmetic_expression -> NUMBER PLUS . arithmetic_expression
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    function                       shift and go to state 79
    arithmetic_expression          shift and go to state 145
    identifier                     shift and go to state 77

state 105

    (49) arithmetic_expression -> NUMBER DIV . arithmetic_expression
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    function                       shift and go to state 79
    arithmetic_expression          shift and go to state 146
    identifier                     shift and go to state 77

state 106

    (59) arithmetic_expression -> arithmetic_expression SEMICOLON .

    CLOSE_SQUARE_BRACKET reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    PLUS            reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    MINUS           reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    MUL             reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    DIV             reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    SEMICOLON       reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    IF              reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    WRITE           reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    WRITELN         reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    READ            reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    READLN          reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    LENGTH          reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    INC             reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    WHILE           reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    FOR             reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    BREAK           reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    END             reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    TO              reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    DOWNTO          reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    COMPARISON      reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    EQUALITY        reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    NON_EQUALITY    reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    NON_STRICT_COMPARISON reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    IN              reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    DO              reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)


state 107

    (56) arithmetic_expression -> arithmetic_expression MINUS . arithmetic_expression
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    function                       shift and go to state 79
    arithmetic_expression          shift and go to state 147
    identifier                     shift and go to state 77

state 108

    (61) function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET . SEMICOLON

    SEMICOLON       shift and go to state 148


state 109

    (55) arithmetic_expression -> arithmetic_expression PLUS . arithmetic_expression
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    function                       shift and go to state 79
    arithmetic_expression          shift and go to state 149
    identifier                     shift and go to state 77

state 110

    (57) arithmetic_expression -> arithmetic_expression MUL . arithmetic_expression
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    function                       shift and go to state 79
    arithmetic_expression          shift and go to state 150
    identifier                     shift and go to state 77

state 111

    (58) arithmetic_expression -> arithmetic_expression DIV . arithmetic_expression
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    function                       shift and go to state 79
    arithmetic_expression          shift and go to state 151
    identifier                     shift and go to state 77

state 112

    (43) arithmetic_expression -> identifier MINUS . arithmetic_expression
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    function                       shift and go to state 79
    arithmetic_expression          shift and go to state 152
    identifier                     shift and go to state 77

state 113

    (42) arithmetic_expression -> identifier PLUS . arithmetic_expression
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    function                       shift and go to state 79
    arithmetic_expression          shift and go to state 153
    identifier                     shift and go to state 77

state 114

    (45) arithmetic_expression -> identifier DIV . arithmetic_expression
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    function                       shift and go to state 79
    arithmetic_expression          shift and go to state 154
    identifier                     shift and go to state 77

state 115

    (54) arithmetic_expression -> identifier OPEN_SQUARE_BRACKET . arithmetic_expression CLOSE_SQUARE_BRACKET
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    function                       shift and go to state 79
    arithmetic_expression          shift and go to state 155
    identifier                     shift and go to state 77

state 116

    (44) arithmetic_expression -> identifier MUL . arithmetic_expression
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    function                       shift and go to state 79
    arithmetic_expression          shift and go to state 156
    identifier                     shift and go to state 77

state 117

    (51) arithmetic_expression -> function MINUS . arithmetic_expression
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    function                       shift and go to state 79
    arithmetic_expression          shift and go to state 157
    identifier                     shift and go to state 77

state 118

    (52) arithmetic_expression -> function MUL . arithmetic_expression
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    function                       shift and go to state 79
    arithmetic_expression          shift and go to state 158
    identifier                     shift and go to state 77

state 119

    (50) arithmetic_expression -> function PLUS . arithmetic_expression
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    function                       shift and go to state 79
    arithmetic_expression          shift and go to state 159
    identifier                     shift and go to state 77

state 120

    (53) arithmetic_expression -> function DIV . arithmetic_expression
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    function                       shift and go to state 79
    arithmetic_expression          shift and go to state 160
    identifier                     shift and go to state 77

state 121

    (81) for -> FOR assignment TO arithmetic_expression . DO block
    (55) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (58) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression
    (59) arithmetic_expression -> arithmetic_expression . SEMICOLON

    DO              shift and go to state 161
    PLUS            shift and go to state 109
    MINUS           shift and go to state 107
    MUL             shift and go to state 110
    DIV             shift and go to state 111
    SEMICOLON       shift and go to state 106


state 122

    (82) for -> FOR assignment DOWNTO arithmetic_expression . DO block
    (55) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (58) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression
    (59) arithmetic_expression -> arithmetic_expression . SEMICOLON

    DO              shift and go to state 162
    PLUS            shift and go to state 109
    MINUS           shift and go to state 107
    MUL             shift and go to state 110
    DIV             shift and go to state 111
    SEMICOLON       shift and go to state 106


state 123

    (64) function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .
    (66) function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET . SEMICOLON

  ! shift/reduce conflict for SEMICOLON resolved as shift
    PLUS            reduce using rule 64 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    MINUS           reduce using rule 64 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    MUL             reduce using rule 64 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    DIV             reduce using rule 64 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    CLOSE_BRACKET   reduce using rule 64 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    IF              reduce using rule 64 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    WRITE           reduce using rule 64 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    WRITELN         reduce using rule 64 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    READ            reduce using rule 64 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    READLN          reduce using rule 64 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    LENGTH          reduce using rule 64 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    INC             reduce using rule 64 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    WHILE           reduce using rule 64 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    FOR             reduce using rule 64 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    BREAK           reduce using rule 64 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    IDENTIFIER      reduce using rule 64 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    END             reduce using rule 64 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    TO              reduce using rule 64 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    DOWNTO          reduce using rule 64 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    COMPARISON      reduce using rule 64 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    EQUALITY        reduce using rule 64 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    NON_EQUALITY    reduce using rule 64 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    NON_STRICT_COMPARISON reduce using rule 64 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    IN              reduce using rule 64 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    DO              reduce using rule 64 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    CLOSE_SQUARE_BRACKET reduce using rule 64 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    SEMICOLON       shift and go to state 163

  ! SEMICOLON       [ reduce using rule 64 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .) ]


state 124

    (35) assignment -> identifier ASSIGNMENT function SEMICOLON .

    IF              reduce using rule 35 (assignment -> identifier ASSIGNMENT function SEMICOLON .)
    WRITE           reduce using rule 35 (assignment -> identifier ASSIGNMENT function SEMICOLON .)
    WRITELN         reduce using rule 35 (assignment -> identifier ASSIGNMENT function SEMICOLON .)
    READ            reduce using rule 35 (assignment -> identifier ASSIGNMENT function SEMICOLON .)
    READLN          reduce using rule 35 (assignment -> identifier ASSIGNMENT function SEMICOLON .)
    LENGTH          reduce using rule 35 (assignment -> identifier ASSIGNMENT function SEMICOLON .)
    INC             reduce using rule 35 (assignment -> identifier ASSIGNMENT function SEMICOLON .)
    WHILE           reduce using rule 35 (assignment -> identifier ASSIGNMENT function SEMICOLON .)
    FOR             reduce using rule 35 (assignment -> identifier ASSIGNMENT function SEMICOLON .)
    BREAK           reduce using rule 35 (assignment -> identifier ASSIGNMENT function SEMICOLON .)
    IDENTIFIER      reduce using rule 35 (assignment -> identifier ASSIGNMENT function SEMICOLON .)
    END             reduce using rule 35 (assignment -> identifier ASSIGNMENT function SEMICOLON .)
    TO              reduce using rule 35 (assignment -> identifier ASSIGNMENT function SEMICOLON .)
    DOWNTO          reduce using rule 35 (assignment -> identifier ASSIGNMENT function SEMICOLON .)


state 125

    (34) assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .
    (59) arithmetic_expression -> arithmetic_expression SEMICOLON .

  ! reduce/reduce conflict for IF resolved using rule 34 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
  ! reduce/reduce conflict for WRITE resolved using rule 34 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
  ! reduce/reduce conflict for WRITELN resolved using rule 34 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
  ! reduce/reduce conflict for READ resolved using rule 34 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
  ! reduce/reduce conflict for READLN resolved using rule 34 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
  ! reduce/reduce conflict for LENGTH resolved using rule 34 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
  ! reduce/reduce conflict for INC resolved using rule 34 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
  ! reduce/reduce conflict for WHILE resolved using rule 34 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
  ! reduce/reduce conflict for FOR resolved using rule 34 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
  ! reduce/reduce conflict for BREAK resolved using rule 34 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 34 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
  ! reduce/reduce conflict for END resolved using rule 34 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
  ! reduce/reduce conflict for TO resolved using rule 34 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
  ! reduce/reduce conflict for DOWNTO resolved using rule 34 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
    IF              reduce using rule 34 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
    WRITE           reduce using rule 34 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
    WRITELN         reduce using rule 34 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
    READ            reduce using rule 34 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
    READLN          reduce using rule 34 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
    LENGTH          reduce using rule 34 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
    INC             reduce using rule 34 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
    WHILE           reduce using rule 34 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
    FOR             reduce using rule 34 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
    BREAK           reduce using rule 34 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 34 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
    END             reduce using rule 34 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
    TO              reduce using rule 34 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
    DOWNTO          reduce using rule 34 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
    SEMICOLON       reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    PLUS            reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    MINUS           reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    MUL             reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)
    DIV             reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .)

  ! IF              [ reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .) ]
  ! WRITE           [ reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .) ]
  ! WRITELN         [ reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .) ]
  ! READ            [ reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .) ]
  ! READLN          [ reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .) ]
  ! LENGTH          [ reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .) ]
  ! INC             [ reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .) ]
  ! WHILE           [ reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .) ]
  ! FOR             [ reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .) ]
  ! BREAK           [ reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .) ]
  ! IDENTIFIER      [ reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .) ]
  ! END             [ reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .) ]
  ! TO              [ reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .) ]
  ! DOWNTO          [ reduce using rule 59 (arithmetic_expression -> arithmetic_expression SEMICOLON .) ]


state 126

    (62) function -> READ OPEN_BRACKET identifier CLOSE_BRACKET . SEMICOLON

    SEMICOLON       shift and go to state 164


state 127

    (60) function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET . SEMICOLON

    SEMICOLON       shift and go to state 165


state 128

    (68) predicate -> arithmetic_expression EQUALITY . arithmetic_expression
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    function                       shift and go to state 79
    arithmetic_expression          shift and go to state 166
    identifier                     shift and go to state 77

state 129

    (67) predicate -> arithmetic_expression COMPARISON . arithmetic_expression
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    function                       shift and go to state 79
    arithmetic_expression          shift and go to state 167
    identifier                     shift and go to state 77

state 130

    (69) predicate -> arithmetic_expression NON_EQUALITY . arithmetic_expression
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    function                       shift and go to state 79
    arithmetic_expression          shift and go to state 168
    identifier                     shift and go to state 77

state 131

    (71) predicate -> arithmetic_expression IN . identifier
    (72) predicate -> arithmetic_expression IN . matrix
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (5) matrix -> . OPEN_SQUARE_BRACKET identifiers CLOSE_SQUARE_BRACKET

    IDENTIFIER      shift and go to state 34
    OPEN_SQUARE_BRACKET shift and go to state 42

    matrix                         shift and go to state 170
    identifier                     shift and go to state 169

state 132

    (70) predicate -> arithmetic_expression NON_STRICT_COMPARISON . arithmetic_expression
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    function                       shift and go to state 79
    arithmetic_expression          shift and go to state 171
    identifier                     shift and go to state 77

state 133

    (83) if -> IF OPEN_BRACKET predicate CLOSE_BRACKET . THEN block
    (84) if -> IF OPEN_BRACKET predicate CLOSE_BRACKET . THEN block else

    THEN            shift and go to state 172


state 134

    (63) function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET . SEMICOLON

    SEMICOLON       shift and go to state 173


state 135

    (65) function -> INC OPEN_BRACKET identifier CLOSE_BRACKET . SEMICOLON

    SEMICOLON       shift and go to state 174


state 136

    (13) block -> BEGIN . body END SEMICOLON
    (14) body -> . expression
    (17) expression -> . assignment expression
    (18) expression -> . if expression
    (19) expression -> . function expression
    (20) expression -> . empty
    (21) expression -> . while expression
    (22) expression -> . for expression
    (23) expression -> . break
    (34) assignment -> . identifier ASSIGNMENT arithmetic_expression SEMICOLON
    (35) assignment -> . identifier ASSIGNMENT function SEMICOLON
    (36) assignment -> . identifier ASSIGNMENT function
    (37) assignment -> . identifier ASSIGNMENT arithmetic_expression
    (83) if -> . IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block
    (84) if -> . IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (33) empty -> .
    (79) while -> . WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block
    (80) while -> . WHILE some_predicates DO block
    (81) for -> . FOR assignment TO arithmetic_expression DO block
    (82) for -> . FOR assignment DOWNTO arithmetic_expression DO block
    (24) break -> . BREAK SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON

    IF              shift and go to state 27
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30
    END             reduce using rule 33 (empty -> .)
    WHILE           shift and go to state 37
    FOR             shift and go to state 19
    BREAK           shift and go to state 29
    IDENTIFIER      shift and go to state 34

    break                          shift and go to state 31
    while                          shift and go to state 32
    for                            shift and go to state 33
    empty                          shift and go to state 35
    expression                     shift and go to state 36
    assignment                     shift and go to state 21
    identifier                     shift and go to state 22
    if                             shift and go to state 23
    body                           shift and go to state 175
    function                       shift and go to state 25

state 137

    (80) while -> WHILE some_predicates DO block .

    IF              reduce using rule 80 (while -> WHILE some_predicates DO block .)
    WRITE           reduce using rule 80 (while -> WHILE some_predicates DO block .)
    WRITELN         reduce using rule 80 (while -> WHILE some_predicates DO block .)
    READ            reduce using rule 80 (while -> WHILE some_predicates DO block .)
    READLN          reduce using rule 80 (while -> WHILE some_predicates DO block .)
    LENGTH          reduce using rule 80 (while -> WHILE some_predicates DO block .)
    INC             reduce using rule 80 (while -> WHILE some_predicates DO block .)
    WHILE           reduce using rule 80 (while -> WHILE some_predicates DO block .)
    FOR             reduce using rule 80 (while -> WHILE some_predicates DO block .)
    BREAK           reduce using rule 80 (while -> WHILE some_predicates DO block .)
    IDENTIFIER      reduce using rule 80 (while -> WHILE some_predicates DO block .)
    END             reduce using rule 80 (while -> WHILE some_predicates DO block .)


state 138

    (76) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET . predicate CLOSE_BRACKET CLOSE_BRACKET AND some_predicates
    (77) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET . predicate CLOSE_BRACKET CLOSE_BRACKET OR some_predicates
    (78) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET . predicate CLOSE_BRACKET CLOSE_BRACKET
    (67) predicate -> . arithmetic_expression COMPARISON arithmetic_expression
    (68) predicate -> . arithmetic_expression EQUALITY arithmetic_expression
    (69) predicate -> . arithmetic_expression NON_EQUALITY arithmetic_expression
    (70) predicate -> . arithmetic_expression NON_STRICT_COMPARISON arithmetic_expression
    (71) predicate -> . arithmetic_expression IN identifier
    (72) predicate -> . arithmetic_expression IN matrix
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    arithmetic_expression          shift and go to state 87
    identifier                     shift and go to state 77
    predicate                      shift and go to state 176
    function                       shift and go to state 79

state 139

    (79) while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET . DO block
    (73) some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET . AND some_predicates
    (74) some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET . OR some_predicates
    (75) some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET .

  ! shift/reduce conflict for DO resolved as shift
    DO              shift and go to state 178
    AND             shift and go to state 177
    OR              shift and go to state 179

  ! DO              [ reduce using rule 75 (some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET .) ]


state 140

    (8) identifiers -> STRING ZAPYATAYA identifiers .

    CLOSE_SQUARE_BRACKET reduce using rule 8 (identifiers -> STRING ZAPYATAYA identifiers .)


state 141

    (7) identifiers -> NUMBER ZAPYATAYA identifiers .

    CLOSE_SQUARE_BRACKET reduce using rule 7 (identifiers -> NUMBER ZAPYATAYA identifiers .)


state 142

    (6) identifiers -> IDENTIFIER ZAPYATAYA identifiers .

    CLOSE_SQUARE_BRACKET reduce using rule 6 (identifiers -> IDENTIFIER ZAPYATAYA identifiers .)


state 143

    (47) arithmetic_expression -> NUMBER MINUS arithmetic_expression .
    (55) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (58) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression
    (59) arithmetic_expression -> arithmetic_expression . SEMICOLON

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for SEMICOLON resolved as shift
    CLOSE_SQUARE_BRACKET reduce using rule 47 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 47 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    IF              reduce using rule 47 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    WRITE           reduce using rule 47 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    WRITELN         reduce using rule 47 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    READ            reduce using rule 47 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    READLN          reduce using rule 47 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    LENGTH          reduce using rule 47 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    INC             reduce using rule 47 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    WHILE           reduce using rule 47 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    FOR             reduce using rule 47 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    BREAK           reduce using rule 47 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    IDENTIFIER      reduce using rule 47 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    END             reduce using rule 47 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    TO              reduce using rule 47 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    DOWNTO          reduce using rule 47 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    COMPARISON      reduce using rule 47 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    EQUALITY        reduce using rule 47 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    NON_EQUALITY    reduce using rule 47 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 47 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    IN              reduce using rule 47 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    DO              reduce using rule 47 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 107
    MUL             shift and go to state 110
    DIV             shift and go to state 111
    SEMICOLON       shift and go to state 106

  ! PLUS            [ reduce using rule 47 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 47 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .) ]
  ! MUL             [ reduce using rule 47 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .) ]
  ! DIV             [ reduce using rule 47 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .) ]
  ! SEMICOLON       [ reduce using rule 47 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .) ]


state 144

    (48) arithmetic_expression -> NUMBER MUL arithmetic_expression .
    (55) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (58) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression
    (59) arithmetic_expression -> arithmetic_expression . SEMICOLON

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for SEMICOLON resolved as shift
    CLOSE_SQUARE_BRACKET reduce using rule 48 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 48 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    IF              reduce using rule 48 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    WRITE           reduce using rule 48 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    WRITELN         reduce using rule 48 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    READ            reduce using rule 48 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    READLN          reduce using rule 48 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    LENGTH          reduce using rule 48 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    INC             reduce using rule 48 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    WHILE           reduce using rule 48 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    FOR             reduce using rule 48 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    BREAK           reduce using rule 48 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    IDENTIFIER      reduce using rule 48 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    END             reduce using rule 48 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    TO              reduce using rule 48 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    DOWNTO          reduce using rule 48 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    COMPARISON      reduce using rule 48 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    EQUALITY        reduce using rule 48 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    NON_EQUALITY    reduce using rule 48 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 48 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    IN              reduce using rule 48 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    DO              reduce using rule 48 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 107
    MUL             shift and go to state 110
    DIV             shift and go to state 111
    SEMICOLON       shift and go to state 106

  ! PLUS            [ reduce using rule 48 (arithmetic_expression -> NUMBER MUL arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 48 (arithmetic_expression -> NUMBER MUL arithmetic_expression .) ]
  ! MUL             [ reduce using rule 48 (arithmetic_expression -> NUMBER MUL arithmetic_expression .) ]
  ! DIV             [ reduce using rule 48 (arithmetic_expression -> NUMBER MUL arithmetic_expression .) ]
  ! SEMICOLON       [ reduce using rule 48 (arithmetic_expression -> NUMBER MUL arithmetic_expression .) ]


state 145

    (46) arithmetic_expression -> NUMBER PLUS arithmetic_expression .
    (55) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (58) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression
    (59) arithmetic_expression -> arithmetic_expression . SEMICOLON

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for SEMICOLON resolved as shift
    CLOSE_SQUARE_BRACKET reduce using rule 46 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 46 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    IF              reduce using rule 46 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    WRITE           reduce using rule 46 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    WRITELN         reduce using rule 46 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    READ            reduce using rule 46 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    READLN          reduce using rule 46 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    LENGTH          reduce using rule 46 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    INC             reduce using rule 46 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    WHILE           reduce using rule 46 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    FOR             reduce using rule 46 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    BREAK           reduce using rule 46 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    IDENTIFIER      reduce using rule 46 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    END             reduce using rule 46 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    TO              reduce using rule 46 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    DOWNTO          reduce using rule 46 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    COMPARISON      reduce using rule 46 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    EQUALITY        reduce using rule 46 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    NON_EQUALITY    reduce using rule 46 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 46 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    IN              reduce using rule 46 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    DO              reduce using rule 46 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 107
    MUL             shift and go to state 110
    DIV             shift and go to state 111
    SEMICOLON       shift and go to state 106

  ! PLUS            [ reduce using rule 46 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 46 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .) ]
  ! MUL             [ reduce using rule 46 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .) ]
  ! DIV             [ reduce using rule 46 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .) ]
  ! SEMICOLON       [ reduce using rule 46 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .) ]


state 146

    (49) arithmetic_expression -> NUMBER DIV arithmetic_expression .
    (55) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (58) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression
    (59) arithmetic_expression -> arithmetic_expression . SEMICOLON

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for SEMICOLON resolved as shift
    CLOSE_SQUARE_BRACKET reduce using rule 49 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 49 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    IF              reduce using rule 49 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    WRITE           reduce using rule 49 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    WRITELN         reduce using rule 49 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    READ            reduce using rule 49 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    READLN          reduce using rule 49 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    LENGTH          reduce using rule 49 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    INC             reduce using rule 49 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    WHILE           reduce using rule 49 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    FOR             reduce using rule 49 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    BREAK           reduce using rule 49 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    IDENTIFIER      reduce using rule 49 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    END             reduce using rule 49 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    TO              reduce using rule 49 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    DOWNTO          reduce using rule 49 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    COMPARISON      reduce using rule 49 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    EQUALITY        reduce using rule 49 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    NON_EQUALITY    reduce using rule 49 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 49 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    IN              reduce using rule 49 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    DO              reduce using rule 49 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 107
    MUL             shift and go to state 110
    DIV             shift and go to state 111
    SEMICOLON       shift and go to state 106

  ! PLUS            [ reduce using rule 49 (arithmetic_expression -> NUMBER DIV arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 49 (arithmetic_expression -> NUMBER DIV arithmetic_expression .) ]
  ! MUL             [ reduce using rule 49 (arithmetic_expression -> NUMBER DIV arithmetic_expression .) ]
  ! DIV             [ reduce using rule 49 (arithmetic_expression -> NUMBER DIV arithmetic_expression .) ]
  ! SEMICOLON       [ reduce using rule 49 (arithmetic_expression -> NUMBER DIV arithmetic_expression .) ]


state 147

    (56) arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .
    (55) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (58) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression
    (59) arithmetic_expression -> arithmetic_expression . SEMICOLON

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for SEMICOLON resolved as shift
    CLOSE_SQUARE_BRACKET reduce using rule 56 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 56 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    IF              reduce using rule 56 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    WRITE           reduce using rule 56 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    WRITELN         reduce using rule 56 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    READ            reduce using rule 56 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    READLN          reduce using rule 56 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    LENGTH          reduce using rule 56 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    INC             reduce using rule 56 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    WHILE           reduce using rule 56 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    FOR             reduce using rule 56 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    BREAK           reduce using rule 56 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    IDENTIFIER      reduce using rule 56 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    END             reduce using rule 56 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    TO              reduce using rule 56 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    DOWNTO          reduce using rule 56 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    COMPARISON      reduce using rule 56 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    EQUALITY        reduce using rule 56 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    NON_EQUALITY    reduce using rule 56 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 56 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    IN              reduce using rule 56 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    DO              reduce using rule 56 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 107
    MUL             shift and go to state 110
    DIV             shift and go to state 111
    SEMICOLON       shift and go to state 106

  ! PLUS            [ reduce using rule 56 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 56 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .) ]
  ! MUL             [ reduce using rule 56 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .) ]
  ! DIV             [ reduce using rule 56 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .) ]
  ! SEMICOLON       [ reduce using rule 56 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .) ]


state 148

    (61) function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .

    PLUS            reduce using rule 61 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    MINUS           reduce using rule 61 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    MUL             reduce using rule 61 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    DIV             reduce using rule 61 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 61 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 61 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    IF              reduce using rule 61 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    WRITE           reduce using rule 61 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    WRITELN         reduce using rule 61 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    READ            reduce using rule 61 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    READLN          reduce using rule 61 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    LENGTH          reduce using rule 61 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    INC             reduce using rule 61 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    WHILE           reduce using rule 61 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    FOR             reduce using rule 61 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    BREAK           reduce using rule 61 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 61 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    END             reduce using rule 61 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    TO              reduce using rule 61 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    DOWNTO          reduce using rule 61 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    COMPARISON      reduce using rule 61 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    EQUALITY        reduce using rule 61 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    NON_EQUALITY    reduce using rule 61 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    NON_STRICT_COMPARISON reduce using rule 61 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    IN              reduce using rule 61 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    DO              reduce using rule 61 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    CLOSE_SQUARE_BRACKET reduce using rule 61 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)


state 149

    (55) arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .
    (55) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (58) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression
    (59) arithmetic_expression -> arithmetic_expression . SEMICOLON

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for SEMICOLON resolved as shift
    CLOSE_SQUARE_BRACKET reduce using rule 55 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 55 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    IF              reduce using rule 55 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    WRITE           reduce using rule 55 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    WRITELN         reduce using rule 55 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    READ            reduce using rule 55 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    READLN          reduce using rule 55 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    LENGTH          reduce using rule 55 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    INC             reduce using rule 55 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    WHILE           reduce using rule 55 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    FOR             reduce using rule 55 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    BREAK           reduce using rule 55 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    IDENTIFIER      reduce using rule 55 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    END             reduce using rule 55 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    TO              reduce using rule 55 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    DOWNTO          reduce using rule 55 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    COMPARISON      reduce using rule 55 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    EQUALITY        reduce using rule 55 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    NON_EQUALITY    reduce using rule 55 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 55 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    IN              reduce using rule 55 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    DO              reduce using rule 55 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 107
    MUL             shift and go to state 110
    DIV             shift and go to state 111
    SEMICOLON       shift and go to state 106

  ! PLUS            [ reduce using rule 55 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 55 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .) ]
  ! MUL             [ reduce using rule 55 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .) ]
  ! DIV             [ reduce using rule 55 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .) ]
  ! SEMICOLON       [ reduce using rule 55 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .) ]


state 150

    (57) arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .
    (55) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (58) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression
    (59) arithmetic_expression -> arithmetic_expression . SEMICOLON

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for SEMICOLON resolved as shift
    CLOSE_SQUARE_BRACKET reduce using rule 57 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 57 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    IF              reduce using rule 57 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    WRITE           reduce using rule 57 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    WRITELN         reduce using rule 57 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    READ            reduce using rule 57 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    READLN          reduce using rule 57 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    LENGTH          reduce using rule 57 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    INC             reduce using rule 57 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    WHILE           reduce using rule 57 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    FOR             reduce using rule 57 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    BREAK           reduce using rule 57 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    IDENTIFIER      reduce using rule 57 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    END             reduce using rule 57 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    TO              reduce using rule 57 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    DOWNTO          reduce using rule 57 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    COMPARISON      reduce using rule 57 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    EQUALITY        reduce using rule 57 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    NON_EQUALITY    reduce using rule 57 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 57 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    IN              reduce using rule 57 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    DO              reduce using rule 57 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 107
    MUL             shift and go to state 110
    DIV             shift and go to state 111
    SEMICOLON       shift and go to state 106

  ! PLUS            [ reduce using rule 57 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 57 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .) ]
  ! MUL             [ reduce using rule 57 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .) ]
  ! DIV             [ reduce using rule 57 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .) ]
  ! SEMICOLON       [ reduce using rule 57 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .) ]


state 151

    (58) arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .
    (55) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (58) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression
    (59) arithmetic_expression -> arithmetic_expression . SEMICOLON

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for SEMICOLON resolved as shift
    CLOSE_SQUARE_BRACKET reduce using rule 58 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 58 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    IF              reduce using rule 58 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    WRITE           reduce using rule 58 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    WRITELN         reduce using rule 58 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    READ            reduce using rule 58 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    READLN          reduce using rule 58 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    LENGTH          reduce using rule 58 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    INC             reduce using rule 58 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    WHILE           reduce using rule 58 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    FOR             reduce using rule 58 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    BREAK           reduce using rule 58 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    IDENTIFIER      reduce using rule 58 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    END             reduce using rule 58 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    TO              reduce using rule 58 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    DOWNTO          reduce using rule 58 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    COMPARISON      reduce using rule 58 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    EQUALITY        reduce using rule 58 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    NON_EQUALITY    reduce using rule 58 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 58 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    IN              reduce using rule 58 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    DO              reduce using rule 58 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 107
    MUL             shift and go to state 110
    DIV             shift and go to state 111
    SEMICOLON       shift and go to state 106

  ! PLUS            [ reduce using rule 58 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 58 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .) ]
  ! MUL             [ reduce using rule 58 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .) ]
  ! DIV             [ reduce using rule 58 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .) ]
  ! SEMICOLON       [ reduce using rule 58 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .) ]


state 152

    (43) arithmetic_expression -> identifier MINUS arithmetic_expression .
    (55) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (58) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression
    (59) arithmetic_expression -> arithmetic_expression . SEMICOLON

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for SEMICOLON resolved as shift
    CLOSE_SQUARE_BRACKET reduce using rule 43 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 43 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    IF              reduce using rule 43 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    WRITE           reduce using rule 43 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    WRITELN         reduce using rule 43 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    READ            reduce using rule 43 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    READLN          reduce using rule 43 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    LENGTH          reduce using rule 43 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    INC             reduce using rule 43 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    WHILE           reduce using rule 43 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    FOR             reduce using rule 43 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    BREAK           reduce using rule 43 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    IDENTIFIER      reduce using rule 43 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    END             reduce using rule 43 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    TO              reduce using rule 43 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    DOWNTO          reduce using rule 43 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    COMPARISON      reduce using rule 43 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    EQUALITY        reduce using rule 43 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    NON_EQUALITY    reduce using rule 43 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 43 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    IN              reduce using rule 43 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    DO              reduce using rule 43 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 107
    MUL             shift and go to state 110
    DIV             shift and go to state 111
    SEMICOLON       shift and go to state 106

  ! PLUS            [ reduce using rule 43 (arithmetic_expression -> identifier MINUS arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 43 (arithmetic_expression -> identifier MINUS arithmetic_expression .) ]
  ! MUL             [ reduce using rule 43 (arithmetic_expression -> identifier MINUS arithmetic_expression .) ]
  ! DIV             [ reduce using rule 43 (arithmetic_expression -> identifier MINUS arithmetic_expression .) ]
  ! SEMICOLON       [ reduce using rule 43 (arithmetic_expression -> identifier MINUS arithmetic_expression .) ]


state 153

    (42) arithmetic_expression -> identifier PLUS arithmetic_expression .
    (55) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (58) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression
    (59) arithmetic_expression -> arithmetic_expression . SEMICOLON

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for SEMICOLON resolved as shift
    CLOSE_SQUARE_BRACKET reduce using rule 42 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 42 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    IF              reduce using rule 42 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    WRITE           reduce using rule 42 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    WRITELN         reduce using rule 42 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    READ            reduce using rule 42 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    READLN          reduce using rule 42 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    LENGTH          reduce using rule 42 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    INC             reduce using rule 42 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    WHILE           reduce using rule 42 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    FOR             reduce using rule 42 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    BREAK           reduce using rule 42 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    IDENTIFIER      reduce using rule 42 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    END             reduce using rule 42 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    TO              reduce using rule 42 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    DOWNTO          reduce using rule 42 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    COMPARISON      reduce using rule 42 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    EQUALITY        reduce using rule 42 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    NON_EQUALITY    reduce using rule 42 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 42 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    IN              reduce using rule 42 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    DO              reduce using rule 42 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 107
    MUL             shift and go to state 110
    DIV             shift and go to state 111
    SEMICOLON       shift and go to state 106

  ! PLUS            [ reduce using rule 42 (arithmetic_expression -> identifier PLUS arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 42 (arithmetic_expression -> identifier PLUS arithmetic_expression .) ]
  ! MUL             [ reduce using rule 42 (arithmetic_expression -> identifier PLUS arithmetic_expression .) ]
  ! DIV             [ reduce using rule 42 (arithmetic_expression -> identifier PLUS arithmetic_expression .) ]
  ! SEMICOLON       [ reduce using rule 42 (arithmetic_expression -> identifier PLUS arithmetic_expression .) ]


state 154

    (45) arithmetic_expression -> identifier DIV arithmetic_expression .
    (55) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (58) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression
    (59) arithmetic_expression -> arithmetic_expression . SEMICOLON

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for SEMICOLON resolved as shift
    CLOSE_SQUARE_BRACKET reduce using rule 45 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 45 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    IF              reduce using rule 45 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    WRITE           reduce using rule 45 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    WRITELN         reduce using rule 45 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    READ            reduce using rule 45 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    READLN          reduce using rule 45 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    LENGTH          reduce using rule 45 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    INC             reduce using rule 45 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    WHILE           reduce using rule 45 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    FOR             reduce using rule 45 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    BREAK           reduce using rule 45 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    IDENTIFIER      reduce using rule 45 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    END             reduce using rule 45 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    TO              reduce using rule 45 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    DOWNTO          reduce using rule 45 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    COMPARISON      reduce using rule 45 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    EQUALITY        reduce using rule 45 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    NON_EQUALITY    reduce using rule 45 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 45 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    IN              reduce using rule 45 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    DO              reduce using rule 45 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 107
    MUL             shift and go to state 110
    DIV             shift and go to state 111
    SEMICOLON       shift and go to state 106

  ! PLUS            [ reduce using rule 45 (arithmetic_expression -> identifier DIV arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 45 (arithmetic_expression -> identifier DIV arithmetic_expression .) ]
  ! MUL             [ reduce using rule 45 (arithmetic_expression -> identifier DIV arithmetic_expression .) ]
  ! DIV             [ reduce using rule 45 (arithmetic_expression -> identifier DIV arithmetic_expression .) ]
  ! SEMICOLON       [ reduce using rule 45 (arithmetic_expression -> identifier DIV arithmetic_expression .) ]


state 155

    (54) arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression . CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (58) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression
    (59) arithmetic_expression -> arithmetic_expression . SEMICOLON

    CLOSE_SQUARE_BRACKET shift and go to state 180
    PLUS            shift and go to state 109
    MINUS           shift and go to state 107
    MUL             shift and go to state 110
    DIV             shift and go to state 111
    SEMICOLON       shift and go to state 106


state 156

    (44) arithmetic_expression -> identifier MUL arithmetic_expression .
    (55) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (58) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression
    (59) arithmetic_expression -> arithmetic_expression . SEMICOLON

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for SEMICOLON resolved as shift
    CLOSE_SQUARE_BRACKET reduce using rule 44 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 44 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    IF              reduce using rule 44 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    WRITE           reduce using rule 44 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    WRITELN         reduce using rule 44 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    READ            reduce using rule 44 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    READLN          reduce using rule 44 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    LENGTH          reduce using rule 44 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    INC             reduce using rule 44 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    WHILE           reduce using rule 44 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    FOR             reduce using rule 44 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    BREAK           reduce using rule 44 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    IDENTIFIER      reduce using rule 44 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    END             reduce using rule 44 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    TO              reduce using rule 44 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    DOWNTO          reduce using rule 44 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    COMPARISON      reduce using rule 44 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    EQUALITY        reduce using rule 44 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    NON_EQUALITY    reduce using rule 44 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 44 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    IN              reduce using rule 44 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    DO              reduce using rule 44 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 107
    MUL             shift and go to state 110
    DIV             shift and go to state 111
    SEMICOLON       shift and go to state 106

  ! PLUS            [ reduce using rule 44 (arithmetic_expression -> identifier MUL arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 44 (arithmetic_expression -> identifier MUL arithmetic_expression .) ]
  ! MUL             [ reduce using rule 44 (arithmetic_expression -> identifier MUL arithmetic_expression .) ]
  ! DIV             [ reduce using rule 44 (arithmetic_expression -> identifier MUL arithmetic_expression .) ]
  ! SEMICOLON       [ reduce using rule 44 (arithmetic_expression -> identifier MUL arithmetic_expression .) ]


state 157

    (51) arithmetic_expression -> function MINUS arithmetic_expression .
    (55) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (58) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression
    (59) arithmetic_expression -> arithmetic_expression . SEMICOLON

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for SEMICOLON resolved as shift
    CLOSE_SQUARE_BRACKET reduce using rule 51 (arithmetic_expression -> function MINUS arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 51 (arithmetic_expression -> function MINUS arithmetic_expression .)
    IF              reduce using rule 51 (arithmetic_expression -> function MINUS arithmetic_expression .)
    WRITE           reduce using rule 51 (arithmetic_expression -> function MINUS arithmetic_expression .)
    WRITELN         reduce using rule 51 (arithmetic_expression -> function MINUS arithmetic_expression .)
    READ            reduce using rule 51 (arithmetic_expression -> function MINUS arithmetic_expression .)
    READLN          reduce using rule 51 (arithmetic_expression -> function MINUS arithmetic_expression .)
    LENGTH          reduce using rule 51 (arithmetic_expression -> function MINUS arithmetic_expression .)
    INC             reduce using rule 51 (arithmetic_expression -> function MINUS arithmetic_expression .)
    WHILE           reduce using rule 51 (arithmetic_expression -> function MINUS arithmetic_expression .)
    FOR             reduce using rule 51 (arithmetic_expression -> function MINUS arithmetic_expression .)
    BREAK           reduce using rule 51 (arithmetic_expression -> function MINUS arithmetic_expression .)
    IDENTIFIER      reduce using rule 51 (arithmetic_expression -> function MINUS arithmetic_expression .)
    END             reduce using rule 51 (arithmetic_expression -> function MINUS arithmetic_expression .)
    TO              reduce using rule 51 (arithmetic_expression -> function MINUS arithmetic_expression .)
    DOWNTO          reduce using rule 51 (arithmetic_expression -> function MINUS arithmetic_expression .)
    COMPARISON      reduce using rule 51 (arithmetic_expression -> function MINUS arithmetic_expression .)
    EQUALITY        reduce using rule 51 (arithmetic_expression -> function MINUS arithmetic_expression .)
    NON_EQUALITY    reduce using rule 51 (arithmetic_expression -> function MINUS arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 51 (arithmetic_expression -> function MINUS arithmetic_expression .)
    IN              reduce using rule 51 (arithmetic_expression -> function MINUS arithmetic_expression .)
    DO              reduce using rule 51 (arithmetic_expression -> function MINUS arithmetic_expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 107
    MUL             shift and go to state 110
    DIV             shift and go to state 111
    SEMICOLON       shift and go to state 106

  ! PLUS            [ reduce using rule 51 (arithmetic_expression -> function MINUS arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 51 (arithmetic_expression -> function MINUS arithmetic_expression .) ]
  ! MUL             [ reduce using rule 51 (arithmetic_expression -> function MINUS arithmetic_expression .) ]
  ! DIV             [ reduce using rule 51 (arithmetic_expression -> function MINUS arithmetic_expression .) ]
  ! SEMICOLON       [ reduce using rule 51 (arithmetic_expression -> function MINUS arithmetic_expression .) ]


state 158

    (52) arithmetic_expression -> function MUL arithmetic_expression .
    (55) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (58) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression
    (59) arithmetic_expression -> arithmetic_expression . SEMICOLON

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for SEMICOLON resolved as shift
    CLOSE_SQUARE_BRACKET reduce using rule 52 (arithmetic_expression -> function MUL arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 52 (arithmetic_expression -> function MUL arithmetic_expression .)
    IF              reduce using rule 52 (arithmetic_expression -> function MUL arithmetic_expression .)
    WRITE           reduce using rule 52 (arithmetic_expression -> function MUL arithmetic_expression .)
    WRITELN         reduce using rule 52 (arithmetic_expression -> function MUL arithmetic_expression .)
    READ            reduce using rule 52 (arithmetic_expression -> function MUL arithmetic_expression .)
    READLN          reduce using rule 52 (arithmetic_expression -> function MUL arithmetic_expression .)
    LENGTH          reduce using rule 52 (arithmetic_expression -> function MUL arithmetic_expression .)
    INC             reduce using rule 52 (arithmetic_expression -> function MUL arithmetic_expression .)
    WHILE           reduce using rule 52 (arithmetic_expression -> function MUL arithmetic_expression .)
    FOR             reduce using rule 52 (arithmetic_expression -> function MUL arithmetic_expression .)
    BREAK           reduce using rule 52 (arithmetic_expression -> function MUL arithmetic_expression .)
    IDENTIFIER      reduce using rule 52 (arithmetic_expression -> function MUL arithmetic_expression .)
    END             reduce using rule 52 (arithmetic_expression -> function MUL arithmetic_expression .)
    TO              reduce using rule 52 (arithmetic_expression -> function MUL arithmetic_expression .)
    DOWNTO          reduce using rule 52 (arithmetic_expression -> function MUL arithmetic_expression .)
    COMPARISON      reduce using rule 52 (arithmetic_expression -> function MUL arithmetic_expression .)
    EQUALITY        reduce using rule 52 (arithmetic_expression -> function MUL arithmetic_expression .)
    NON_EQUALITY    reduce using rule 52 (arithmetic_expression -> function MUL arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 52 (arithmetic_expression -> function MUL arithmetic_expression .)
    IN              reduce using rule 52 (arithmetic_expression -> function MUL arithmetic_expression .)
    DO              reduce using rule 52 (arithmetic_expression -> function MUL arithmetic_expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 107
    MUL             shift and go to state 110
    DIV             shift and go to state 111
    SEMICOLON       shift and go to state 106

  ! PLUS            [ reduce using rule 52 (arithmetic_expression -> function MUL arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 52 (arithmetic_expression -> function MUL arithmetic_expression .) ]
  ! MUL             [ reduce using rule 52 (arithmetic_expression -> function MUL arithmetic_expression .) ]
  ! DIV             [ reduce using rule 52 (arithmetic_expression -> function MUL arithmetic_expression .) ]
  ! SEMICOLON       [ reduce using rule 52 (arithmetic_expression -> function MUL arithmetic_expression .) ]


state 159

    (50) arithmetic_expression -> function PLUS arithmetic_expression .
    (55) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (58) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression
    (59) arithmetic_expression -> arithmetic_expression . SEMICOLON

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for SEMICOLON resolved as shift
    CLOSE_SQUARE_BRACKET reduce using rule 50 (arithmetic_expression -> function PLUS arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 50 (arithmetic_expression -> function PLUS arithmetic_expression .)
    IF              reduce using rule 50 (arithmetic_expression -> function PLUS arithmetic_expression .)
    WRITE           reduce using rule 50 (arithmetic_expression -> function PLUS arithmetic_expression .)
    WRITELN         reduce using rule 50 (arithmetic_expression -> function PLUS arithmetic_expression .)
    READ            reduce using rule 50 (arithmetic_expression -> function PLUS arithmetic_expression .)
    READLN          reduce using rule 50 (arithmetic_expression -> function PLUS arithmetic_expression .)
    LENGTH          reduce using rule 50 (arithmetic_expression -> function PLUS arithmetic_expression .)
    INC             reduce using rule 50 (arithmetic_expression -> function PLUS arithmetic_expression .)
    WHILE           reduce using rule 50 (arithmetic_expression -> function PLUS arithmetic_expression .)
    FOR             reduce using rule 50 (arithmetic_expression -> function PLUS arithmetic_expression .)
    BREAK           reduce using rule 50 (arithmetic_expression -> function PLUS arithmetic_expression .)
    IDENTIFIER      reduce using rule 50 (arithmetic_expression -> function PLUS arithmetic_expression .)
    END             reduce using rule 50 (arithmetic_expression -> function PLUS arithmetic_expression .)
    TO              reduce using rule 50 (arithmetic_expression -> function PLUS arithmetic_expression .)
    DOWNTO          reduce using rule 50 (arithmetic_expression -> function PLUS arithmetic_expression .)
    COMPARISON      reduce using rule 50 (arithmetic_expression -> function PLUS arithmetic_expression .)
    EQUALITY        reduce using rule 50 (arithmetic_expression -> function PLUS arithmetic_expression .)
    NON_EQUALITY    reduce using rule 50 (arithmetic_expression -> function PLUS arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 50 (arithmetic_expression -> function PLUS arithmetic_expression .)
    IN              reduce using rule 50 (arithmetic_expression -> function PLUS arithmetic_expression .)
    DO              reduce using rule 50 (arithmetic_expression -> function PLUS arithmetic_expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 107
    MUL             shift and go to state 110
    DIV             shift and go to state 111
    SEMICOLON       shift and go to state 106

  ! PLUS            [ reduce using rule 50 (arithmetic_expression -> function PLUS arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 50 (arithmetic_expression -> function PLUS arithmetic_expression .) ]
  ! MUL             [ reduce using rule 50 (arithmetic_expression -> function PLUS arithmetic_expression .) ]
  ! DIV             [ reduce using rule 50 (arithmetic_expression -> function PLUS arithmetic_expression .) ]
  ! SEMICOLON       [ reduce using rule 50 (arithmetic_expression -> function PLUS arithmetic_expression .) ]


state 160

    (53) arithmetic_expression -> function DIV arithmetic_expression .
    (55) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (58) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression
    (59) arithmetic_expression -> arithmetic_expression . SEMICOLON

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for SEMICOLON resolved as shift
    CLOSE_SQUARE_BRACKET reduce using rule 53 (arithmetic_expression -> function DIV arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 53 (arithmetic_expression -> function DIV arithmetic_expression .)
    IF              reduce using rule 53 (arithmetic_expression -> function DIV arithmetic_expression .)
    WRITE           reduce using rule 53 (arithmetic_expression -> function DIV arithmetic_expression .)
    WRITELN         reduce using rule 53 (arithmetic_expression -> function DIV arithmetic_expression .)
    READ            reduce using rule 53 (arithmetic_expression -> function DIV arithmetic_expression .)
    READLN          reduce using rule 53 (arithmetic_expression -> function DIV arithmetic_expression .)
    LENGTH          reduce using rule 53 (arithmetic_expression -> function DIV arithmetic_expression .)
    INC             reduce using rule 53 (arithmetic_expression -> function DIV arithmetic_expression .)
    WHILE           reduce using rule 53 (arithmetic_expression -> function DIV arithmetic_expression .)
    FOR             reduce using rule 53 (arithmetic_expression -> function DIV arithmetic_expression .)
    BREAK           reduce using rule 53 (arithmetic_expression -> function DIV arithmetic_expression .)
    IDENTIFIER      reduce using rule 53 (arithmetic_expression -> function DIV arithmetic_expression .)
    END             reduce using rule 53 (arithmetic_expression -> function DIV arithmetic_expression .)
    TO              reduce using rule 53 (arithmetic_expression -> function DIV arithmetic_expression .)
    DOWNTO          reduce using rule 53 (arithmetic_expression -> function DIV arithmetic_expression .)
    COMPARISON      reduce using rule 53 (arithmetic_expression -> function DIV arithmetic_expression .)
    EQUALITY        reduce using rule 53 (arithmetic_expression -> function DIV arithmetic_expression .)
    NON_EQUALITY    reduce using rule 53 (arithmetic_expression -> function DIV arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 53 (arithmetic_expression -> function DIV arithmetic_expression .)
    IN              reduce using rule 53 (arithmetic_expression -> function DIV arithmetic_expression .)
    DO              reduce using rule 53 (arithmetic_expression -> function DIV arithmetic_expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 107
    MUL             shift and go to state 110
    DIV             shift and go to state 111
    SEMICOLON       shift and go to state 106

  ! PLUS            [ reduce using rule 53 (arithmetic_expression -> function DIV arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 53 (arithmetic_expression -> function DIV arithmetic_expression .) ]
  ! MUL             [ reduce using rule 53 (arithmetic_expression -> function DIV arithmetic_expression .) ]
  ! DIV             [ reduce using rule 53 (arithmetic_expression -> function DIV arithmetic_expression .) ]
  ! SEMICOLON       [ reduce using rule 53 (arithmetic_expression -> function DIV arithmetic_expression .) ]


state 161

    (81) for -> FOR assignment TO arithmetic_expression DO . block
    (13) block -> . BEGIN body END SEMICOLON

    BEGIN           shift and go to state 136

    block                          shift and go to state 181

state 162

    (82) for -> FOR assignment DOWNTO arithmetic_expression DO . block
    (13) block -> . BEGIN body END SEMICOLON

    BEGIN           shift and go to state 136

    block                          shift and go to state 182

state 163

    (66) function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .

    PLUS            reduce using rule 66 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    MINUS           reduce using rule 66 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    MUL             reduce using rule 66 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    DIV             reduce using rule 66 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 66 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 66 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    IF              reduce using rule 66 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    WRITE           reduce using rule 66 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    WRITELN         reduce using rule 66 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    READ            reduce using rule 66 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    READLN          reduce using rule 66 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    LENGTH          reduce using rule 66 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    INC             reduce using rule 66 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    WHILE           reduce using rule 66 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    FOR             reduce using rule 66 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    BREAK           reduce using rule 66 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 66 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    END             reduce using rule 66 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    TO              reduce using rule 66 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    DOWNTO          reduce using rule 66 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    COMPARISON      reduce using rule 66 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    EQUALITY        reduce using rule 66 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    NON_EQUALITY    reduce using rule 66 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    NON_STRICT_COMPARISON reduce using rule 66 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    IN              reduce using rule 66 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    DO              reduce using rule 66 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    CLOSE_SQUARE_BRACKET reduce using rule 66 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)


state 164

    (62) function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .

    PLUS            reduce using rule 62 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    MINUS           reduce using rule 62 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    MUL             reduce using rule 62 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    DIV             reduce using rule 62 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 62 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 62 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    IF              reduce using rule 62 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    WRITE           reduce using rule 62 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    WRITELN         reduce using rule 62 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    READ            reduce using rule 62 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    READLN          reduce using rule 62 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    LENGTH          reduce using rule 62 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    INC             reduce using rule 62 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    WHILE           reduce using rule 62 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    FOR             reduce using rule 62 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    BREAK           reduce using rule 62 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 62 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    END             reduce using rule 62 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    TO              reduce using rule 62 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    DOWNTO          reduce using rule 62 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    COMPARISON      reduce using rule 62 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    EQUALITY        reduce using rule 62 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    NON_EQUALITY    reduce using rule 62 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    NON_STRICT_COMPARISON reduce using rule 62 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    IN              reduce using rule 62 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    DO              reduce using rule 62 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    CLOSE_SQUARE_BRACKET reduce using rule 62 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)


state 165

    (60) function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .

    PLUS            reduce using rule 60 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    MINUS           reduce using rule 60 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    MUL             reduce using rule 60 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    DIV             reduce using rule 60 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 60 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 60 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    IF              reduce using rule 60 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    WRITE           reduce using rule 60 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    WRITELN         reduce using rule 60 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    READ            reduce using rule 60 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    READLN          reduce using rule 60 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    LENGTH          reduce using rule 60 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    INC             reduce using rule 60 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    WHILE           reduce using rule 60 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    FOR             reduce using rule 60 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    BREAK           reduce using rule 60 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 60 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    END             reduce using rule 60 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    TO              reduce using rule 60 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    DOWNTO          reduce using rule 60 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    COMPARISON      reduce using rule 60 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    EQUALITY        reduce using rule 60 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    NON_EQUALITY    reduce using rule 60 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    NON_STRICT_COMPARISON reduce using rule 60 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    IN              reduce using rule 60 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    DO              reduce using rule 60 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    CLOSE_SQUARE_BRACKET reduce using rule 60 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)


state 166

    (68) predicate -> arithmetic_expression EQUALITY arithmetic_expression .
    (55) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (58) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression
    (59) arithmetic_expression -> arithmetic_expression . SEMICOLON

    CLOSE_BRACKET   reduce using rule 68 (predicate -> arithmetic_expression EQUALITY arithmetic_expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 107
    MUL             shift and go to state 110
    DIV             shift and go to state 111
    SEMICOLON       shift and go to state 106


state 167

    (67) predicate -> arithmetic_expression COMPARISON arithmetic_expression .
    (55) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (58) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression
    (59) arithmetic_expression -> arithmetic_expression . SEMICOLON

    CLOSE_BRACKET   reduce using rule 67 (predicate -> arithmetic_expression COMPARISON arithmetic_expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 107
    MUL             shift and go to state 110
    DIV             shift and go to state 111
    SEMICOLON       shift and go to state 106


state 168

    (69) predicate -> arithmetic_expression NON_EQUALITY arithmetic_expression .
    (55) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (58) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression
    (59) arithmetic_expression -> arithmetic_expression . SEMICOLON

    CLOSE_BRACKET   reduce using rule 69 (predicate -> arithmetic_expression NON_EQUALITY arithmetic_expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 107
    MUL             shift and go to state 110
    DIV             shift and go to state 111
    SEMICOLON       shift and go to state 106


state 169

    (71) predicate -> arithmetic_expression IN identifier .

    CLOSE_BRACKET   reduce using rule 71 (predicate -> arithmetic_expression IN identifier .)


state 170

    (72) predicate -> arithmetic_expression IN matrix .

    CLOSE_BRACKET   reduce using rule 72 (predicate -> arithmetic_expression IN matrix .)


state 171

    (70) predicate -> arithmetic_expression NON_STRICT_COMPARISON arithmetic_expression .
    (55) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (58) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression
    (59) arithmetic_expression -> arithmetic_expression . SEMICOLON

    CLOSE_BRACKET   reduce using rule 70 (predicate -> arithmetic_expression NON_STRICT_COMPARISON arithmetic_expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 107
    MUL             shift and go to state 110
    DIV             shift and go to state 111
    SEMICOLON       shift and go to state 106


state 172

    (83) if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN . block
    (84) if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN . block else
    (13) block -> . BEGIN body END SEMICOLON

    BEGIN           shift and go to state 136

    block                          shift and go to state 183

state 173

    (63) function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .

    PLUS            reduce using rule 63 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    MINUS           reduce using rule 63 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    MUL             reduce using rule 63 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    DIV             reduce using rule 63 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 63 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 63 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    IF              reduce using rule 63 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    WRITE           reduce using rule 63 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    WRITELN         reduce using rule 63 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    READ            reduce using rule 63 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    READLN          reduce using rule 63 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    LENGTH          reduce using rule 63 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    INC             reduce using rule 63 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    WHILE           reduce using rule 63 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    FOR             reduce using rule 63 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    BREAK           reduce using rule 63 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 63 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    END             reduce using rule 63 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    TO              reduce using rule 63 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    DOWNTO          reduce using rule 63 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    COMPARISON      reduce using rule 63 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    EQUALITY        reduce using rule 63 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    NON_EQUALITY    reduce using rule 63 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    NON_STRICT_COMPARISON reduce using rule 63 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    IN              reduce using rule 63 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    DO              reduce using rule 63 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    CLOSE_SQUARE_BRACKET reduce using rule 63 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)


state 174

    (65) function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .

    PLUS            reduce using rule 65 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    MINUS           reduce using rule 65 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    MUL             reduce using rule 65 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    DIV             reduce using rule 65 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 65 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 65 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    IF              reduce using rule 65 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    WRITE           reduce using rule 65 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    WRITELN         reduce using rule 65 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    READ            reduce using rule 65 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    READLN          reduce using rule 65 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    LENGTH          reduce using rule 65 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    INC             reduce using rule 65 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    WHILE           reduce using rule 65 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    FOR             reduce using rule 65 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    BREAK           reduce using rule 65 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 65 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    END             reduce using rule 65 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    TO              reduce using rule 65 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    DOWNTO          reduce using rule 65 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    COMPARISON      reduce using rule 65 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    EQUALITY        reduce using rule 65 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    NON_EQUALITY    reduce using rule 65 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    NON_STRICT_COMPARISON reduce using rule 65 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    IN              reduce using rule 65 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    DO              reduce using rule 65 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    CLOSE_SQUARE_BRACKET reduce using rule 65 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)


state 175

    (13) block -> BEGIN body . END SEMICOLON

    END             shift and go to state 184


state 176

    (76) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate . CLOSE_BRACKET CLOSE_BRACKET AND some_predicates
    (77) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate . CLOSE_BRACKET CLOSE_BRACKET OR some_predicates
    (78) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate . CLOSE_BRACKET CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 185


state 177

    (73) some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET AND . some_predicates
    (73) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET AND some_predicates
    (74) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET OR some_predicates
    (75) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET
    (76) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET AND some_predicates
    (77) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET OR some_predicates
    (78) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 187

    some_predicates                shift and go to state 186

state 178

    (79) while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO . block
    (13) block -> . BEGIN body END SEMICOLON

    BEGIN           shift and go to state 136

    block                          shift and go to state 188

state 179

    (74) some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET OR . some_predicates
    (73) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET AND some_predicates
    (74) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET OR some_predicates
    (75) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET
    (76) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET AND some_predicates
    (77) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET OR some_predicates
    (78) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 187

    some_predicates                shift and go to state 189

state 180

    (54) arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .

    CLOSE_SQUARE_BRACKET reduce using rule 54 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    PLUS            reduce using rule 54 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    MINUS           reduce using rule 54 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    MUL             reduce using rule 54 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    DIV             reduce using rule 54 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    SEMICOLON       reduce using rule 54 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    CLOSE_BRACKET   reduce using rule 54 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    IF              reduce using rule 54 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    WRITE           reduce using rule 54 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    WRITELN         reduce using rule 54 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    READ            reduce using rule 54 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    READLN          reduce using rule 54 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    LENGTH          reduce using rule 54 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    INC             reduce using rule 54 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    WHILE           reduce using rule 54 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    FOR             reduce using rule 54 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    BREAK           reduce using rule 54 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    IDENTIFIER      reduce using rule 54 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    END             reduce using rule 54 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    TO              reduce using rule 54 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    DOWNTO          reduce using rule 54 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    COMPARISON      reduce using rule 54 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    EQUALITY        reduce using rule 54 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    NON_EQUALITY    reduce using rule 54 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    NON_STRICT_COMPARISON reduce using rule 54 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    IN              reduce using rule 54 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    DO              reduce using rule 54 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)


state 181

    (81) for -> FOR assignment TO arithmetic_expression DO block .

    IF              reduce using rule 81 (for -> FOR assignment TO arithmetic_expression DO block .)
    WRITE           reduce using rule 81 (for -> FOR assignment TO arithmetic_expression DO block .)
    WRITELN         reduce using rule 81 (for -> FOR assignment TO arithmetic_expression DO block .)
    READ            reduce using rule 81 (for -> FOR assignment TO arithmetic_expression DO block .)
    READLN          reduce using rule 81 (for -> FOR assignment TO arithmetic_expression DO block .)
    LENGTH          reduce using rule 81 (for -> FOR assignment TO arithmetic_expression DO block .)
    INC             reduce using rule 81 (for -> FOR assignment TO arithmetic_expression DO block .)
    WHILE           reduce using rule 81 (for -> FOR assignment TO arithmetic_expression DO block .)
    FOR             reduce using rule 81 (for -> FOR assignment TO arithmetic_expression DO block .)
    BREAK           reduce using rule 81 (for -> FOR assignment TO arithmetic_expression DO block .)
    IDENTIFIER      reduce using rule 81 (for -> FOR assignment TO arithmetic_expression DO block .)
    END             reduce using rule 81 (for -> FOR assignment TO arithmetic_expression DO block .)


state 182

    (82) for -> FOR assignment DOWNTO arithmetic_expression DO block .

    IF              reduce using rule 82 (for -> FOR assignment DOWNTO arithmetic_expression DO block .)
    WRITE           reduce using rule 82 (for -> FOR assignment DOWNTO arithmetic_expression DO block .)
    WRITELN         reduce using rule 82 (for -> FOR assignment DOWNTO arithmetic_expression DO block .)
    READ            reduce using rule 82 (for -> FOR assignment DOWNTO arithmetic_expression DO block .)
    READLN          reduce using rule 82 (for -> FOR assignment DOWNTO arithmetic_expression DO block .)
    LENGTH          reduce using rule 82 (for -> FOR assignment DOWNTO arithmetic_expression DO block .)
    INC             reduce using rule 82 (for -> FOR assignment DOWNTO arithmetic_expression DO block .)
    WHILE           reduce using rule 82 (for -> FOR assignment DOWNTO arithmetic_expression DO block .)
    FOR             reduce using rule 82 (for -> FOR assignment DOWNTO arithmetic_expression DO block .)
    BREAK           reduce using rule 82 (for -> FOR assignment DOWNTO arithmetic_expression DO block .)
    IDENTIFIER      reduce using rule 82 (for -> FOR assignment DOWNTO arithmetic_expression DO block .)
    END             reduce using rule 82 (for -> FOR assignment DOWNTO arithmetic_expression DO block .)


state 183

    (83) if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block .
    (84) if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block . else
    (85) else -> . ELSE block

    IF              reduce using rule 83 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block .)
    WRITE           reduce using rule 83 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block .)
    WRITELN         reduce using rule 83 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block .)
    READ            reduce using rule 83 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block .)
    READLN          reduce using rule 83 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block .)
    LENGTH          reduce using rule 83 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block .)
    INC             reduce using rule 83 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block .)
    WHILE           reduce using rule 83 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block .)
    FOR             reduce using rule 83 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block .)
    BREAK           reduce using rule 83 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block .)
    IDENTIFIER      reduce using rule 83 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block .)
    END             reduce using rule 83 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block .)
    ELSE            shift and go to state 191

    else                           shift and go to state 190

state 184

    (13) block -> BEGIN body END . SEMICOLON

    SEMICOLON       shift and go to state 192


state 185

    (76) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET . CLOSE_BRACKET AND some_predicates
    (77) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET . CLOSE_BRACKET OR some_predicates
    (78) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 193


state 186

    (73) some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET AND some_predicates .

    DO              reduce using rule 73 (some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET AND some_predicates .)


state 187

    (73) some_predicates -> OPEN_BRACKET . predicate CLOSE_BRACKET AND some_predicates
    (74) some_predicates -> OPEN_BRACKET . predicate CLOSE_BRACKET OR some_predicates
    (75) some_predicates -> OPEN_BRACKET . predicate CLOSE_BRACKET
    (76) some_predicates -> OPEN_BRACKET . NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET AND some_predicates
    (77) some_predicates -> OPEN_BRACKET . NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET OR some_predicates
    (78) some_predicates -> OPEN_BRACKET . NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET
    (67) predicate -> . arithmetic_expression COMPARISON arithmetic_expression
    (68) predicate -> . arithmetic_expression EQUALITY arithmetic_expression
    (69) predicate -> . arithmetic_expression NON_EQUALITY arithmetic_expression
    (70) predicate -> . arithmetic_expression NON_STRICT_COMPARISON arithmetic_expression
    (71) predicate -> . arithmetic_expression IN identifier
    (72) predicate -> . arithmetic_expression IN matrix
    (38) arithmetic_expression -> . NUMBER
    (39) arithmetic_expression -> . identifier
    (40) arithmetic_expression -> . STRING
    (41) arithmetic_expression -> . function
    (42) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (44) arithmetic_expression -> . identifier MUL arithmetic_expression
    (45) arithmetic_expression -> . identifier DIV arithmetic_expression
    (46) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (48) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (49) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (50) arithmetic_expression -> . function PLUS arithmetic_expression
    (51) arithmetic_expression -> . function MINUS arithmetic_expression
    (52) arithmetic_expression -> . function MUL arithmetic_expression
    (53) arithmetic_expression -> . function DIV arithmetic_expression
    (54) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (55) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (58) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (59) arithmetic_expression -> . arithmetic_expression SEMICOLON
    (15) identifier -> . IDENTIFIER
    (16) identifier -> . IDENTIFIER SEMICOLON
    (60) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (61) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (62) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (63) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (64) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (65) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (66) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NOT             shift and go to state 92
    NUMBER          shift and go to state 75
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 34
    WRITE           shift and go to state 26
    WRITELN         shift and go to state 18
    READ            shift and go to state 24
    READLN          shift and go to state 28
    LENGTH          shift and go to state 20
    INC             shift and go to state 30

    arithmetic_expression          shift and go to state 87
    identifier                     shift and go to state 77
    predicate                      shift and go to state 194
    function                       shift and go to state 79

state 188

    (79) while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block .

    IF              reduce using rule 79 (while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block .)
    WRITE           reduce using rule 79 (while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block .)
    WRITELN         reduce using rule 79 (while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block .)
    READ            reduce using rule 79 (while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block .)
    READLN          reduce using rule 79 (while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block .)
    LENGTH          reduce using rule 79 (while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block .)
    INC             reduce using rule 79 (while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block .)
    WHILE           reduce using rule 79 (while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block .)
    FOR             reduce using rule 79 (while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block .)
    BREAK           reduce using rule 79 (while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block .)
    IDENTIFIER      reduce using rule 79 (while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block .)
    END             reduce using rule 79 (while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block .)


state 189

    (74) some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET OR some_predicates .

    DO              reduce using rule 74 (some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET OR some_predicates .)


state 190

    (84) if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else .

    IF              reduce using rule 84 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else .)
    WRITE           reduce using rule 84 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else .)
    WRITELN         reduce using rule 84 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else .)
    READ            reduce using rule 84 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else .)
    READLN          reduce using rule 84 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else .)
    LENGTH          reduce using rule 84 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else .)
    INC             reduce using rule 84 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else .)
    WHILE           reduce using rule 84 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else .)
    FOR             reduce using rule 84 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else .)
    BREAK           reduce using rule 84 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else .)
    IDENTIFIER      reduce using rule 84 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else .)
    END             reduce using rule 84 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else .)


state 191

    (85) else -> ELSE . block
    (13) block -> . BEGIN body END SEMICOLON

    BEGIN           shift and go to state 136

    block                          shift and go to state 195

state 192

    (13) block -> BEGIN body END SEMICOLON .

    ELSE            reduce using rule 13 (block -> BEGIN body END SEMICOLON .)
    IF              reduce using rule 13 (block -> BEGIN body END SEMICOLON .)
    WRITE           reduce using rule 13 (block -> BEGIN body END SEMICOLON .)
    WRITELN         reduce using rule 13 (block -> BEGIN body END SEMICOLON .)
    READ            reduce using rule 13 (block -> BEGIN body END SEMICOLON .)
    READLN          reduce using rule 13 (block -> BEGIN body END SEMICOLON .)
    LENGTH          reduce using rule 13 (block -> BEGIN body END SEMICOLON .)
    INC             reduce using rule 13 (block -> BEGIN body END SEMICOLON .)
    WHILE           reduce using rule 13 (block -> BEGIN body END SEMICOLON .)
    FOR             reduce using rule 13 (block -> BEGIN body END SEMICOLON .)
    BREAK           reduce using rule 13 (block -> BEGIN body END SEMICOLON .)
    IDENTIFIER      reduce using rule 13 (block -> BEGIN body END SEMICOLON .)
    END             reduce using rule 13 (block -> BEGIN body END SEMICOLON .)


state 193

    (76) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET . AND some_predicates
    (77) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET . OR some_predicates
    (78) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET .

    AND             shift and go to state 196
    OR              shift and go to state 197
    DO              reduce using rule 78 (some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET .)


state 194

    (73) some_predicates -> OPEN_BRACKET predicate . CLOSE_BRACKET AND some_predicates
    (74) some_predicates -> OPEN_BRACKET predicate . CLOSE_BRACKET OR some_predicates
    (75) some_predicates -> OPEN_BRACKET predicate . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 198


state 195

    (85) else -> ELSE block .

    IF              reduce using rule 85 (else -> ELSE block .)
    WRITE           reduce using rule 85 (else -> ELSE block .)
    WRITELN         reduce using rule 85 (else -> ELSE block .)
    READ            reduce using rule 85 (else -> ELSE block .)
    READLN          reduce using rule 85 (else -> ELSE block .)
    LENGTH          reduce using rule 85 (else -> ELSE block .)
    INC             reduce using rule 85 (else -> ELSE block .)
    WHILE           reduce using rule 85 (else -> ELSE block .)
    FOR             reduce using rule 85 (else -> ELSE block .)
    BREAK           reduce using rule 85 (else -> ELSE block .)
    IDENTIFIER      reduce using rule 85 (else -> ELSE block .)
    END             reduce using rule 85 (else -> ELSE block .)


state 196

    (76) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET AND . some_predicates
    (73) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET AND some_predicates
    (74) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET OR some_predicates
    (75) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET
    (76) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET AND some_predicates
    (77) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET OR some_predicates
    (78) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 187

    some_predicates                shift and go to state 199

state 197

    (77) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET OR . some_predicates
    (73) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET AND some_predicates
    (74) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET OR some_predicates
    (75) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET
    (76) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET AND some_predicates
    (77) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET OR some_predicates
    (78) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 187

    some_predicates                shift and go to state 200

state 198

    (73) some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET . AND some_predicates
    (74) some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET . OR some_predicates
    (75) some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET .

    AND             shift and go to state 177
    OR              shift and go to state 179
    DO              reduce using rule 75 (some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET .)


state 199

    (76) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET AND some_predicates .

    DO              reduce using rule 76 (some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET AND some_predicates .)


state 200

    (77) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET OR some_predicates .

    DO              reduce using rule 77 (some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET OR some_predicates .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 34 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 75 resolved as shift
WARNING: shift/reduce conflict for MUL in state 75 resolved as shift
WARNING: shift/reduce conflict for DIV in state 75 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 77 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 77 resolved as shift
WARNING: shift/reduce conflict for MUL in state 77 resolved as shift
WARNING: shift/reduce conflict for DIV in state 77 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 79 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 79 resolved as shift
WARNING: shift/reduce conflict for MUL in state 79 resolved as shift
WARNING: shift/reduce conflict for DIV in state 79 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 83 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MUL in state 83 resolved as shift
WARNING: shift/reduce conflict for DIV in state 83 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 123 resolved as shift
WARNING: shift/reduce conflict for DO in state 139 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 143 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 143 resolved as shift
WARNING: shift/reduce conflict for MUL in state 143 resolved as shift
WARNING: shift/reduce conflict for DIV in state 143 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 143 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 144 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 144 resolved as shift
WARNING: shift/reduce conflict for MUL in state 144 resolved as shift
WARNING: shift/reduce conflict for DIV in state 144 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 144 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 145 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 145 resolved as shift
WARNING: shift/reduce conflict for MUL in state 145 resolved as shift
WARNING: shift/reduce conflict for DIV in state 145 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 145 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 146 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 146 resolved as shift
WARNING: shift/reduce conflict for MUL in state 146 resolved as shift
WARNING: shift/reduce conflict for DIV in state 146 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 146 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 147 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 147 resolved as shift
WARNING: shift/reduce conflict for MUL in state 147 resolved as shift
WARNING: shift/reduce conflict for DIV in state 147 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 147 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 149 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 149 resolved as shift
WARNING: shift/reduce conflict for MUL in state 149 resolved as shift
WARNING: shift/reduce conflict for DIV in state 149 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 149 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 150 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 150 resolved as shift
WARNING: shift/reduce conflict for MUL in state 150 resolved as shift
WARNING: shift/reduce conflict for DIV in state 150 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 150 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 151 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 151 resolved as shift
WARNING: shift/reduce conflict for MUL in state 151 resolved as shift
WARNING: shift/reduce conflict for DIV in state 151 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 151 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 152 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 152 resolved as shift
WARNING: shift/reduce conflict for MUL in state 152 resolved as shift
WARNING: shift/reduce conflict for DIV in state 152 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 152 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 153 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 153 resolved as shift
WARNING: shift/reduce conflict for MUL in state 153 resolved as shift
WARNING: shift/reduce conflict for DIV in state 153 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 153 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 154 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 154 resolved as shift
WARNING: shift/reduce conflict for MUL in state 154 resolved as shift
WARNING: shift/reduce conflict for DIV in state 154 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 154 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 156 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 156 resolved as shift
WARNING: shift/reduce conflict for MUL in state 156 resolved as shift
WARNING: shift/reduce conflict for DIV in state 156 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 156 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 157 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 157 resolved as shift
WARNING: shift/reduce conflict for MUL in state 157 resolved as shift
WARNING: shift/reduce conflict for DIV in state 157 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 157 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 158 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 158 resolved as shift
WARNING: shift/reduce conflict for MUL in state 158 resolved as shift
WARNING: shift/reduce conflict for DIV in state 158 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 158 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 159 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 159 resolved as shift
WARNING: shift/reduce conflict for MUL in state 159 resolved as shift
WARNING: shift/reduce conflict for DIV in state 159 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 159 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 160 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 160 resolved as shift
WARNING: shift/reduce conflict for MUL in state 160 resolved as shift
WARNING: shift/reduce conflict for DIV in state 160 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 160 resolved as shift
WARNING: reduce/reduce conflict in state 83 resolved using rule (assignment -> identifier ASSIGNMENT function)
WARNING: rejected rule (arithmetic_expression -> function) in state 83
WARNING: reduce/reduce conflict in state 125 resolved using rule (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON)
WARNING: rejected rule (arithmetic_expression -> arithmetic_expression SEMICOLON) in state 125
