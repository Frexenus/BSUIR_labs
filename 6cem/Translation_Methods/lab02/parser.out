Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> consts
Rule 1     consts -> CONST IDENTIFIER EQUALITY NUMBER SEMICOLON begin_program
Rule 2     consts -> CONST IDENTIFIER EQUALITY STRING SEMICOLON begin_program
Rule 3     consts -> CONST IDENTIFIER EQUALITY matrix SEMICOLON begin_program
Rule 4     consts -> begin_program
Rule 5     matrix -> OPEN_SQUARE_BRACKET identifiers CLOSE_SQUARE_BRACKET
Rule 6     identifiers -> IDENTIFIER ZAPYATAYA identifiers
Rule 7     identifiers -> NUMBER ZAPYATAYA identifiers
Rule 8     identifiers -> STRING ZAPYATAYA identifiers
Rule 9     identifiers -> IDENTIFIER
Rule 10    identifiers -> NUMBER
Rule 11    identifiers -> STRING
Rule 12    begin_program -> VAR declarations BEGIN body END POINT
Rule 13    block -> BEGIN body END SEMICOLON
Rule 14    body -> expression
Rule 15    identifier -> IDENTIFIER
Rule 16    expression -> assignment expression
Rule 17    expression -> if expression
Rule 18    expression -> function expression
Rule 19    expression -> empty
Rule 20    expression -> while expression
Rule 21    expression -> for expression
Rule 22    expression -> break
Rule 23    break -> BREAK SEMICOLON
Rule 24    declarations -> declaration declarations
Rule 25    declarations -> empty
Rule 26    declaration -> IDENTIFIER another_identifiers COLON type SEMICOLON
Rule 27    another_identifiers -> ZAPYATAYA IDENTIFIER another_identifiers
Rule 28    another_identifiers -> empty
Rule 29    type -> TYPE_STRING
Rule 30    type -> TYPE_INTEGER
Rule 31    type -> TYPE_REAL
Rule 32    empty -> <empty>
Rule 33    assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON
Rule 34    assignment -> identifier ASSIGNMENT function SEMICOLON
Rule 35    assignment -> identifier ASSIGNMENT function
Rule 36    assignment -> identifier ASSIGNMENT arithmetic_expression
Rule 37    arithmetic_expression -> NUMBER
Rule 38    arithmetic_expression -> identifier
Rule 39    arithmetic_expression -> STRING
Rule 40    arithmetic_expression -> function
Rule 41    arithmetic_expression -> identifier PLUS arithmetic_expression
Rule 42    arithmetic_expression -> identifier MINUS arithmetic_expression
Rule 43    arithmetic_expression -> identifier MUL arithmetic_expression
Rule 44    arithmetic_expression -> identifier DIV arithmetic_expression
Rule 45    arithmetic_expression -> NUMBER PLUS arithmetic_expression
Rule 46    arithmetic_expression -> NUMBER MINUS arithmetic_expression
Rule 47    arithmetic_expression -> NUMBER MUL arithmetic_expression
Rule 48    arithmetic_expression -> NUMBER DIV arithmetic_expression
Rule 49    arithmetic_expression -> function PLUS arithmetic_expression
Rule 50    arithmetic_expression -> function MINUS arithmetic_expression
Rule 51    arithmetic_expression -> function MUL arithmetic_expression
Rule 52    arithmetic_expression -> function DIV arithmetic_expression
Rule 53    arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
Rule 54    arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression
Rule 55    arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression
Rule 56    arithmetic_expression -> arithmetic_expression MUL arithmetic_expression
Rule 57    arithmetic_expression -> arithmetic_expression DIV arithmetic_expression
Rule 58    function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
Rule 59    function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
Rule 60    function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
Rule 61    function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
Rule 62    function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
Rule 63    function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
Rule 64    predicate -> arithmetic_expression COMPARISON arithmetic_expression
Rule 65    predicate -> arithmetic_expression EQUALITY arithmetic_expression
Rule 66    predicate -> arithmetic_expression NON_EQUALITY arithmetic_expression
Rule 67    predicate -> arithmetic_expression NON_STRICT_COMPARISON arithmetic_expression
Rule 68    predicate -> arithmetic_expression IN identifier
Rule 69    predicate -> arithmetic_expression IN matrix
Rule 70    some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET AND some_predicates
Rule 71    some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET OR some_predicates
Rule 72    some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET
Rule 73    some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET AND some_predicates
Rule 74    some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET OR some_predicates
Rule 75    some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET
Rule 76    while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block
Rule 77    while -> WHILE some_predicates DO block
Rule 78    for -> FOR assignment TO arithmetic_expression DO block
Rule 79    for -> FOR assignment DOWNTO arithmetic_expression DO block
Rule 80    if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block
Rule 81    if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else
Rule 82    else -> ELSE block

Terminals, with rules where they appear

AND                  : 70 73
ASSIGNMENT           : 33 34 35 36
BEGIN                : 12 13
BREAK                : 23
CLOSE_BRACKET        : 58 59 60 61 62 63 70 71 72 73 73 74 74 75 75 76 80 81
CLOSE_SQUARE_BRACKET : 5 53
COLON                : 26
COMPARISON           : 64
CONST                : 1 2 3
DIV                  : 44 48 52 57
DO                   : 76 77 78 79
DOWNTO               : 79
ELSE                 : 82
END                  : 12 13
EQUALITY             : 1 2 3 65
FOR                  : 78 79
IDENTIFIER           : 1 2 3 6 9 15 26 27
IF                   : 80 81
IN                   : 68 69
INC                  : 63
LENGTH               : 62
MINUS                : 42 46 50 55
MUL                  : 43 47 51 56
NON_EQUALITY         : 66
NON_STRICT_COMPARISON : 67
NOT                  : 73 74 75
NUMBER               : 1 7 10 37 45 46 47 48
OPEN_BRACKET         : 58 59 60 61 62 63 70 71 72 73 73 74 74 75 75 76 80 81
OPEN_SQUARE_BRACKET  : 5 53
OR                   : 71 74
PLUS                 : 41 45 49 54
POINT                : 12
READ                 : 60
READLN               : 61
SEMICOLON            : 1 2 3 13 23 26 33 34 58 59 60 61 63
STRING               : 2 8 11 39
THEN                 : 80 81
TO                   : 78
TYPE_INTEGER         : 30
TYPE_REAL            : 31
TYPE_STRING          : 29
VAR                  : 12
WHILE                : 76 77
WRITE                : 58
WRITELN              : 59
ZAPYATAYA            : 6 7 8 27
error                : 

Nonterminals, with rules where they appear

another_identifiers  : 26 27
arithmetic_expression : 33 36 41 42 43 44 45 46 47 48 49 50 51 52 53 54 54 55 55 56 56 57 57 58 59 64 64 65 65 66 66 67 67 68 69 78 79
assignment           : 16 78 79
begin_program        : 1 2 3 4
block                : 76 77 78 79 80 81 82
body                 : 12 13
break                : 22
consts               : 0
declaration          : 24
declarations         : 12 24
else                 : 81
empty                : 19 25 28
expression           : 14 16 17 18 20 21
for                  : 21
function             : 18 34 35 40 49 50 51 52
identifier           : 33 34 35 36 38 41 42 43 44 53 60 61 62 63 68
identifiers          : 5 6 7 8
if                   : 17
matrix               : 3 69
predicate            : 70 71 72 73 74 75 76 80 81
some_predicates      : 70 71 73 74 77
type                 : 26
while                : 20

Parsing method: LALR

state 0

    (0) S' -> . consts
    (1) consts -> . CONST IDENTIFIER EQUALITY NUMBER SEMICOLON begin_program
    (2) consts -> . CONST IDENTIFIER EQUALITY STRING SEMICOLON begin_program
    (3) consts -> . CONST IDENTIFIER EQUALITY matrix SEMICOLON begin_program
    (4) consts -> . begin_program
    (12) begin_program -> . VAR declarations BEGIN body END POINT

    CONST           shift and go to state 2
    VAR             shift and go to state 1

    consts                         shift and go to state 3
    begin_program                  shift and go to state 4

state 1

    (12) begin_program -> VAR . declarations BEGIN body END POINT
    (24) declarations -> . declaration declarations
    (25) declarations -> . empty
    (26) declaration -> . IDENTIFIER another_identifiers COLON type SEMICOLON
    (32) empty -> .

    IDENTIFIER      shift and go to state 5
    BEGIN           reduce using rule 32 (empty -> .)

    empty                          shift and go to state 6
    declarations                   shift and go to state 7
    declaration                    shift and go to state 8

state 2

    (1) consts -> CONST . IDENTIFIER EQUALITY NUMBER SEMICOLON begin_program
    (2) consts -> CONST . IDENTIFIER EQUALITY STRING SEMICOLON begin_program
    (3) consts -> CONST . IDENTIFIER EQUALITY matrix SEMICOLON begin_program

    IDENTIFIER      shift and go to state 9


state 3

    (0) S' -> consts .



state 4

    (4) consts -> begin_program .

    $end            reduce using rule 4 (consts -> begin_program .)


state 5

    (26) declaration -> IDENTIFIER . another_identifiers COLON type SEMICOLON
    (27) another_identifiers -> . ZAPYATAYA IDENTIFIER another_identifiers
    (28) another_identifiers -> . empty
    (32) empty -> .

    ZAPYATAYA       shift and go to state 11
    COLON           reduce using rule 32 (empty -> .)

    another_identifiers            shift and go to state 12
    empty                          shift and go to state 10

state 6

    (25) declarations -> empty .

    BEGIN           reduce using rule 25 (declarations -> empty .)


state 7

    (12) begin_program -> VAR declarations . BEGIN body END POINT

    BEGIN           shift and go to state 13


state 8

    (24) declarations -> declaration . declarations
    (24) declarations -> . declaration declarations
    (25) declarations -> . empty
    (26) declaration -> . IDENTIFIER another_identifiers COLON type SEMICOLON
    (32) empty -> .

    IDENTIFIER      shift and go to state 5
    BEGIN           reduce using rule 32 (empty -> .)

    declarations                   shift and go to state 14
    empty                          shift and go to state 6
    declaration                    shift and go to state 8

state 9

    (1) consts -> CONST IDENTIFIER . EQUALITY NUMBER SEMICOLON begin_program
    (2) consts -> CONST IDENTIFIER . EQUALITY STRING SEMICOLON begin_program
    (3) consts -> CONST IDENTIFIER . EQUALITY matrix SEMICOLON begin_program

    EQUALITY        shift and go to state 15


state 10

    (28) another_identifiers -> empty .

    COLON           reduce using rule 28 (another_identifiers -> empty .)


state 11

    (27) another_identifiers -> ZAPYATAYA . IDENTIFIER another_identifiers

    IDENTIFIER      shift and go to state 16


state 12

    (26) declaration -> IDENTIFIER another_identifiers . COLON type SEMICOLON

    COLON           shift and go to state 17


state 13

    (12) begin_program -> VAR declarations BEGIN . body END POINT
    (14) body -> . expression
    (16) expression -> . assignment expression
    (17) expression -> . if expression
    (18) expression -> . function expression
    (19) expression -> . empty
    (20) expression -> . while expression
    (21) expression -> . for expression
    (22) expression -> . break
    (33) assignment -> . identifier ASSIGNMENT arithmetic_expression SEMICOLON
    (34) assignment -> . identifier ASSIGNMENT function SEMICOLON
    (35) assignment -> . identifier ASSIGNMENT function
    (36) assignment -> . identifier ASSIGNMENT arithmetic_expression
    (80) if -> . IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block
    (81) if -> . IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (32) empty -> .
    (76) while -> . WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block
    (77) while -> . WHILE some_predicates DO block
    (78) for -> . FOR assignment TO arithmetic_expression DO block
    (79) for -> . FOR assignment DOWNTO arithmetic_expression DO block
    (23) break -> . BREAK SEMICOLON
    (15) identifier -> . IDENTIFIER

    IF              shift and go to state 27
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18
    END             reduce using rule 32 (empty -> .)
    WHILE           shift and go to state 20
    FOR             shift and go to state 24
    BREAK           shift and go to state 26
    IDENTIFIER      shift and go to state 29

    expression                     shift and go to state 23
    if                             shift and go to state 21
    break                          shift and go to state 22
    assignment                     shift and go to state 19
    body                           shift and go to state 35
    function                       shift and go to state 32
    identifier                     shift and go to state 33
    while                          shift and go to state 34
    for                            shift and go to state 28
    empty                          shift and go to state 38

state 14

    (24) declarations -> declaration declarations .

    BEGIN           reduce using rule 24 (declarations -> declaration declarations .)


state 15

    (1) consts -> CONST IDENTIFIER EQUALITY . NUMBER SEMICOLON begin_program
    (2) consts -> CONST IDENTIFIER EQUALITY . STRING SEMICOLON begin_program
    (3) consts -> CONST IDENTIFIER EQUALITY . matrix SEMICOLON begin_program
    (5) matrix -> . OPEN_SQUARE_BRACKET identifiers CLOSE_SQUARE_BRACKET

    NUMBER          shift and go to state 40
    STRING          shift and go to state 39
    OPEN_SQUARE_BRACKET shift and go to state 42

    matrix                         shift and go to state 41

state 16

    (27) another_identifiers -> ZAPYATAYA IDENTIFIER . another_identifiers
    (27) another_identifiers -> . ZAPYATAYA IDENTIFIER another_identifiers
    (28) another_identifiers -> . empty
    (32) empty -> .

    ZAPYATAYA       shift and go to state 11
    COLON           reduce using rule 32 (empty -> .)

    another_identifiers            shift and go to state 43
    empty                          shift and go to state 10

state 17

    (26) declaration -> IDENTIFIER another_identifiers COLON . type SEMICOLON
    (29) type -> . TYPE_STRING
    (30) type -> . TYPE_INTEGER
    (31) type -> . TYPE_REAL

    TYPE_STRING     shift and go to state 45
    TYPE_INTEGER    shift and go to state 44
    TYPE_REAL       shift and go to state 47

    type                           shift and go to state 46

state 18

    (63) function -> INC . OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    OPEN_BRACKET    shift and go to state 48


state 19

    (16) expression -> assignment . expression
    (16) expression -> . assignment expression
    (17) expression -> . if expression
    (18) expression -> . function expression
    (19) expression -> . empty
    (20) expression -> . while expression
    (21) expression -> . for expression
    (22) expression -> . break
    (33) assignment -> . identifier ASSIGNMENT arithmetic_expression SEMICOLON
    (34) assignment -> . identifier ASSIGNMENT function SEMICOLON
    (35) assignment -> . identifier ASSIGNMENT function
    (36) assignment -> . identifier ASSIGNMENT arithmetic_expression
    (80) if -> . IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block
    (81) if -> . IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (32) empty -> .
    (76) while -> . WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block
    (77) while -> . WHILE some_predicates DO block
    (78) for -> . FOR assignment TO arithmetic_expression DO block
    (79) for -> . FOR assignment DOWNTO arithmetic_expression DO block
    (23) break -> . BREAK SEMICOLON
    (15) identifier -> . IDENTIFIER

    IF              shift and go to state 27
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18
    END             reduce using rule 32 (empty -> .)
    WHILE           shift and go to state 20
    FOR             shift and go to state 24
    BREAK           shift and go to state 26
    IDENTIFIER      shift and go to state 29

    expression                     shift and go to state 49
    if                             shift and go to state 21
    break                          shift and go to state 22
    assignment                     shift and go to state 19
    function                       shift and go to state 32
    identifier                     shift and go to state 33
    while                          shift and go to state 34
    for                            shift and go to state 28
    empty                          shift and go to state 38

state 20

    (76) while -> WHILE . OPEN_BRACKET predicate CLOSE_BRACKET DO block
    (77) while -> WHILE . some_predicates DO block
    (70) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET AND some_predicates
    (71) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET OR some_predicates
    (72) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET
    (73) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET AND some_predicates
    (74) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET OR some_predicates
    (75) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 51

    some_predicates                shift and go to state 50

state 21

    (17) expression -> if . expression
    (16) expression -> . assignment expression
    (17) expression -> . if expression
    (18) expression -> . function expression
    (19) expression -> . empty
    (20) expression -> . while expression
    (21) expression -> . for expression
    (22) expression -> . break
    (33) assignment -> . identifier ASSIGNMENT arithmetic_expression SEMICOLON
    (34) assignment -> . identifier ASSIGNMENT function SEMICOLON
    (35) assignment -> . identifier ASSIGNMENT function
    (36) assignment -> . identifier ASSIGNMENT arithmetic_expression
    (80) if -> . IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block
    (81) if -> . IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (32) empty -> .
    (76) while -> . WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block
    (77) while -> . WHILE some_predicates DO block
    (78) for -> . FOR assignment TO arithmetic_expression DO block
    (79) for -> . FOR assignment DOWNTO arithmetic_expression DO block
    (23) break -> . BREAK SEMICOLON
    (15) identifier -> . IDENTIFIER

    IF              shift and go to state 27
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18
    END             reduce using rule 32 (empty -> .)
    WHILE           shift and go to state 20
    FOR             shift and go to state 24
    BREAK           shift and go to state 26
    IDENTIFIER      shift and go to state 29

    expression                     shift and go to state 52
    if                             shift and go to state 21
    break                          shift and go to state 22
    assignment                     shift and go to state 19
    function                       shift and go to state 32
    identifier                     shift and go to state 33
    while                          shift and go to state 34
    for                            shift and go to state 28
    empty                          shift and go to state 38

state 22

    (22) expression -> break .

    END             reduce using rule 22 (expression -> break .)


state 23

    (14) body -> expression .

    END             reduce using rule 14 (body -> expression .)


state 24

    (78) for -> FOR . assignment TO arithmetic_expression DO block
    (79) for -> FOR . assignment DOWNTO arithmetic_expression DO block
    (33) assignment -> . identifier ASSIGNMENT arithmetic_expression SEMICOLON
    (34) assignment -> . identifier ASSIGNMENT function SEMICOLON
    (35) assignment -> . identifier ASSIGNMENT function
    (36) assignment -> . identifier ASSIGNMENT arithmetic_expression
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 29

    assignment                     shift and go to state 53
    identifier                     shift and go to state 33

state 25

    (62) function -> LENGTH . OPEN_BRACKET identifier CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 54


state 26

    (23) break -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 55


state 27

    (80) if -> IF . OPEN_BRACKET predicate CLOSE_BRACKET THEN block
    (81) if -> IF . OPEN_BRACKET predicate CLOSE_BRACKET THEN block else

    OPEN_BRACKET    shift and go to state 56


state 28

    (21) expression -> for . expression
    (16) expression -> . assignment expression
    (17) expression -> . if expression
    (18) expression -> . function expression
    (19) expression -> . empty
    (20) expression -> . while expression
    (21) expression -> . for expression
    (22) expression -> . break
    (33) assignment -> . identifier ASSIGNMENT arithmetic_expression SEMICOLON
    (34) assignment -> . identifier ASSIGNMENT function SEMICOLON
    (35) assignment -> . identifier ASSIGNMENT function
    (36) assignment -> . identifier ASSIGNMENT arithmetic_expression
    (80) if -> . IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block
    (81) if -> . IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (32) empty -> .
    (76) while -> . WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block
    (77) while -> . WHILE some_predicates DO block
    (78) for -> . FOR assignment TO arithmetic_expression DO block
    (79) for -> . FOR assignment DOWNTO arithmetic_expression DO block
    (23) break -> . BREAK SEMICOLON
    (15) identifier -> . IDENTIFIER

    IF              shift and go to state 27
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18
    END             reduce using rule 32 (empty -> .)
    WHILE           shift and go to state 20
    FOR             shift and go to state 24
    BREAK           shift and go to state 26
    IDENTIFIER      shift and go to state 29

    expression                     shift and go to state 57
    if                             shift and go to state 21
    break                          shift and go to state 22
    assignment                     shift and go to state 19
    function                       shift and go to state 32
    identifier                     shift and go to state 33
    while                          shift and go to state 34
    for                            shift and go to state 28
    empty                          shift and go to state 38

state 29

    (15) identifier -> IDENTIFIER .

    PLUS            reduce using rule 15 (identifier -> IDENTIFIER .)
    MINUS           reduce using rule 15 (identifier -> IDENTIFIER .)
    MUL             reduce using rule 15 (identifier -> IDENTIFIER .)
    DIV             reduce using rule 15 (identifier -> IDENTIFIER .)
    OPEN_SQUARE_BRACKET reduce using rule 15 (identifier -> IDENTIFIER .)
    COMPARISON      reduce using rule 15 (identifier -> IDENTIFIER .)
    EQUALITY        reduce using rule 15 (identifier -> IDENTIFIER .)
    NON_EQUALITY    reduce using rule 15 (identifier -> IDENTIFIER .)
    NON_STRICT_COMPARISON reduce using rule 15 (identifier -> IDENTIFIER .)
    IN              reduce using rule 15 (identifier -> IDENTIFIER .)
    CLOSE_BRACKET   reduce using rule 15 (identifier -> IDENTIFIER .)
    SEMICOLON       reduce using rule 15 (identifier -> IDENTIFIER .)
    IF              reduce using rule 15 (identifier -> IDENTIFIER .)
    WRITE           reduce using rule 15 (identifier -> IDENTIFIER .)
    WRITELN         reduce using rule 15 (identifier -> IDENTIFIER .)
    READ            reduce using rule 15 (identifier -> IDENTIFIER .)
    READLN          reduce using rule 15 (identifier -> IDENTIFIER .)
    LENGTH          reduce using rule 15 (identifier -> IDENTIFIER .)
    INC             reduce using rule 15 (identifier -> IDENTIFIER .)
    WHILE           reduce using rule 15 (identifier -> IDENTIFIER .)
    FOR             reduce using rule 15 (identifier -> IDENTIFIER .)
    BREAK           reduce using rule 15 (identifier -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 15 (identifier -> IDENTIFIER .)
    END             reduce using rule 15 (identifier -> IDENTIFIER .)
    TO              reduce using rule 15 (identifier -> IDENTIFIER .)
    DOWNTO          reduce using rule 15 (identifier -> IDENTIFIER .)
    DO              reduce using rule 15 (identifier -> IDENTIFIER .)
    CLOSE_SQUARE_BRACKET reduce using rule 15 (identifier -> IDENTIFIER .)
    ASSIGNMENT      reduce using rule 15 (identifier -> IDENTIFIER .)


state 30

    (58) function -> WRITE . OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON

    OPEN_BRACKET    shift and go to state 58


state 31

    (61) function -> READLN . OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    OPEN_BRACKET    shift and go to state 59


state 32

    (18) expression -> function . expression
    (16) expression -> . assignment expression
    (17) expression -> . if expression
    (18) expression -> . function expression
    (19) expression -> . empty
    (20) expression -> . while expression
    (21) expression -> . for expression
    (22) expression -> . break
    (33) assignment -> . identifier ASSIGNMENT arithmetic_expression SEMICOLON
    (34) assignment -> . identifier ASSIGNMENT function SEMICOLON
    (35) assignment -> . identifier ASSIGNMENT function
    (36) assignment -> . identifier ASSIGNMENT arithmetic_expression
    (80) if -> . IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block
    (81) if -> . IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (32) empty -> .
    (76) while -> . WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block
    (77) while -> . WHILE some_predicates DO block
    (78) for -> . FOR assignment TO arithmetic_expression DO block
    (79) for -> . FOR assignment DOWNTO arithmetic_expression DO block
    (23) break -> . BREAK SEMICOLON
    (15) identifier -> . IDENTIFIER

    IF              shift and go to state 27
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18
    END             reduce using rule 32 (empty -> .)
    WHILE           shift and go to state 20
    FOR             shift and go to state 24
    BREAK           shift and go to state 26
    IDENTIFIER      shift and go to state 29

    expression                     shift and go to state 60
    if                             shift and go to state 21
    break                          shift and go to state 22
    assignment                     shift and go to state 19
    function                       shift and go to state 32
    identifier                     shift and go to state 33
    while                          shift and go to state 34
    for                            shift and go to state 28
    empty                          shift and go to state 38

state 33

    (33) assignment -> identifier . ASSIGNMENT arithmetic_expression SEMICOLON
    (34) assignment -> identifier . ASSIGNMENT function SEMICOLON
    (35) assignment -> identifier . ASSIGNMENT function
    (36) assignment -> identifier . ASSIGNMENT arithmetic_expression

    ASSIGNMENT      shift and go to state 61


state 34

    (20) expression -> while . expression
    (16) expression -> . assignment expression
    (17) expression -> . if expression
    (18) expression -> . function expression
    (19) expression -> . empty
    (20) expression -> . while expression
    (21) expression -> . for expression
    (22) expression -> . break
    (33) assignment -> . identifier ASSIGNMENT arithmetic_expression SEMICOLON
    (34) assignment -> . identifier ASSIGNMENT function SEMICOLON
    (35) assignment -> . identifier ASSIGNMENT function
    (36) assignment -> . identifier ASSIGNMENT arithmetic_expression
    (80) if -> . IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block
    (81) if -> . IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (32) empty -> .
    (76) while -> . WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block
    (77) while -> . WHILE some_predicates DO block
    (78) for -> . FOR assignment TO arithmetic_expression DO block
    (79) for -> . FOR assignment DOWNTO arithmetic_expression DO block
    (23) break -> . BREAK SEMICOLON
    (15) identifier -> . IDENTIFIER

    IF              shift and go to state 27
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18
    END             reduce using rule 32 (empty -> .)
    WHILE           shift and go to state 20
    FOR             shift and go to state 24
    BREAK           shift and go to state 26
    IDENTIFIER      shift and go to state 29

    expression                     shift and go to state 62
    if                             shift and go to state 21
    break                          shift and go to state 22
    assignment                     shift and go to state 19
    function                       shift and go to state 32
    identifier                     shift and go to state 33
    while                          shift and go to state 34
    for                            shift and go to state 28
    empty                          shift and go to state 38

state 35

    (12) begin_program -> VAR declarations BEGIN body . END POINT

    END             shift and go to state 63


state 36

    (60) function -> READ . OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    OPEN_BRACKET    shift and go to state 64


state 37

    (59) function -> WRITELN . OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON

    OPEN_BRACKET    shift and go to state 65


state 38

    (19) expression -> empty .

    END             reduce using rule 19 (expression -> empty .)


state 39

    (2) consts -> CONST IDENTIFIER EQUALITY STRING . SEMICOLON begin_program

    SEMICOLON       shift and go to state 66


state 40

    (1) consts -> CONST IDENTIFIER EQUALITY NUMBER . SEMICOLON begin_program

    SEMICOLON       shift and go to state 67


state 41

    (3) consts -> CONST IDENTIFIER EQUALITY matrix . SEMICOLON begin_program

    SEMICOLON       shift and go to state 68


state 42

    (5) matrix -> OPEN_SQUARE_BRACKET . identifiers CLOSE_SQUARE_BRACKET
    (6) identifiers -> . IDENTIFIER ZAPYATAYA identifiers
    (7) identifiers -> . NUMBER ZAPYATAYA identifiers
    (8) identifiers -> . STRING ZAPYATAYA identifiers
    (9) identifiers -> . IDENTIFIER
    (10) identifiers -> . NUMBER
    (11) identifiers -> . STRING

    IDENTIFIER      shift and go to state 71
    NUMBER          shift and go to state 70
    STRING          shift and go to state 69

    identifiers                    shift and go to state 72

state 43

    (27) another_identifiers -> ZAPYATAYA IDENTIFIER another_identifiers .

    COLON           reduce using rule 27 (another_identifiers -> ZAPYATAYA IDENTIFIER another_identifiers .)


state 44

    (30) type -> TYPE_INTEGER .

    SEMICOLON       reduce using rule 30 (type -> TYPE_INTEGER .)


state 45

    (29) type -> TYPE_STRING .

    SEMICOLON       reduce using rule 29 (type -> TYPE_STRING .)


state 46

    (26) declaration -> IDENTIFIER another_identifiers COLON type . SEMICOLON

    SEMICOLON       shift and go to state 73


state 47

    (31) type -> TYPE_REAL .

    SEMICOLON       reduce using rule 31 (type -> TYPE_REAL .)


state 48

    (63) function -> INC OPEN_BRACKET . identifier CLOSE_BRACKET SEMICOLON
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 29

    identifier                     shift and go to state 74

state 49

    (16) expression -> assignment expression .

    END             reduce using rule 16 (expression -> assignment expression .)


state 50

    (77) while -> WHILE some_predicates . DO block

    DO              shift and go to state 75


state 51

    (76) while -> WHILE OPEN_BRACKET . predicate CLOSE_BRACKET DO block
    (70) some_predicates -> OPEN_BRACKET . predicate CLOSE_BRACKET AND some_predicates
    (71) some_predicates -> OPEN_BRACKET . predicate CLOSE_BRACKET OR some_predicates
    (72) some_predicates -> OPEN_BRACKET . predicate CLOSE_BRACKET
    (73) some_predicates -> OPEN_BRACKET . NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET AND some_predicates
    (74) some_predicates -> OPEN_BRACKET . NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET OR some_predicates
    (75) some_predicates -> OPEN_BRACKET . NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET
    (64) predicate -> . arithmetic_expression COMPARISON arithmetic_expression
    (65) predicate -> . arithmetic_expression EQUALITY arithmetic_expression
    (66) predicate -> . arithmetic_expression NON_EQUALITY arithmetic_expression
    (67) predicate -> . arithmetic_expression NON_STRICT_COMPARISON arithmetic_expression
    (68) predicate -> . arithmetic_expression IN identifier
    (69) predicate -> . arithmetic_expression IN matrix
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NOT             shift and go to state 77
    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 80
    predicate                      shift and go to state 79
    identifier                     shift and go to state 82
    function                       shift and go to state 81

state 52

    (17) expression -> if expression .

    END             reduce using rule 17 (expression -> if expression .)


state 53

    (78) for -> FOR assignment . TO arithmetic_expression DO block
    (79) for -> FOR assignment . DOWNTO arithmetic_expression DO block

    TO              shift and go to state 84
    DOWNTO          shift and go to state 83


state 54

    (62) function -> LENGTH OPEN_BRACKET . identifier CLOSE_BRACKET
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 29

    identifier                     shift and go to state 85

state 55

    (23) break -> BREAK SEMICOLON .

    END             reduce using rule 23 (break -> BREAK SEMICOLON .)


state 56

    (80) if -> IF OPEN_BRACKET . predicate CLOSE_BRACKET THEN block
    (81) if -> IF OPEN_BRACKET . predicate CLOSE_BRACKET THEN block else
    (64) predicate -> . arithmetic_expression COMPARISON arithmetic_expression
    (65) predicate -> . arithmetic_expression EQUALITY arithmetic_expression
    (66) predicate -> . arithmetic_expression NON_EQUALITY arithmetic_expression
    (67) predicate -> . arithmetic_expression NON_STRICT_COMPARISON arithmetic_expression
    (68) predicate -> . arithmetic_expression IN identifier
    (69) predicate -> . arithmetic_expression IN matrix
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 80
    predicate                      shift and go to state 86
    identifier                     shift and go to state 82
    function                       shift and go to state 81

state 57

    (21) expression -> for expression .

    END             reduce using rule 21 (expression -> for expression .)


state 58

    (58) function -> WRITE OPEN_BRACKET . arithmetic_expression CLOSE_BRACKET SEMICOLON
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 87
    function                       shift and go to state 81
    identifier                     shift and go to state 82

state 59

    (61) function -> READLN OPEN_BRACKET . identifier CLOSE_BRACKET SEMICOLON
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 29

    identifier                     shift and go to state 88

state 60

    (18) expression -> function expression .

    END             reduce using rule 18 (expression -> function expression .)


state 61

    (33) assignment -> identifier ASSIGNMENT . arithmetic_expression SEMICOLON
    (34) assignment -> identifier ASSIGNMENT . function SEMICOLON
    (35) assignment -> identifier ASSIGNMENT . function
    (36) assignment -> identifier ASSIGNMENT . arithmetic_expression
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (15) identifier -> . IDENTIFIER

    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18
    IDENTIFIER      shift and go to state 29

    arithmetic_expression          shift and go to state 89
    function                       shift and go to state 90
    identifier                     shift and go to state 82

state 62

    (20) expression -> while expression .

    END             reduce using rule 20 (expression -> while expression .)


state 63

    (12) begin_program -> VAR declarations BEGIN body END . POINT

    POINT           shift and go to state 91


state 64

    (60) function -> READ OPEN_BRACKET . identifier CLOSE_BRACKET SEMICOLON
    (15) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 29

    identifier                     shift and go to state 92

state 65

    (59) function -> WRITELN OPEN_BRACKET . arithmetic_expression CLOSE_BRACKET SEMICOLON
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 93
    function                       shift and go to state 81
    identifier                     shift and go to state 82

state 66

    (2) consts -> CONST IDENTIFIER EQUALITY STRING SEMICOLON . begin_program
    (12) begin_program -> . VAR declarations BEGIN body END POINT

    VAR             shift and go to state 1

    begin_program                  shift and go to state 94

state 67

    (1) consts -> CONST IDENTIFIER EQUALITY NUMBER SEMICOLON . begin_program
    (12) begin_program -> . VAR declarations BEGIN body END POINT

    VAR             shift and go to state 1

    begin_program                  shift and go to state 95

state 68

    (3) consts -> CONST IDENTIFIER EQUALITY matrix SEMICOLON . begin_program
    (12) begin_program -> . VAR declarations BEGIN body END POINT

    VAR             shift and go to state 1

    begin_program                  shift and go to state 96

state 69

    (8) identifiers -> STRING . ZAPYATAYA identifiers
    (11) identifiers -> STRING .

    ZAPYATAYA       shift and go to state 97
    CLOSE_SQUARE_BRACKET reduce using rule 11 (identifiers -> STRING .)


state 70

    (7) identifiers -> NUMBER . ZAPYATAYA identifiers
    (10) identifiers -> NUMBER .

    ZAPYATAYA       shift and go to state 98
    CLOSE_SQUARE_BRACKET reduce using rule 10 (identifiers -> NUMBER .)


state 71

    (6) identifiers -> IDENTIFIER . ZAPYATAYA identifiers
    (9) identifiers -> IDENTIFIER .

    ZAPYATAYA       shift and go to state 99
    CLOSE_SQUARE_BRACKET reduce using rule 9 (identifiers -> IDENTIFIER .)


state 72

    (5) matrix -> OPEN_SQUARE_BRACKET identifiers . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET shift and go to state 100


state 73

    (26) declaration -> IDENTIFIER another_identifiers COLON type SEMICOLON .

    IDENTIFIER      reduce using rule 26 (declaration -> IDENTIFIER another_identifiers COLON type SEMICOLON .)
    BEGIN           reduce using rule 26 (declaration -> IDENTIFIER another_identifiers COLON type SEMICOLON .)


state 74

    (63) function -> INC OPEN_BRACKET identifier . CLOSE_BRACKET SEMICOLON

    CLOSE_BRACKET   shift and go to state 101


state 75

    (77) while -> WHILE some_predicates DO . block
    (13) block -> . BEGIN body END SEMICOLON

    BEGIN           shift and go to state 102

    block                          shift and go to state 103

state 76

    (37) arithmetic_expression -> NUMBER .
    (45) arithmetic_expression -> NUMBER . PLUS arithmetic_expression
    (46) arithmetic_expression -> NUMBER . MINUS arithmetic_expression
    (47) arithmetic_expression -> NUMBER . MUL arithmetic_expression
    (48) arithmetic_expression -> NUMBER . DIV arithmetic_expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    COMPARISON      reduce using rule 37 (arithmetic_expression -> NUMBER .)
    EQUALITY        reduce using rule 37 (arithmetic_expression -> NUMBER .)
    NON_EQUALITY    reduce using rule 37 (arithmetic_expression -> NUMBER .)
    NON_STRICT_COMPARISON reduce using rule 37 (arithmetic_expression -> NUMBER .)
    IN              reduce using rule 37 (arithmetic_expression -> NUMBER .)
    CLOSE_BRACKET   reduce using rule 37 (arithmetic_expression -> NUMBER .)
    SEMICOLON       reduce using rule 37 (arithmetic_expression -> NUMBER .)
    IF              reduce using rule 37 (arithmetic_expression -> NUMBER .)
    WRITE           reduce using rule 37 (arithmetic_expression -> NUMBER .)
    WRITELN         reduce using rule 37 (arithmetic_expression -> NUMBER .)
    READ            reduce using rule 37 (arithmetic_expression -> NUMBER .)
    READLN          reduce using rule 37 (arithmetic_expression -> NUMBER .)
    LENGTH          reduce using rule 37 (arithmetic_expression -> NUMBER .)
    INC             reduce using rule 37 (arithmetic_expression -> NUMBER .)
    WHILE           reduce using rule 37 (arithmetic_expression -> NUMBER .)
    FOR             reduce using rule 37 (arithmetic_expression -> NUMBER .)
    BREAK           reduce using rule 37 (arithmetic_expression -> NUMBER .)
    IDENTIFIER      reduce using rule 37 (arithmetic_expression -> NUMBER .)
    END             reduce using rule 37 (arithmetic_expression -> NUMBER .)
    TO              reduce using rule 37 (arithmetic_expression -> NUMBER .)
    DOWNTO          reduce using rule 37 (arithmetic_expression -> NUMBER .)
    DO              reduce using rule 37 (arithmetic_expression -> NUMBER .)
    CLOSE_SQUARE_BRACKET reduce using rule 37 (arithmetic_expression -> NUMBER .)
    PLUS            shift and go to state 107
    MINUS           shift and go to state 106
    MUL             shift and go to state 104
    DIV             shift and go to state 105

  ! PLUS            [ reduce using rule 37 (arithmetic_expression -> NUMBER .) ]
  ! MINUS           [ reduce using rule 37 (arithmetic_expression -> NUMBER .) ]
  ! MUL             [ reduce using rule 37 (arithmetic_expression -> NUMBER .) ]
  ! DIV             [ reduce using rule 37 (arithmetic_expression -> NUMBER .) ]


state 77

    (73) some_predicates -> OPEN_BRACKET NOT . OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET AND some_predicates
    (74) some_predicates -> OPEN_BRACKET NOT . OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET OR some_predicates
    (75) some_predicates -> OPEN_BRACKET NOT . OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 108


state 78

    (39) arithmetic_expression -> STRING .

    PLUS            reduce using rule 39 (arithmetic_expression -> STRING .)
    MINUS           reduce using rule 39 (arithmetic_expression -> STRING .)
    MUL             reduce using rule 39 (arithmetic_expression -> STRING .)
    DIV             reduce using rule 39 (arithmetic_expression -> STRING .)
    COMPARISON      reduce using rule 39 (arithmetic_expression -> STRING .)
    EQUALITY        reduce using rule 39 (arithmetic_expression -> STRING .)
    NON_EQUALITY    reduce using rule 39 (arithmetic_expression -> STRING .)
    NON_STRICT_COMPARISON reduce using rule 39 (arithmetic_expression -> STRING .)
    IN              reduce using rule 39 (arithmetic_expression -> STRING .)
    CLOSE_BRACKET   reduce using rule 39 (arithmetic_expression -> STRING .)
    SEMICOLON       reduce using rule 39 (arithmetic_expression -> STRING .)
    IF              reduce using rule 39 (arithmetic_expression -> STRING .)
    WRITE           reduce using rule 39 (arithmetic_expression -> STRING .)
    WRITELN         reduce using rule 39 (arithmetic_expression -> STRING .)
    READ            reduce using rule 39 (arithmetic_expression -> STRING .)
    READLN          reduce using rule 39 (arithmetic_expression -> STRING .)
    LENGTH          reduce using rule 39 (arithmetic_expression -> STRING .)
    INC             reduce using rule 39 (arithmetic_expression -> STRING .)
    WHILE           reduce using rule 39 (arithmetic_expression -> STRING .)
    FOR             reduce using rule 39 (arithmetic_expression -> STRING .)
    BREAK           reduce using rule 39 (arithmetic_expression -> STRING .)
    IDENTIFIER      reduce using rule 39 (arithmetic_expression -> STRING .)
    END             reduce using rule 39 (arithmetic_expression -> STRING .)
    TO              reduce using rule 39 (arithmetic_expression -> STRING .)
    DOWNTO          reduce using rule 39 (arithmetic_expression -> STRING .)
    DO              reduce using rule 39 (arithmetic_expression -> STRING .)
    CLOSE_SQUARE_BRACKET reduce using rule 39 (arithmetic_expression -> STRING .)


state 79

    (76) while -> WHILE OPEN_BRACKET predicate . CLOSE_BRACKET DO block
    (70) some_predicates -> OPEN_BRACKET predicate . CLOSE_BRACKET AND some_predicates
    (71) some_predicates -> OPEN_BRACKET predicate . CLOSE_BRACKET OR some_predicates
    (72) some_predicates -> OPEN_BRACKET predicate . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 109


state 80

    (64) predicate -> arithmetic_expression . COMPARISON arithmetic_expression
    (65) predicate -> arithmetic_expression . EQUALITY arithmetic_expression
    (66) predicate -> arithmetic_expression . NON_EQUALITY arithmetic_expression
    (67) predicate -> arithmetic_expression . NON_STRICT_COMPARISON arithmetic_expression
    (68) predicate -> arithmetic_expression . IN identifier
    (69) predicate -> arithmetic_expression . IN matrix
    (54) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (55) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression

    COMPARISON      shift and go to state 115
    EQUALITY        shift and go to state 118
    NON_EQUALITY    shift and go to state 116
    NON_STRICT_COMPARISON shift and go to state 117
    IN              shift and go to state 114
    PLUS            shift and go to state 113
    MINUS           shift and go to state 112
    MUL             shift and go to state 110
    DIV             shift and go to state 111


state 81

    (40) arithmetic_expression -> function .
    (49) arithmetic_expression -> function . PLUS arithmetic_expression
    (50) arithmetic_expression -> function . MINUS arithmetic_expression
    (51) arithmetic_expression -> function . MUL arithmetic_expression
    (52) arithmetic_expression -> function . DIV arithmetic_expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    COMPARISON      reduce using rule 40 (arithmetic_expression -> function .)
    EQUALITY        reduce using rule 40 (arithmetic_expression -> function .)
    NON_EQUALITY    reduce using rule 40 (arithmetic_expression -> function .)
    NON_STRICT_COMPARISON reduce using rule 40 (arithmetic_expression -> function .)
    IN              reduce using rule 40 (arithmetic_expression -> function .)
    CLOSE_BRACKET   reduce using rule 40 (arithmetic_expression -> function .)
    SEMICOLON       reduce using rule 40 (arithmetic_expression -> function .)
    IF              reduce using rule 40 (arithmetic_expression -> function .)
    WRITE           reduce using rule 40 (arithmetic_expression -> function .)
    WRITELN         reduce using rule 40 (arithmetic_expression -> function .)
    READ            reduce using rule 40 (arithmetic_expression -> function .)
    READLN          reduce using rule 40 (arithmetic_expression -> function .)
    LENGTH          reduce using rule 40 (arithmetic_expression -> function .)
    INC             reduce using rule 40 (arithmetic_expression -> function .)
    WHILE           reduce using rule 40 (arithmetic_expression -> function .)
    FOR             reduce using rule 40 (arithmetic_expression -> function .)
    BREAK           reduce using rule 40 (arithmetic_expression -> function .)
    IDENTIFIER      reduce using rule 40 (arithmetic_expression -> function .)
    END             reduce using rule 40 (arithmetic_expression -> function .)
    TO              reduce using rule 40 (arithmetic_expression -> function .)
    DOWNTO          reduce using rule 40 (arithmetic_expression -> function .)
    DO              reduce using rule 40 (arithmetic_expression -> function .)
    CLOSE_SQUARE_BRACKET reduce using rule 40 (arithmetic_expression -> function .)
    PLUS            shift and go to state 122
    MINUS           shift and go to state 121
    MUL             shift and go to state 119
    DIV             shift and go to state 120

  ! PLUS            [ reduce using rule 40 (arithmetic_expression -> function .) ]
  ! MINUS           [ reduce using rule 40 (arithmetic_expression -> function .) ]
  ! MUL             [ reduce using rule 40 (arithmetic_expression -> function .) ]
  ! DIV             [ reduce using rule 40 (arithmetic_expression -> function .) ]


state 82

    (38) arithmetic_expression -> identifier .
    (41) arithmetic_expression -> identifier . PLUS arithmetic_expression
    (42) arithmetic_expression -> identifier . MINUS arithmetic_expression
    (43) arithmetic_expression -> identifier . MUL arithmetic_expression
    (44) arithmetic_expression -> identifier . DIV arithmetic_expression
    (53) arithmetic_expression -> identifier . OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    COMPARISON      reduce using rule 38 (arithmetic_expression -> identifier .)
    EQUALITY        reduce using rule 38 (arithmetic_expression -> identifier .)
    NON_EQUALITY    reduce using rule 38 (arithmetic_expression -> identifier .)
    NON_STRICT_COMPARISON reduce using rule 38 (arithmetic_expression -> identifier .)
    IN              reduce using rule 38 (arithmetic_expression -> identifier .)
    CLOSE_BRACKET   reduce using rule 38 (arithmetic_expression -> identifier .)
    SEMICOLON       reduce using rule 38 (arithmetic_expression -> identifier .)
    IF              reduce using rule 38 (arithmetic_expression -> identifier .)
    WRITE           reduce using rule 38 (arithmetic_expression -> identifier .)
    WRITELN         reduce using rule 38 (arithmetic_expression -> identifier .)
    READ            reduce using rule 38 (arithmetic_expression -> identifier .)
    READLN          reduce using rule 38 (arithmetic_expression -> identifier .)
    LENGTH          reduce using rule 38 (arithmetic_expression -> identifier .)
    INC             reduce using rule 38 (arithmetic_expression -> identifier .)
    WHILE           reduce using rule 38 (arithmetic_expression -> identifier .)
    FOR             reduce using rule 38 (arithmetic_expression -> identifier .)
    BREAK           reduce using rule 38 (arithmetic_expression -> identifier .)
    IDENTIFIER      reduce using rule 38 (arithmetic_expression -> identifier .)
    END             reduce using rule 38 (arithmetic_expression -> identifier .)
    TO              reduce using rule 38 (arithmetic_expression -> identifier .)
    DOWNTO          reduce using rule 38 (arithmetic_expression -> identifier .)
    DO              reduce using rule 38 (arithmetic_expression -> identifier .)
    CLOSE_SQUARE_BRACKET reduce using rule 38 (arithmetic_expression -> identifier .)
    PLUS            shift and go to state 126
    MINUS           shift and go to state 125
    MUL             shift and go to state 123
    DIV             shift and go to state 124
    OPEN_SQUARE_BRACKET shift and go to state 127

  ! PLUS            [ reduce using rule 38 (arithmetic_expression -> identifier .) ]
  ! MINUS           [ reduce using rule 38 (arithmetic_expression -> identifier .) ]
  ! MUL             [ reduce using rule 38 (arithmetic_expression -> identifier .) ]
  ! DIV             [ reduce using rule 38 (arithmetic_expression -> identifier .) ]


state 83

    (79) for -> FOR assignment DOWNTO . arithmetic_expression DO block
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 128
    function                       shift and go to state 81
    identifier                     shift and go to state 82

state 84

    (78) for -> FOR assignment TO . arithmetic_expression DO block
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 129
    function                       shift and go to state 81
    identifier                     shift and go to state 82

state 85

    (62) function -> LENGTH OPEN_BRACKET identifier . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 130


state 86

    (80) if -> IF OPEN_BRACKET predicate . CLOSE_BRACKET THEN block
    (81) if -> IF OPEN_BRACKET predicate . CLOSE_BRACKET THEN block else

    CLOSE_BRACKET   shift and go to state 131


state 87

    (58) function -> WRITE OPEN_BRACKET arithmetic_expression . CLOSE_BRACKET SEMICOLON
    (54) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (55) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression

    CLOSE_BRACKET   shift and go to state 132
    PLUS            shift and go to state 113
    MINUS           shift and go to state 112
    MUL             shift and go to state 110
    DIV             shift and go to state 111


state 88

    (61) function -> READLN OPEN_BRACKET identifier . CLOSE_BRACKET SEMICOLON

    CLOSE_BRACKET   shift and go to state 133


state 89

    (33) assignment -> identifier ASSIGNMENT arithmetic_expression . SEMICOLON
    (36) assignment -> identifier ASSIGNMENT arithmetic_expression .
    (54) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (55) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression

    SEMICOLON       shift and go to state 134
    TO              reduce using rule 36 (assignment -> identifier ASSIGNMENT arithmetic_expression .)
    DOWNTO          reduce using rule 36 (assignment -> identifier ASSIGNMENT arithmetic_expression .)
    IF              reduce using rule 36 (assignment -> identifier ASSIGNMENT arithmetic_expression .)
    WRITE           reduce using rule 36 (assignment -> identifier ASSIGNMENT arithmetic_expression .)
    WRITELN         reduce using rule 36 (assignment -> identifier ASSIGNMENT arithmetic_expression .)
    READ            reduce using rule 36 (assignment -> identifier ASSIGNMENT arithmetic_expression .)
    READLN          reduce using rule 36 (assignment -> identifier ASSIGNMENT arithmetic_expression .)
    LENGTH          reduce using rule 36 (assignment -> identifier ASSIGNMENT arithmetic_expression .)
    INC             reduce using rule 36 (assignment -> identifier ASSIGNMENT arithmetic_expression .)
    WHILE           reduce using rule 36 (assignment -> identifier ASSIGNMENT arithmetic_expression .)
    FOR             reduce using rule 36 (assignment -> identifier ASSIGNMENT arithmetic_expression .)
    BREAK           reduce using rule 36 (assignment -> identifier ASSIGNMENT arithmetic_expression .)
    IDENTIFIER      reduce using rule 36 (assignment -> identifier ASSIGNMENT arithmetic_expression .)
    END             reduce using rule 36 (assignment -> identifier ASSIGNMENT arithmetic_expression .)
    PLUS            shift and go to state 113
    MINUS           shift and go to state 112
    MUL             shift and go to state 110
    DIV             shift and go to state 111


state 90

    (34) assignment -> identifier ASSIGNMENT function . SEMICOLON
    (35) assignment -> identifier ASSIGNMENT function .
    (40) arithmetic_expression -> function .
    (49) arithmetic_expression -> function . PLUS arithmetic_expression
    (50) arithmetic_expression -> function . MINUS arithmetic_expression
    (51) arithmetic_expression -> function . MUL arithmetic_expression
    (52) arithmetic_expression -> function . DIV arithmetic_expression

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! reduce/reduce conflict for IF resolved using rule 35 (assignment -> identifier ASSIGNMENT function .)
  ! reduce/reduce conflict for WRITE resolved using rule 35 (assignment -> identifier ASSIGNMENT function .)
  ! reduce/reduce conflict for WRITELN resolved using rule 35 (assignment -> identifier ASSIGNMENT function .)
  ! reduce/reduce conflict for READ resolved using rule 35 (assignment -> identifier ASSIGNMENT function .)
  ! reduce/reduce conflict for READLN resolved using rule 35 (assignment -> identifier ASSIGNMENT function .)
  ! reduce/reduce conflict for LENGTH resolved using rule 35 (assignment -> identifier ASSIGNMENT function .)
  ! reduce/reduce conflict for INC resolved using rule 35 (assignment -> identifier ASSIGNMENT function .)
  ! reduce/reduce conflict for WHILE resolved using rule 35 (assignment -> identifier ASSIGNMENT function .)
  ! reduce/reduce conflict for FOR resolved using rule 35 (assignment -> identifier ASSIGNMENT function .)
  ! reduce/reduce conflict for BREAK resolved using rule 35 (assignment -> identifier ASSIGNMENT function .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 35 (assignment -> identifier ASSIGNMENT function .)
  ! reduce/reduce conflict for END resolved using rule 35 (assignment -> identifier ASSIGNMENT function .)
  ! reduce/reduce conflict for TO resolved using rule 35 (assignment -> identifier ASSIGNMENT function .)
  ! reduce/reduce conflict for DOWNTO resolved using rule 35 (assignment -> identifier ASSIGNMENT function .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    SEMICOLON       shift and go to state 135
    TO              reduce using rule 35 (assignment -> identifier ASSIGNMENT function .)
    DOWNTO          reduce using rule 35 (assignment -> identifier ASSIGNMENT function .)
    IF              reduce using rule 35 (assignment -> identifier ASSIGNMENT function .)
    WRITE           reduce using rule 35 (assignment -> identifier ASSIGNMENT function .)
    WRITELN         reduce using rule 35 (assignment -> identifier ASSIGNMENT function .)
    READ            reduce using rule 35 (assignment -> identifier ASSIGNMENT function .)
    READLN          reduce using rule 35 (assignment -> identifier ASSIGNMENT function .)
    LENGTH          reduce using rule 35 (assignment -> identifier ASSIGNMENT function .)
    INC             reduce using rule 35 (assignment -> identifier ASSIGNMENT function .)
    WHILE           reduce using rule 35 (assignment -> identifier ASSIGNMENT function .)
    FOR             reduce using rule 35 (assignment -> identifier ASSIGNMENT function .)
    BREAK           reduce using rule 35 (assignment -> identifier ASSIGNMENT function .)
    IDENTIFIER      reduce using rule 35 (assignment -> identifier ASSIGNMENT function .)
    END             reduce using rule 35 (assignment -> identifier ASSIGNMENT function .)
    PLUS            shift and go to state 122
    MINUS           shift and go to state 121
    MUL             shift and go to state 119
    DIV             shift and go to state 120

  ! SEMICOLON       [ reduce using rule 40 (arithmetic_expression -> function .) ]
  ! PLUS            [ reduce using rule 40 (arithmetic_expression -> function .) ]
  ! MINUS           [ reduce using rule 40 (arithmetic_expression -> function .) ]
  ! MUL             [ reduce using rule 40 (arithmetic_expression -> function .) ]
  ! DIV             [ reduce using rule 40 (arithmetic_expression -> function .) ]
  ! IF              [ reduce using rule 40 (arithmetic_expression -> function .) ]
  ! WRITE           [ reduce using rule 40 (arithmetic_expression -> function .) ]
  ! WRITELN         [ reduce using rule 40 (arithmetic_expression -> function .) ]
  ! READ            [ reduce using rule 40 (arithmetic_expression -> function .) ]
  ! READLN          [ reduce using rule 40 (arithmetic_expression -> function .) ]
  ! LENGTH          [ reduce using rule 40 (arithmetic_expression -> function .) ]
  ! INC             [ reduce using rule 40 (arithmetic_expression -> function .) ]
  ! WHILE           [ reduce using rule 40 (arithmetic_expression -> function .) ]
  ! FOR             [ reduce using rule 40 (arithmetic_expression -> function .) ]
  ! BREAK           [ reduce using rule 40 (arithmetic_expression -> function .) ]
  ! IDENTIFIER      [ reduce using rule 40 (arithmetic_expression -> function .) ]
  ! END             [ reduce using rule 40 (arithmetic_expression -> function .) ]
  ! TO              [ reduce using rule 40 (arithmetic_expression -> function .) ]
  ! DOWNTO          [ reduce using rule 40 (arithmetic_expression -> function .) ]


state 91

    (12) begin_program -> VAR declarations BEGIN body END POINT .

    $end            reduce using rule 12 (begin_program -> VAR declarations BEGIN body END POINT .)


state 92

    (60) function -> READ OPEN_BRACKET identifier . CLOSE_BRACKET SEMICOLON

    CLOSE_BRACKET   shift and go to state 136


state 93

    (59) function -> WRITELN OPEN_BRACKET arithmetic_expression . CLOSE_BRACKET SEMICOLON
    (54) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (55) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression

    CLOSE_BRACKET   shift and go to state 137
    PLUS            shift and go to state 113
    MINUS           shift and go to state 112
    MUL             shift and go to state 110
    DIV             shift and go to state 111


state 94

    (2) consts -> CONST IDENTIFIER EQUALITY STRING SEMICOLON begin_program .

    $end            reduce using rule 2 (consts -> CONST IDENTIFIER EQUALITY STRING SEMICOLON begin_program .)


state 95

    (1) consts -> CONST IDENTIFIER EQUALITY NUMBER SEMICOLON begin_program .

    $end            reduce using rule 1 (consts -> CONST IDENTIFIER EQUALITY NUMBER SEMICOLON begin_program .)


state 96

    (3) consts -> CONST IDENTIFIER EQUALITY matrix SEMICOLON begin_program .

    $end            reduce using rule 3 (consts -> CONST IDENTIFIER EQUALITY matrix SEMICOLON begin_program .)


state 97

    (8) identifiers -> STRING ZAPYATAYA . identifiers
    (6) identifiers -> . IDENTIFIER ZAPYATAYA identifiers
    (7) identifiers -> . NUMBER ZAPYATAYA identifiers
    (8) identifiers -> . STRING ZAPYATAYA identifiers
    (9) identifiers -> . IDENTIFIER
    (10) identifiers -> . NUMBER
    (11) identifiers -> . STRING

    IDENTIFIER      shift and go to state 71
    NUMBER          shift and go to state 70
    STRING          shift and go to state 69

    identifiers                    shift and go to state 138

state 98

    (7) identifiers -> NUMBER ZAPYATAYA . identifiers
    (6) identifiers -> . IDENTIFIER ZAPYATAYA identifiers
    (7) identifiers -> . NUMBER ZAPYATAYA identifiers
    (8) identifiers -> . STRING ZAPYATAYA identifiers
    (9) identifiers -> . IDENTIFIER
    (10) identifiers -> . NUMBER
    (11) identifiers -> . STRING

    IDENTIFIER      shift and go to state 71
    NUMBER          shift and go to state 70
    STRING          shift and go to state 69

    identifiers                    shift and go to state 139

state 99

    (6) identifiers -> IDENTIFIER ZAPYATAYA . identifiers
    (6) identifiers -> . IDENTIFIER ZAPYATAYA identifiers
    (7) identifiers -> . NUMBER ZAPYATAYA identifiers
    (8) identifiers -> . STRING ZAPYATAYA identifiers
    (9) identifiers -> . IDENTIFIER
    (10) identifiers -> . NUMBER
    (11) identifiers -> . STRING

    IDENTIFIER      shift and go to state 71
    NUMBER          shift and go to state 70
    STRING          shift and go to state 69

    identifiers                    shift and go to state 140

state 100

    (5) matrix -> OPEN_SQUARE_BRACKET identifiers CLOSE_SQUARE_BRACKET .

    SEMICOLON       reduce using rule 5 (matrix -> OPEN_SQUARE_BRACKET identifiers CLOSE_SQUARE_BRACKET .)
    CLOSE_BRACKET   reduce using rule 5 (matrix -> OPEN_SQUARE_BRACKET identifiers CLOSE_SQUARE_BRACKET .)


state 101

    (63) function -> INC OPEN_BRACKET identifier CLOSE_BRACKET . SEMICOLON

    SEMICOLON       shift and go to state 141


state 102

    (13) block -> BEGIN . body END SEMICOLON
    (14) body -> . expression
    (16) expression -> . assignment expression
    (17) expression -> . if expression
    (18) expression -> . function expression
    (19) expression -> . empty
    (20) expression -> . while expression
    (21) expression -> . for expression
    (22) expression -> . break
    (33) assignment -> . identifier ASSIGNMENT arithmetic_expression SEMICOLON
    (34) assignment -> . identifier ASSIGNMENT function SEMICOLON
    (35) assignment -> . identifier ASSIGNMENT function
    (36) assignment -> . identifier ASSIGNMENT arithmetic_expression
    (80) if -> . IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block
    (81) if -> . IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (32) empty -> .
    (76) while -> . WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block
    (77) while -> . WHILE some_predicates DO block
    (78) for -> . FOR assignment TO arithmetic_expression DO block
    (79) for -> . FOR assignment DOWNTO arithmetic_expression DO block
    (23) break -> . BREAK SEMICOLON
    (15) identifier -> . IDENTIFIER

    IF              shift and go to state 27
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18
    END             reduce using rule 32 (empty -> .)
    WHILE           shift and go to state 20
    FOR             shift and go to state 24
    BREAK           shift and go to state 26
    IDENTIFIER      shift and go to state 29

    expression                     shift and go to state 23
    if                             shift and go to state 21
    break                          shift and go to state 22
    assignment                     shift and go to state 19
    body                           shift and go to state 142
    function                       shift and go to state 32
    identifier                     shift and go to state 33
    while                          shift and go to state 34
    for                            shift and go to state 28
    empty                          shift and go to state 38

state 103

    (77) while -> WHILE some_predicates DO block .

    IF              reduce using rule 77 (while -> WHILE some_predicates DO block .)
    WRITE           reduce using rule 77 (while -> WHILE some_predicates DO block .)
    WRITELN         reduce using rule 77 (while -> WHILE some_predicates DO block .)
    READ            reduce using rule 77 (while -> WHILE some_predicates DO block .)
    READLN          reduce using rule 77 (while -> WHILE some_predicates DO block .)
    LENGTH          reduce using rule 77 (while -> WHILE some_predicates DO block .)
    INC             reduce using rule 77 (while -> WHILE some_predicates DO block .)
    WHILE           reduce using rule 77 (while -> WHILE some_predicates DO block .)
    FOR             reduce using rule 77 (while -> WHILE some_predicates DO block .)
    BREAK           reduce using rule 77 (while -> WHILE some_predicates DO block .)
    IDENTIFIER      reduce using rule 77 (while -> WHILE some_predicates DO block .)
    END             reduce using rule 77 (while -> WHILE some_predicates DO block .)


state 104

    (47) arithmetic_expression -> NUMBER MUL . arithmetic_expression
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 143
    function                       shift and go to state 81
    identifier                     shift and go to state 82

state 105

    (48) arithmetic_expression -> NUMBER DIV . arithmetic_expression
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 144
    function                       shift and go to state 81
    identifier                     shift and go to state 82

state 106

    (46) arithmetic_expression -> NUMBER MINUS . arithmetic_expression
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 145
    function                       shift and go to state 81
    identifier                     shift and go to state 82

state 107

    (45) arithmetic_expression -> NUMBER PLUS . arithmetic_expression
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 146
    function                       shift and go to state 81
    identifier                     shift and go to state 82

state 108

    (73) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET . predicate CLOSE_BRACKET CLOSE_BRACKET AND some_predicates
    (74) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET . predicate CLOSE_BRACKET CLOSE_BRACKET OR some_predicates
    (75) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET . predicate CLOSE_BRACKET CLOSE_BRACKET
    (64) predicate -> . arithmetic_expression COMPARISON arithmetic_expression
    (65) predicate -> . arithmetic_expression EQUALITY arithmetic_expression
    (66) predicate -> . arithmetic_expression NON_EQUALITY arithmetic_expression
    (67) predicate -> . arithmetic_expression NON_STRICT_COMPARISON arithmetic_expression
    (68) predicate -> . arithmetic_expression IN identifier
    (69) predicate -> . arithmetic_expression IN matrix
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 80
    predicate                      shift and go to state 147
    identifier                     shift and go to state 82
    function                       shift and go to state 81

state 109

    (76) while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET . DO block
    (70) some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET . AND some_predicates
    (71) some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET . OR some_predicates
    (72) some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET .

  ! shift/reduce conflict for DO resolved as shift
    DO              shift and go to state 150
    AND             shift and go to state 149
    OR              shift and go to state 148

  ! DO              [ reduce using rule 72 (some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET .) ]


state 110

    (56) arithmetic_expression -> arithmetic_expression MUL . arithmetic_expression
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 151
    function                       shift and go to state 81
    identifier                     shift and go to state 82

state 111

    (57) arithmetic_expression -> arithmetic_expression DIV . arithmetic_expression
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 152
    function                       shift and go to state 81
    identifier                     shift and go to state 82

state 112

    (55) arithmetic_expression -> arithmetic_expression MINUS . arithmetic_expression
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 153
    function                       shift and go to state 81
    identifier                     shift and go to state 82

state 113

    (54) arithmetic_expression -> arithmetic_expression PLUS . arithmetic_expression
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 154
    function                       shift and go to state 81
    identifier                     shift and go to state 82

state 114

    (68) predicate -> arithmetic_expression IN . identifier
    (69) predicate -> arithmetic_expression IN . matrix
    (15) identifier -> . IDENTIFIER
    (5) matrix -> . OPEN_SQUARE_BRACKET identifiers CLOSE_SQUARE_BRACKET

    IDENTIFIER      shift and go to state 29
    OPEN_SQUARE_BRACKET shift and go to state 42

    identifier                     shift and go to state 155
    matrix                         shift and go to state 156

state 115

    (64) predicate -> arithmetic_expression COMPARISON . arithmetic_expression
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 157
    function                       shift and go to state 81
    identifier                     shift and go to state 82

state 116

    (66) predicate -> arithmetic_expression NON_EQUALITY . arithmetic_expression
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 158
    function                       shift and go to state 81
    identifier                     shift and go to state 82

state 117

    (67) predicate -> arithmetic_expression NON_STRICT_COMPARISON . arithmetic_expression
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 159
    function                       shift and go to state 81
    identifier                     shift and go to state 82

state 118

    (65) predicate -> arithmetic_expression EQUALITY . arithmetic_expression
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 160
    function                       shift and go to state 81
    identifier                     shift and go to state 82

state 119

    (51) arithmetic_expression -> function MUL . arithmetic_expression
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 161
    function                       shift and go to state 81
    identifier                     shift and go to state 82

state 120

    (52) arithmetic_expression -> function DIV . arithmetic_expression
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 162
    function                       shift and go to state 81
    identifier                     shift and go to state 82

state 121

    (50) arithmetic_expression -> function MINUS . arithmetic_expression
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 163
    function                       shift and go to state 81
    identifier                     shift and go to state 82

state 122

    (49) arithmetic_expression -> function PLUS . arithmetic_expression
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 164
    function                       shift and go to state 81
    identifier                     shift and go to state 82

state 123

    (43) arithmetic_expression -> identifier MUL . arithmetic_expression
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 165
    function                       shift and go to state 81
    identifier                     shift and go to state 82

state 124

    (44) arithmetic_expression -> identifier DIV . arithmetic_expression
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 166
    function                       shift and go to state 81
    identifier                     shift and go to state 82

state 125

    (42) arithmetic_expression -> identifier MINUS . arithmetic_expression
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 167
    function                       shift and go to state 81
    identifier                     shift and go to state 82

state 126

    (41) arithmetic_expression -> identifier PLUS . arithmetic_expression
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 168
    function                       shift and go to state 81
    identifier                     shift and go to state 82

state 127

    (53) arithmetic_expression -> identifier OPEN_SQUARE_BRACKET . arithmetic_expression CLOSE_SQUARE_BRACKET
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 169
    function                       shift and go to state 81
    identifier                     shift and go to state 82

state 128

    (79) for -> FOR assignment DOWNTO arithmetic_expression . DO block
    (54) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (55) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression

    DO              shift and go to state 170
    PLUS            shift and go to state 113
    MINUS           shift and go to state 112
    MUL             shift and go to state 110
    DIV             shift and go to state 111


state 129

    (78) for -> FOR assignment TO arithmetic_expression . DO block
    (54) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (55) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression

    DO              shift and go to state 171
    PLUS            shift and go to state 113
    MINUS           shift and go to state 112
    MUL             shift and go to state 110
    DIV             shift and go to state 111


state 130

    (62) function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .

    PLUS            reduce using rule 62 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    MINUS           reduce using rule 62 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    MUL             reduce using rule 62 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    DIV             reduce using rule 62 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    COMPARISON      reduce using rule 62 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    EQUALITY        reduce using rule 62 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    NON_EQUALITY    reduce using rule 62 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    NON_STRICT_COMPARISON reduce using rule 62 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    IN              reduce using rule 62 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    IF              reduce using rule 62 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    WRITE           reduce using rule 62 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    WRITELN         reduce using rule 62 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    READ            reduce using rule 62 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    READLN          reduce using rule 62 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    LENGTH          reduce using rule 62 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    INC             reduce using rule 62 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    WHILE           reduce using rule 62 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    FOR             reduce using rule 62 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    BREAK           reduce using rule 62 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    IDENTIFIER      reduce using rule 62 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    END             reduce using rule 62 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    CLOSE_BRACKET   reduce using rule 62 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    SEMICOLON       reduce using rule 62 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    TO              reduce using rule 62 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    DOWNTO          reduce using rule 62 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    DO              reduce using rule 62 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)
    CLOSE_SQUARE_BRACKET reduce using rule 62 (function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET .)


state 131

    (80) if -> IF OPEN_BRACKET predicate CLOSE_BRACKET . THEN block
    (81) if -> IF OPEN_BRACKET predicate CLOSE_BRACKET . THEN block else

    THEN            shift and go to state 172


state 132

    (58) function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET . SEMICOLON

    SEMICOLON       shift and go to state 173


state 133

    (61) function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET . SEMICOLON

    SEMICOLON       shift and go to state 174


state 134

    (33) assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .

    TO              reduce using rule 33 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
    DOWNTO          reduce using rule 33 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
    IF              reduce using rule 33 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
    WRITE           reduce using rule 33 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
    WRITELN         reduce using rule 33 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
    READ            reduce using rule 33 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
    READLN          reduce using rule 33 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
    LENGTH          reduce using rule 33 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
    INC             reduce using rule 33 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
    WHILE           reduce using rule 33 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
    FOR             reduce using rule 33 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
    BREAK           reduce using rule 33 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 33 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)
    END             reduce using rule 33 (assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON .)


state 135

    (34) assignment -> identifier ASSIGNMENT function SEMICOLON .

    TO              reduce using rule 34 (assignment -> identifier ASSIGNMENT function SEMICOLON .)
    DOWNTO          reduce using rule 34 (assignment -> identifier ASSIGNMENT function SEMICOLON .)
    IF              reduce using rule 34 (assignment -> identifier ASSIGNMENT function SEMICOLON .)
    WRITE           reduce using rule 34 (assignment -> identifier ASSIGNMENT function SEMICOLON .)
    WRITELN         reduce using rule 34 (assignment -> identifier ASSIGNMENT function SEMICOLON .)
    READ            reduce using rule 34 (assignment -> identifier ASSIGNMENT function SEMICOLON .)
    READLN          reduce using rule 34 (assignment -> identifier ASSIGNMENT function SEMICOLON .)
    LENGTH          reduce using rule 34 (assignment -> identifier ASSIGNMENT function SEMICOLON .)
    INC             reduce using rule 34 (assignment -> identifier ASSIGNMENT function SEMICOLON .)
    WHILE           reduce using rule 34 (assignment -> identifier ASSIGNMENT function SEMICOLON .)
    FOR             reduce using rule 34 (assignment -> identifier ASSIGNMENT function SEMICOLON .)
    BREAK           reduce using rule 34 (assignment -> identifier ASSIGNMENT function SEMICOLON .)
    IDENTIFIER      reduce using rule 34 (assignment -> identifier ASSIGNMENT function SEMICOLON .)
    END             reduce using rule 34 (assignment -> identifier ASSIGNMENT function SEMICOLON .)


state 136

    (60) function -> READ OPEN_BRACKET identifier CLOSE_BRACKET . SEMICOLON

    SEMICOLON       shift and go to state 175


state 137

    (59) function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET . SEMICOLON

    SEMICOLON       shift and go to state 176


state 138

    (8) identifiers -> STRING ZAPYATAYA identifiers .

    CLOSE_SQUARE_BRACKET reduce using rule 8 (identifiers -> STRING ZAPYATAYA identifiers .)


state 139

    (7) identifiers -> NUMBER ZAPYATAYA identifiers .

    CLOSE_SQUARE_BRACKET reduce using rule 7 (identifiers -> NUMBER ZAPYATAYA identifiers .)


state 140

    (6) identifiers -> IDENTIFIER ZAPYATAYA identifiers .

    CLOSE_SQUARE_BRACKET reduce using rule 6 (identifiers -> IDENTIFIER ZAPYATAYA identifiers .)


state 141

    (63) function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .

    PLUS            reduce using rule 63 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    MINUS           reduce using rule 63 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    MUL             reduce using rule 63 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    DIV             reduce using rule 63 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    COMPARISON      reduce using rule 63 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    EQUALITY        reduce using rule 63 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    NON_EQUALITY    reduce using rule 63 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    NON_STRICT_COMPARISON reduce using rule 63 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    IN              reduce using rule 63 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    IF              reduce using rule 63 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    WRITE           reduce using rule 63 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    WRITELN         reduce using rule 63 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    READ            reduce using rule 63 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    READLN          reduce using rule 63 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    LENGTH          reduce using rule 63 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    INC             reduce using rule 63 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    WHILE           reduce using rule 63 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    FOR             reduce using rule 63 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    BREAK           reduce using rule 63 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 63 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    END             reduce using rule 63 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 63 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 63 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    TO              reduce using rule 63 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    DOWNTO          reduce using rule 63 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    DO              reduce using rule 63 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    CLOSE_SQUARE_BRACKET reduce using rule 63 (function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)


state 142

    (13) block -> BEGIN body . END SEMICOLON

    END             shift and go to state 177


state 143

    (47) arithmetic_expression -> NUMBER MUL arithmetic_expression .
    (54) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (55) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    COMPARISON      reduce using rule 47 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    EQUALITY        reduce using rule 47 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    NON_EQUALITY    reduce using rule 47 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 47 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    IN              reduce using rule 47 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 47 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    SEMICOLON       reduce using rule 47 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    IF              reduce using rule 47 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    WRITE           reduce using rule 47 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    WRITELN         reduce using rule 47 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    READ            reduce using rule 47 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    READLN          reduce using rule 47 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    LENGTH          reduce using rule 47 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    INC             reduce using rule 47 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    WHILE           reduce using rule 47 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    FOR             reduce using rule 47 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    BREAK           reduce using rule 47 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    IDENTIFIER      reduce using rule 47 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    END             reduce using rule 47 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    TO              reduce using rule 47 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    DOWNTO          reduce using rule 47 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    DO              reduce using rule 47 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    CLOSE_SQUARE_BRACKET reduce using rule 47 (arithmetic_expression -> NUMBER MUL arithmetic_expression .)
    PLUS            shift and go to state 113
    MINUS           shift and go to state 112
    MUL             shift and go to state 110
    DIV             shift and go to state 111

  ! PLUS            [ reduce using rule 47 (arithmetic_expression -> NUMBER MUL arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 47 (arithmetic_expression -> NUMBER MUL arithmetic_expression .) ]
  ! MUL             [ reduce using rule 47 (arithmetic_expression -> NUMBER MUL arithmetic_expression .) ]
  ! DIV             [ reduce using rule 47 (arithmetic_expression -> NUMBER MUL arithmetic_expression .) ]


state 144

    (48) arithmetic_expression -> NUMBER DIV arithmetic_expression .
    (54) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (55) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    COMPARISON      reduce using rule 48 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    EQUALITY        reduce using rule 48 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    NON_EQUALITY    reduce using rule 48 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 48 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    IN              reduce using rule 48 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 48 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    SEMICOLON       reduce using rule 48 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    IF              reduce using rule 48 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    WRITE           reduce using rule 48 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    WRITELN         reduce using rule 48 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    READ            reduce using rule 48 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    READLN          reduce using rule 48 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    LENGTH          reduce using rule 48 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    INC             reduce using rule 48 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    WHILE           reduce using rule 48 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    FOR             reduce using rule 48 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    BREAK           reduce using rule 48 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    IDENTIFIER      reduce using rule 48 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    END             reduce using rule 48 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    TO              reduce using rule 48 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    DOWNTO          reduce using rule 48 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    DO              reduce using rule 48 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    CLOSE_SQUARE_BRACKET reduce using rule 48 (arithmetic_expression -> NUMBER DIV arithmetic_expression .)
    PLUS            shift and go to state 113
    MINUS           shift and go to state 112
    MUL             shift and go to state 110
    DIV             shift and go to state 111

  ! PLUS            [ reduce using rule 48 (arithmetic_expression -> NUMBER DIV arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 48 (arithmetic_expression -> NUMBER DIV arithmetic_expression .) ]
  ! MUL             [ reduce using rule 48 (arithmetic_expression -> NUMBER DIV arithmetic_expression .) ]
  ! DIV             [ reduce using rule 48 (arithmetic_expression -> NUMBER DIV arithmetic_expression .) ]


state 145

    (46) arithmetic_expression -> NUMBER MINUS arithmetic_expression .
    (54) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (55) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    COMPARISON      reduce using rule 46 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    EQUALITY        reduce using rule 46 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    NON_EQUALITY    reduce using rule 46 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 46 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    IN              reduce using rule 46 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 46 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    SEMICOLON       reduce using rule 46 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    IF              reduce using rule 46 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    WRITE           reduce using rule 46 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    WRITELN         reduce using rule 46 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    READ            reduce using rule 46 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    READLN          reduce using rule 46 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    LENGTH          reduce using rule 46 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    INC             reduce using rule 46 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    WHILE           reduce using rule 46 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    FOR             reduce using rule 46 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    BREAK           reduce using rule 46 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    IDENTIFIER      reduce using rule 46 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    END             reduce using rule 46 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    TO              reduce using rule 46 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    DOWNTO          reduce using rule 46 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    DO              reduce using rule 46 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    CLOSE_SQUARE_BRACKET reduce using rule 46 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .)
    PLUS            shift and go to state 113
    MINUS           shift and go to state 112
    MUL             shift and go to state 110
    DIV             shift and go to state 111

  ! PLUS            [ reduce using rule 46 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 46 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .) ]
  ! MUL             [ reduce using rule 46 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .) ]
  ! DIV             [ reduce using rule 46 (arithmetic_expression -> NUMBER MINUS arithmetic_expression .) ]


state 146

    (45) arithmetic_expression -> NUMBER PLUS arithmetic_expression .
    (54) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (55) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    COMPARISON      reduce using rule 45 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    EQUALITY        reduce using rule 45 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    NON_EQUALITY    reduce using rule 45 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 45 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    IN              reduce using rule 45 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 45 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    SEMICOLON       reduce using rule 45 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    IF              reduce using rule 45 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    WRITE           reduce using rule 45 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    WRITELN         reduce using rule 45 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    READ            reduce using rule 45 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    READLN          reduce using rule 45 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    LENGTH          reduce using rule 45 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    INC             reduce using rule 45 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    WHILE           reduce using rule 45 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    FOR             reduce using rule 45 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    BREAK           reduce using rule 45 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    IDENTIFIER      reduce using rule 45 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    END             reduce using rule 45 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    TO              reduce using rule 45 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    DOWNTO          reduce using rule 45 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    DO              reduce using rule 45 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    CLOSE_SQUARE_BRACKET reduce using rule 45 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .)
    PLUS            shift and go to state 113
    MINUS           shift and go to state 112
    MUL             shift and go to state 110
    DIV             shift and go to state 111

  ! PLUS            [ reduce using rule 45 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 45 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .) ]
  ! MUL             [ reduce using rule 45 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .) ]
  ! DIV             [ reduce using rule 45 (arithmetic_expression -> NUMBER PLUS arithmetic_expression .) ]


state 147

    (73) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate . CLOSE_BRACKET CLOSE_BRACKET AND some_predicates
    (74) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate . CLOSE_BRACKET CLOSE_BRACKET OR some_predicates
    (75) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate . CLOSE_BRACKET CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 178


state 148

    (71) some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET OR . some_predicates
    (70) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET AND some_predicates
    (71) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET OR some_predicates
    (72) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET
    (73) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET AND some_predicates
    (74) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET OR some_predicates
    (75) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 179

    some_predicates                shift and go to state 180

state 149

    (70) some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET AND . some_predicates
    (70) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET AND some_predicates
    (71) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET OR some_predicates
    (72) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET
    (73) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET AND some_predicates
    (74) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET OR some_predicates
    (75) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 179

    some_predicates                shift and go to state 181

state 150

    (76) while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO . block
    (13) block -> . BEGIN body END SEMICOLON

    BEGIN           shift and go to state 102

    block                          shift and go to state 182

state 151

    (56) arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .
    (54) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (55) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    COMPARISON      reduce using rule 56 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    EQUALITY        reduce using rule 56 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    NON_EQUALITY    reduce using rule 56 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 56 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    IN              reduce using rule 56 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 56 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    SEMICOLON       reduce using rule 56 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    IF              reduce using rule 56 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    WRITE           reduce using rule 56 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    WRITELN         reduce using rule 56 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    READ            reduce using rule 56 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    READLN          reduce using rule 56 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    LENGTH          reduce using rule 56 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    INC             reduce using rule 56 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    WHILE           reduce using rule 56 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    FOR             reduce using rule 56 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    BREAK           reduce using rule 56 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    IDENTIFIER      reduce using rule 56 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    END             reduce using rule 56 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    TO              reduce using rule 56 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    DOWNTO          reduce using rule 56 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    DO              reduce using rule 56 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    CLOSE_SQUARE_BRACKET reduce using rule 56 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .)
    PLUS            shift and go to state 113
    MINUS           shift and go to state 112
    MUL             shift and go to state 110
    DIV             shift and go to state 111

  ! PLUS            [ reduce using rule 56 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 56 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .) ]
  ! MUL             [ reduce using rule 56 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .) ]
  ! DIV             [ reduce using rule 56 (arithmetic_expression -> arithmetic_expression MUL arithmetic_expression .) ]


state 152

    (57) arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .
    (54) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (55) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    COMPARISON      reduce using rule 57 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    EQUALITY        reduce using rule 57 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    NON_EQUALITY    reduce using rule 57 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 57 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    IN              reduce using rule 57 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 57 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    SEMICOLON       reduce using rule 57 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    IF              reduce using rule 57 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    WRITE           reduce using rule 57 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    WRITELN         reduce using rule 57 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    READ            reduce using rule 57 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    READLN          reduce using rule 57 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    LENGTH          reduce using rule 57 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    INC             reduce using rule 57 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    WHILE           reduce using rule 57 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    FOR             reduce using rule 57 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    BREAK           reduce using rule 57 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    IDENTIFIER      reduce using rule 57 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    END             reduce using rule 57 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    TO              reduce using rule 57 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    DOWNTO          reduce using rule 57 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    DO              reduce using rule 57 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    CLOSE_SQUARE_BRACKET reduce using rule 57 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .)
    PLUS            shift and go to state 113
    MINUS           shift and go to state 112
    MUL             shift and go to state 110
    DIV             shift and go to state 111

  ! PLUS            [ reduce using rule 57 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 57 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .) ]
  ! MUL             [ reduce using rule 57 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .) ]
  ! DIV             [ reduce using rule 57 (arithmetic_expression -> arithmetic_expression DIV arithmetic_expression .) ]


state 153

    (55) arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .
    (54) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (55) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    COMPARISON      reduce using rule 55 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    EQUALITY        reduce using rule 55 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    NON_EQUALITY    reduce using rule 55 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 55 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    IN              reduce using rule 55 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 55 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    SEMICOLON       reduce using rule 55 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    IF              reduce using rule 55 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    WRITE           reduce using rule 55 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    WRITELN         reduce using rule 55 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    READ            reduce using rule 55 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    READLN          reduce using rule 55 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    LENGTH          reduce using rule 55 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    INC             reduce using rule 55 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    WHILE           reduce using rule 55 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    FOR             reduce using rule 55 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    BREAK           reduce using rule 55 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    IDENTIFIER      reduce using rule 55 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    END             reduce using rule 55 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    TO              reduce using rule 55 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    DOWNTO          reduce using rule 55 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    DO              reduce using rule 55 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    CLOSE_SQUARE_BRACKET reduce using rule 55 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    PLUS            shift and go to state 113
    MINUS           shift and go to state 112
    MUL             shift and go to state 110
    DIV             shift and go to state 111

  ! PLUS            [ reduce using rule 55 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 55 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .) ]
  ! MUL             [ reduce using rule 55 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .) ]
  ! DIV             [ reduce using rule 55 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .) ]


state 154

    (54) arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .
    (54) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (55) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    COMPARISON      reduce using rule 54 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    EQUALITY        reduce using rule 54 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    NON_EQUALITY    reduce using rule 54 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 54 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    IN              reduce using rule 54 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 54 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    SEMICOLON       reduce using rule 54 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    IF              reduce using rule 54 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    WRITE           reduce using rule 54 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    WRITELN         reduce using rule 54 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    READ            reduce using rule 54 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    READLN          reduce using rule 54 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    LENGTH          reduce using rule 54 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    INC             reduce using rule 54 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    WHILE           reduce using rule 54 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    FOR             reduce using rule 54 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    BREAK           reduce using rule 54 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    IDENTIFIER      reduce using rule 54 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    END             reduce using rule 54 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    TO              reduce using rule 54 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    DOWNTO          reduce using rule 54 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    DO              reduce using rule 54 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    CLOSE_SQUARE_BRACKET reduce using rule 54 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    PLUS            shift and go to state 113
    MINUS           shift and go to state 112
    MUL             shift and go to state 110
    DIV             shift and go to state 111

  ! PLUS            [ reduce using rule 54 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 54 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .) ]
  ! MUL             [ reduce using rule 54 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .) ]
  ! DIV             [ reduce using rule 54 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .) ]


state 155

    (68) predicate -> arithmetic_expression IN identifier .

    CLOSE_BRACKET   reduce using rule 68 (predicate -> arithmetic_expression IN identifier .)


state 156

    (69) predicate -> arithmetic_expression IN matrix .

    CLOSE_BRACKET   reduce using rule 69 (predicate -> arithmetic_expression IN matrix .)


state 157

    (64) predicate -> arithmetic_expression COMPARISON arithmetic_expression .
    (54) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (55) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression

    CLOSE_BRACKET   reduce using rule 64 (predicate -> arithmetic_expression COMPARISON arithmetic_expression .)
    PLUS            shift and go to state 113
    MINUS           shift and go to state 112
    MUL             shift and go to state 110
    DIV             shift and go to state 111


state 158

    (66) predicate -> arithmetic_expression NON_EQUALITY arithmetic_expression .
    (54) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (55) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression

    CLOSE_BRACKET   reduce using rule 66 (predicate -> arithmetic_expression NON_EQUALITY arithmetic_expression .)
    PLUS            shift and go to state 113
    MINUS           shift and go to state 112
    MUL             shift and go to state 110
    DIV             shift and go to state 111


state 159

    (67) predicate -> arithmetic_expression NON_STRICT_COMPARISON arithmetic_expression .
    (54) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (55) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression

    CLOSE_BRACKET   reduce using rule 67 (predicate -> arithmetic_expression NON_STRICT_COMPARISON arithmetic_expression .)
    PLUS            shift and go to state 113
    MINUS           shift and go to state 112
    MUL             shift and go to state 110
    DIV             shift and go to state 111


state 160

    (65) predicate -> arithmetic_expression EQUALITY arithmetic_expression .
    (54) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (55) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression

    CLOSE_BRACKET   reduce using rule 65 (predicate -> arithmetic_expression EQUALITY arithmetic_expression .)
    PLUS            shift and go to state 113
    MINUS           shift and go to state 112
    MUL             shift and go to state 110
    DIV             shift and go to state 111


state 161

    (51) arithmetic_expression -> function MUL arithmetic_expression .
    (54) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (55) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    COMPARISON      reduce using rule 51 (arithmetic_expression -> function MUL arithmetic_expression .)
    EQUALITY        reduce using rule 51 (arithmetic_expression -> function MUL arithmetic_expression .)
    NON_EQUALITY    reduce using rule 51 (arithmetic_expression -> function MUL arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 51 (arithmetic_expression -> function MUL arithmetic_expression .)
    IN              reduce using rule 51 (arithmetic_expression -> function MUL arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 51 (arithmetic_expression -> function MUL arithmetic_expression .)
    SEMICOLON       reduce using rule 51 (arithmetic_expression -> function MUL arithmetic_expression .)
    IF              reduce using rule 51 (arithmetic_expression -> function MUL arithmetic_expression .)
    WRITE           reduce using rule 51 (arithmetic_expression -> function MUL arithmetic_expression .)
    WRITELN         reduce using rule 51 (arithmetic_expression -> function MUL arithmetic_expression .)
    READ            reduce using rule 51 (arithmetic_expression -> function MUL arithmetic_expression .)
    READLN          reduce using rule 51 (arithmetic_expression -> function MUL arithmetic_expression .)
    LENGTH          reduce using rule 51 (arithmetic_expression -> function MUL arithmetic_expression .)
    INC             reduce using rule 51 (arithmetic_expression -> function MUL arithmetic_expression .)
    WHILE           reduce using rule 51 (arithmetic_expression -> function MUL arithmetic_expression .)
    FOR             reduce using rule 51 (arithmetic_expression -> function MUL arithmetic_expression .)
    BREAK           reduce using rule 51 (arithmetic_expression -> function MUL arithmetic_expression .)
    IDENTIFIER      reduce using rule 51 (arithmetic_expression -> function MUL arithmetic_expression .)
    END             reduce using rule 51 (arithmetic_expression -> function MUL arithmetic_expression .)
    TO              reduce using rule 51 (arithmetic_expression -> function MUL arithmetic_expression .)
    DOWNTO          reduce using rule 51 (arithmetic_expression -> function MUL arithmetic_expression .)
    DO              reduce using rule 51 (arithmetic_expression -> function MUL arithmetic_expression .)
    CLOSE_SQUARE_BRACKET reduce using rule 51 (arithmetic_expression -> function MUL arithmetic_expression .)
    PLUS            shift and go to state 113
    MINUS           shift and go to state 112
    MUL             shift and go to state 110
    DIV             shift and go to state 111

  ! PLUS            [ reduce using rule 51 (arithmetic_expression -> function MUL arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 51 (arithmetic_expression -> function MUL arithmetic_expression .) ]
  ! MUL             [ reduce using rule 51 (arithmetic_expression -> function MUL arithmetic_expression .) ]
  ! DIV             [ reduce using rule 51 (arithmetic_expression -> function MUL arithmetic_expression .) ]


state 162

    (52) arithmetic_expression -> function DIV arithmetic_expression .
    (54) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (55) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    COMPARISON      reduce using rule 52 (arithmetic_expression -> function DIV arithmetic_expression .)
    EQUALITY        reduce using rule 52 (arithmetic_expression -> function DIV arithmetic_expression .)
    NON_EQUALITY    reduce using rule 52 (arithmetic_expression -> function DIV arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 52 (arithmetic_expression -> function DIV arithmetic_expression .)
    IN              reduce using rule 52 (arithmetic_expression -> function DIV arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 52 (arithmetic_expression -> function DIV arithmetic_expression .)
    SEMICOLON       reduce using rule 52 (arithmetic_expression -> function DIV arithmetic_expression .)
    IF              reduce using rule 52 (arithmetic_expression -> function DIV arithmetic_expression .)
    WRITE           reduce using rule 52 (arithmetic_expression -> function DIV arithmetic_expression .)
    WRITELN         reduce using rule 52 (arithmetic_expression -> function DIV arithmetic_expression .)
    READ            reduce using rule 52 (arithmetic_expression -> function DIV arithmetic_expression .)
    READLN          reduce using rule 52 (arithmetic_expression -> function DIV arithmetic_expression .)
    LENGTH          reduce using rule 52 (arithmetic_expression -> function DIV arithmetic_expression .)
    INC             reduce using rule 52 (arithmetic_expression -> function DIV arithmetic_expression .)
    WHILE           reduce using rule 52 (arithmetic_expression -> function DIV arithmetic_expression .)
    FOR             reduce using rule 52 (arithmetic_expression -> function DIV arithmetic_expression .)
    BREAK           reduce using rule 52 (arithmetic_expression -> function DIV arithmetic_expression .)
    IDENTIFIER      reduce using rule 52 (arithmetic_expression -> function DIV arithmetic_expression .)
    END             reduce using rule 52 (arithmetic_expression -> function DIV arithmetic_expression .)
    TO              reduce using rule 52 (arithmetic_expression -> function DIV arithmetic_expression .)
    DOWNTO          reduce using rule 52 (arithmetic_expression -> function DIV arithmetic_expression .)
    DO              reduce using rule 52 (arithmetic_expression -> function DIV arithmetic_expression .)
    CLOSE_SQUARE_BRACKET reduce using rule 52 (arithmetic_expression -> function DIV arithmetic_expression .)
    PLUS            shift and go to state 113
    MINUS           shift and go to state 112
    MUL             shift and go to state 110
    DIV             shift and go to state 111

  ! PLUS            [ reduce using rule 52 (arithmetic_expression -> function DIV arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 52 (arithmetic_expression -> function DIV arithmetic_expression .) ]
  ! MUL             [ reduce using rule 52 (arithmetic_expression -> function DIV arithmetic_expression .) ]
  ! DIV             [ reduce using rule 52 (arithmetic_expression -> function DIV arithmetic_expression .) ]


state 163

    (50) arithmetic_expression -> function MINUS arithmetic_expression .
    (54) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (55) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    COMPARISON      reduce using rule 50 (arithmetic_expression -> function MINUS arithmetic_expression .)
    EQUALITY        reduce using rule 50 (arithmetic_expression -> function MINUS arithmetic_expression .)
    NON_EQUALITY    reduce using rule 50 (arithmetic_expression -> function MINUS arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 50 (arithmetic_expression -> function MINUS arithmetic_expression .)
    IN              reduce using rule 50 (arithmetic_expression -> function MINUS arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 50 (arithmetic_expression -> function MINUS arithmetic_expression .)
    SEMICOLON       reduce using rule 50 (arithmetic_expression -> function MINUS arithmetic_expression .)
    IF              reduce using rule 50 (arithmetic_expression -> function MINUS arithmetic_expression .)
    WRITE           reduce using rule 50 (arithmetic_expression -> function MINUS arithmetic_expression .)
    WRITELN         reduce using rule 50 (arithmetic_expression -> function MINUS arithmetic_expression .)
    READ            reduce using rule 50 (arithmetic_expression -> function MINUS arithmetic_expression .)
    READLN          reduce using rule 50 (arithmetic_expression -> function MINUS arithmetic_expression .)
    LENGTH          reduce using rule 50 (arithmetic_expression -> function MINUS arithmetic_expression .)
    INC             reduce using rule 50 (arithmetic_expression -> function MINUS arithmetic_expression .)
    WHILE           reduce using rule 50 (arithmetic_expression -> function MINUS arithmetic_expression .)
    FOR             reduce using rule 50 (arithmetic_expression -> function MINUS arithmetic_expression .)
    BREAK           reduce using rule 50 (arithmetic_expression -> function MINUS arithmetic_expression .)
    IDENTIFIER      reduce using rule 50 (arithmetic_expression -> function MINUS arithmetic_expression .)
    END             reduce using rule 50 (arithmetic_expression -> function MINUS arithmetic_expression .)
    TO              reduce using rule 50 (arithmetic_expression -> function MINUS arithmetic_expression .)
    DOWNTO          reduce using rule 50 (arithmetic_expression -> function MINUS arithmetic_expression .)
    DO              reduce using rule 50 (arithmetic_expression -> function MINUS arithmetic_expression .)
    CLOSE_SQUARE_BRACKET reduce using rule 50 (arithmetic_expression -> function MINUS arithmetic_expression .)
    PLUS            shift and go to state 113
    MINUS           shift and go to state 112
    MUL             shift and go to state 110
    DIV             shift and go to state 111

  ! PLUS            [ reduce using rule 50 (arithmetic_expression -> function MINUS arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 50 (arithmetic_expression -> function MINUS arithmetic_expression .) ]
  ! MUL             [ reduce using rule 50 (arithmetic_expression -> function MINUS arithmetic_expression .) ]
  ! DIV             [ reduce using rule 50 (arithmetic_expression -> function MINUS arithmetic_expression .) ]


state 164

    (49) arithmetic_expression -> function PLUS arithmetic_expression .
    (54) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (55) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    COMPARISON      reduce using rule 49 (arithmetic_expression -> function PLUS arithmetic_expression .)
    EQUALITY        reduce using rule 49 (arithmetic_expression -> function PLUS arithmetic_expression .)
    NON_EQUALITY    reduce using rule 49 (arithmetic_expression -> function PLUS arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 49 (arithmetic_expression -> function PLUS arithmetic_expression .)
    IN              reduce using rule 49 (arithmetic_expression -> function PLUS arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 49 (arithmetic_expression -> function PLUS arithmetic_expression .)
    SEMICOLON       reduce using rule 49 (arithmetic_expression -> function PLUS arithmetic_expression .)
    IF              reduce using rule 49 (arithmetic_expression -> function PLUS arithmetic_expression .)
    WRITE           reduce using rule 49 (arithmetic_expression -> function PLUS arithmetic_expression .)
    WRITELN         reduce using rule 49 (arithmetic_expression -> function PLUS arithmetic_expression .)
    READ            reduce using rule 49 (arithmetic_expression -> function PLUS arithmetic_expression .)
    READLN          reduce using rule 49 (arithmetic_expression -> function PLUS arithmetic_expression .)
    LENGTH          reduce using rule 49 (arithmetic_expression -> function PLUS arithmetic_expression .)
    INC             reduce using rule 49 (arithmetic_expression -> function PLUS arithmetic_expression .)
    WHILE           reduce using rule 49 (arithmetic_expression -> function PLUS arithmetic_expression .)
    FOR             reduce using rule 49 (arithmetic_expression -> function PLUS arithmetic_expression .)
    BREAK           reduce using rule 49 (arithmetic_expression -> function PLUS arithmetic_expression .)
    IDENTIFIER      reduce using rule 49 (arithmetic_expression -> function PLUS arithmetic_expression .)
    END             reduce using rule 49 (arithmetic_expression -> function PLUS arithmetic_expression .)
    TO              reduce using rule 49 (arithmetic_expression -> function PLUS arithmetic_expression .)
    DOWNTO          reduce using rule 49 (arithmetic_expression -> function PLUS arithmetic_expression .)
    DO              reduce using rule 49 (arithmetic_expression -> function PLUS arithmetic_expression .)
    CLOSE_SQUARE_BRACKET reduce using rule 49 (arithmetic_expression -> function PLUS arithmetic_expression .)
    PLUS            shift and go to state 113
    MINUS           shift and go to state 112
    MUL             shift and go to state 110
    DIV             shift and go to state 111

  ! PLUS            [ reduce using rule 49 (arithmetic_expression -> function PLUS arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 49 (arithmetic_expression -> function PLUS arithmetic_expression .) ]
  ! MUL             [ reduce using rule 49 (arithmetic_expression -> function PLUS arithmetic_expression .) ]
  ! DIV             [ reduce using rule 49 (arithmetic_expression -> function PLUS arithmetic_expression .) ]


state 165

    (43) arithmetic_expression -> identifier MUL arithmetic_expression .
    (54) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (55) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    COMPARISON      reduce using rule 43 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    EQUALITY        reduce using rule 43 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    NON_EQUALITY    reduce using rule 43 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 43 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    IN              reduce using rule 43 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 43 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    SEMICOLON       reduce using rule 43 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    IF              reduce using rule 43 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    WRITE           reduce using rule 43 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    WRITELN         reduce using rule 43 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    READ            reduce using rule 43 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    READLN          reduce using rule 43 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    LENGTH          reduce using rule 43 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    INC             reduce using rule 43 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    WHILE           reduce using rule 43 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    FOR             reduce using rule 43 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    BREAK           reduce using rule 43 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    IDENTIFIER      reduce using rule 43 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    END             reduce using rule 43 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    TO              reduce using rule 43 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    DOWNTO          reduce using rule 43 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    DO              reduce using rule 43 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    CLOSE_SQUARE_BRACKET reduce using rule 43 (arithmetic_expression -> identifier MUL arithmetic_expression .)
    PLUS            shift and go to state 113
    MINUS           shift and go to state 112
    MUL             shift and go to state 110
    DIV             shift and go to state 111

  ! PLUS            [ reduce using rule 43 (arithmetic_expression -> identifier MUL arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 43 (arithmetic_expression -> identifier MUL arithmetic_expression .) ]
  ! MUL             [ reduce using rule 43 (arithmetic_expression -> identifier MUL arithmetic_expression .) ]
  ! DIV             [ reduce using rule 43 (arithmetic_expression -> identifier MUL arithmetic_expression .) ]


state 166

    (44) arithmetic_expression -> identifier DIV arithmetic_expression .
    (54) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (55) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    COMPARISON      reduce using rule 44 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    EQUALITY        reduce using rule 44 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    NON_EQUALITY    reduce using rule 44 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 44 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    IN              reduce using rule 44 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 44 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    SEMICOLON       reduce using rule 44 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    IF              reduce using rule 44 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    WRITE           reduce using rule 44 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    WRITELN         reduce using rule 44 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    READ            reduce using rule 44 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    READLN          reduce using rule 44 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    LENGTH          reduce using rule 44 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    INC             reduce using rule 44 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    WHILE           reduce using rule 44 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    FOR             reduce using rule 44 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    BREAK           reduce using rule 44 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    IDENTIFIER      reduce using rule 44 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    END             reduce using rule 44 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    TO              reduce using rule 44 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    DOWNTO          reduce using rule 44 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    DO              reduce using rule 44 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    CLOSE_SQUARE_BRACKET reduce using rule 44 (arithmetic_expression -> identifier DIV arithmetic_expression .)
    PLUS            shift and go to state 113
    MINUS           shift and go to state 112
    MUL             shift and go to state 110
    DIV             shift and go to state 111

  ! PLUS            [ reduce using rule 44 (arithmetic_expression -> identifier DIV arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 44 (arithmetic_expression -> identifier DIV arithmetic_expression .) ]
  ! MUL             [ reduce using rule 44 (arithmetic_expression -> identifier DIV arithmetic_expression .) ]
  ! DIV             [ reduce using rule 44 (arithmetic_expression -> identifier DIV arithmetic_expression .) ]


state 167

    (42) arithmetic_expression -> identifier MINUS arithmetic_expression .
    (54) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (55) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    COMPARISON      reduce using rule 42 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    EQUALITY        reduce using rule 42 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    NON_EQUALITY    reduce using rule 42 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 42 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    IN              reduce using rule 42 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 42 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    SEMICOLON       reduce using rule 42 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    IF              reduce using rule 42 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    WRITE           reduce using rule 42 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    WRITELN         reduce using rule 42 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    READ            reduce using rule 42 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    READLN          reduce using rule 42 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    LENGTH          reduce using rule 42 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    INC             reduce using rule 42 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    WHILE           reduce using rule 42 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    FOR             reduce using rule 42 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    BREAK           reduce using rule 42 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    IDENTIFIER      reduce using rule 42 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    END             reduce using rule 42 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    TO              reduce using rule 42 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    DOWNTO          reduce using rule 42 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    DO              reduce using rule 42 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    CLOSE_SQUARE_BRACKET reduce using rule 42 (arithmetic_expression -> identifier MINUS arithmetic_expression .)
    PLUS            shift and go to state 113
    MINUS           shift and go to state 112
    MUL             shift and go to state 110
    DIV             shift and go to state 111

  ! PLUS            [ reduce using rule 42 (arithmetic_expression -> identifier MINUS arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 42 (arithmetic_expression -> identifier MINUS arithmetic_expression .) ]
  ! MUL             [ reduce using rule 42 (arithmetic_expression -> identifier MINUS arithmetic_expression .) ]
  ! DIV             [ reduce using rule 42 (arithmetic_expression -> identifier MINUS arithmetic_expression .) ]


state 168

    (41) arithmetic_expression -> identifier PLUS arithmetic_expression .
    (54) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (55) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    COMPARISON      reduce using rule 41 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    EQUALITY        reduce using rule 41 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    NON_EQUALITY    reduce using rule 41 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    NON_STRICT_COMPARISON reduce using rule 41 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    IN              reduce using rule 41 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    CLOSE_BRACKET   reduce using rule 41 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    SEMICOLON       reduce using rule 41 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    IF              reduce using rule 41 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    WRITE           reduce using rule 41 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    WRITELN         reduce using rule 41 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    READ            reduce using rule 41 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    READLN          reduce using rule 41 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    LENGTH          reduce using rule 41 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    INC             reduce using rule 41 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    WHILE           reduce using rule 41 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    FOR             reduce using rule 41 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    BREAK           reduce using rule 41 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    IDENTIFIER      reduce using rule 41 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    END             reduce using rule 41 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    TO              reduce using rule 41 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    DOWNTO          reduce using rule 41 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    DO              reduce using rule 41 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    CLOSE_SQUARE_BRACKET reduce using rule 41 (arithmetic_expression -> identifier PLUS arithmetic_expression .)
    PLUS            shift and go to state 113
    MINUS           shift and go to state 112
    MUL             shift and go to state 110
    DIV             shift and go to state 111

  ! PLUS            [ reduce using rule 41 (arithmetic_expression -> identifier PLUS arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 41 (arithmetic_expression -> identifier PLUS arithmetic_expression .) ]
  ! MUL             [ reduce using rule 41 (arithmetic_expression -> identifier PLUS arithmetic_expression .) ]
  ! DIV             [ reduce using rule 41 (arithmetic_expression -> identifier PLUS arithmetic_expression .) ]


state 169

    (53) arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression . CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (55) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (56) arithmetic_expression -> arithmetic_expression . MUL arithmetic_expression
    (57) arithmetic_expression -> arithmetic_expression . DIV arithmetic_expression

    CLOSE_SQUARE_BRACKET shift and go to state 183
    PLUS            shift and go to state 113
    MINUS           shift and go to state 112
    MUL             shift and go to state 110
    DIV             shift and go to state 111


state 170

    (79) for -> FOR assignment DOWNTO arithmetic_expression DO . block
    (13) block -> . BEGIN body END SEMICOLON

    BEGIN           shift and go to state 102

    block                          shift and go to state 184

state 171

    (78) for -> FOR assignment TO arithmetic_expression DO . block
    (13) block -> . BEGIN body END SEMICOLON

    BEGIN           shift and go to state 102

    block                          shift and go to state 185

state 172

    (80) if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN . block
    (81) if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN . block else
    (13) block -> . BEGIN body END SEMICOLON

    BEGIN           shift and go to state 102

    block                          shift and go to state 186

state 173

    (58) function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .

    PLUS            reduce using rule 58 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    MINUS           reduce using rule 58 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    MUL             reduce using rule 58 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    DIV             reduce using rule 58 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    COMPARISON      reduce using rule 58 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    EQUALITY        reduce using rule 58 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    NON_EQUALITY    reduce using rule 58 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    NON_STRICT_COMPARISON reduce using rule 58 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    IN              reduce using rule 58 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    IF              reduce using rule 58 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    WRITE           reduce using rule 58 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    WRITELN         reduce using rule 58 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    READ            reduce using rule 58 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    READLN          reduce using rule 58 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    LENGTH          reduce using rule 58 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    INC             reduce using rule 58 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    WHILE           reduce using rule 58 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    FOR             reduce using rule 58 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    BREAK           reduce using rule 58 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 58 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    END             reduce using rule 58 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 58 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 58 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    TO              reduce using rule 58 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    DOWNTO          reduce using rule 58 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    DO              reduce using rule 58 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    CLOSE_SQUARE_BRACKET reduce using rule 58 (function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)


state 174

    (61) function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .

    PLUS            reduce using rule 61 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    MINUS           reduce using rule 61 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    MUL             reduce using rule 61 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    DIV             reduce using rule 61 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    COMPARISON      reduce using rule 61 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    EQUALITY        reduce using rule 61 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    NON_EQUALITY    reduce using rule 61 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    NON_STRICT_COMPARISON reduce using rule 61 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    IN              reduce using rule 61 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    IF              reduce using rule 61 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    WRITE           reduce using rule 61 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    WRITELN         reduce using rule 61 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    READ            reduce using rule 61 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    READLN          reduce using rule 61 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    LENGTH          reduce using rule 61 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    INC             reduce using rule 61 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    WHILE           reduce using rule 61 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    FOR             reduce using rule 61 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    BREAK           reduce using rule 61 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 61 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    END             reduce using rule 61 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 61 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 61 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    TO              reduce using rule 61 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    DOWNTO          reduce using rule 61 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    DO              reduce using rule 61 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    CLOSE_SQUARE_BRACKET reduce using rule 61 (function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)


state 175

    (60) function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .

    PLUS            reduce using rule 60 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    MINUS           reduce using rule 60 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    MUL             reduce using rule 60 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    DIV             reduce using rule 60 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    COMPARISON      reduce using rule 60 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    EQUALITY        reduce using rule 60 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    NON_EQUALITY    reduce using rule 60 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    NON_STRICT_COMPARISON reduce using rule 60 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    IN              reduce using rule 60 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    IF              reduce using rule 60 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    WRITE           reduce using rule 60 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    WRITELN         reduce using rule 60 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    READ            reduce using rule 60 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    READLN          reduce using rule 60 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    LENGTH          reduce using rule 60 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    INC             reduce using rule 60 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    WHILE           reduce using rule 60 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    FOR             reduce using rule 60 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    BREAK           reduce using rule 60 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 60 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    END             reduce using rule 60 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 60 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 60 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    TO              reduce using rule 60 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    DOWNTO          reduce using rule 60 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    DO              reduce using rule 60 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)
    CLOSE_SQUARE_BRACKET reduce using rule 60 (function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON .)


state 176

    (59) function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .

    PLUS            reduce using rule 59 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    MINUS           reduce using rule 59 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    MUL             reduce using rule 59 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    DIV             reduce using rule 59 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    COMPARISON      reduce using rule 59 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    EQUALITY        reduce using rule 59 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    NON_EQUALITY    reduce using rule 59 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    NON_STRICT_COMPARISON reduce using rule 59 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    IN              reduce using rule 59 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    IF              reduce using rule 59 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    WRITE           reduce using rule 59 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    WRITELN         reduce using rule 59 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    READ            reduce using rule 59 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    READLN          reduce using rule 59 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    LENGTH          reduce using rule 59 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    INC             reduce using rule 59 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    WHILE           reduce using rule 59 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    FOR             reduce using rule 59 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    BREAK           reduce using rule 59 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 59 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    END             reduce using rule 59 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    CLOSE_BRACKET   reduce using rule 59 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 59 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    TO              reduce using rule 59 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    DOWNTO          reduce using rule 59 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    DO              reduce using rule 59 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)
    CLOSE_SQUARE_BRACKET reduce using rule 59 (function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON .)


state 177

    (13) block -> BEGIN body END . SEMICOLON

    SEMICOLON       shift and go to state 187


state 178

    (73) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET . CLOSE_BRACKET AND some_predicates
    (74) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET . CLOSE_BRACKET OR some_predicates
    (75) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 188


state 179

    (70) some_predicates -> OPEN_BRACKET . predicate CLOSE_BRACKET AND some_predicates
    (71) some_predicates -> OPEN_BRACKET . predicate CLOSE_BRACKET OR some_predicates
    (72) some_predicates -> OPEN_BRACKET . predicate CLOSE_BRACKET
    (73) some_predicates -> OPEN_BRACKET . NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET AND some_predicates
    (74) some_predicates -> OPEN_BRACKET . NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET OR some_predicates
    (75) some_predicates -> OPEN_BRACKET . NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET
    (64) predicate -> . arithmetic_expression COMPARISON arithmetic_expression
    (65) predicate -> . arithmetic_expression EQUALITY arithmetic_expression
    (66) predicate -> . arithmetic_expression NON_EQUALITY arithmetic_expression
    (67) predicate -> . arithmetic_expression NON_STRICT_COMPARISON arithmetic_expression
    (68) predicate -> . arithmetic_expression IN identifier
    (69) predicate -> . arithmetic_expression IN matrix
    (37) arithmetic_expression -> . NUMBER
    (38) arithmetic_expression -> . identifier
    (39) arithmetic_expression -> . STRING
    (40) arithmetic_expression -> . function
    (41) arithmetic_expression -> . identifier PLUS arithmetic_expression
    (42) arithmetic_expression -> . identifier MINUS arithmetic_expression
    (43) arithmetic_expression -> . identifier MUL arithmetic_expression
    (44) arithmetic_expression -> . identifier DIV arithmetic_expression
    (45) arithmetic_expression -> . NUMBER PLUS arithmetic_expression
    (46) arithmetic_expression -> . NUMBER MINUS arithmetic_expression
    (47) arithmetic_expression -> . NUMBER MUL arithmetic_expression
    (48) arithmetic_expression -> . NUMBER DIV arithmetic_expression
    (49) arithmetic_expression -> . function PLUS arithmetic_expression
    (50) arithmetic_expression -> . function MINUS arithmetic_expression
    (51) arithmetic_expression -> . function MUL arithmetic_expression
    (52) arithmetic_expression -> . function DIV arithmetic_expression
    (53) arithmetic_expression -> . identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET
    (54) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (55) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (56) arithmetic_expression -> . arithmetic_expression MUL arithmetic_expression
    (57) arithmetic_expression -> . arithmetic_expression DIV arithmetic_expression
    (15) identifier -> . IDENTIFIER
    (58) function -> . WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (59) function -> . WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON
    (60) function -> . READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (61) function -> . READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON
    (62) function -> . LENGTH OPEN_BRACKET identifier CLOSE_BRACKET
    (63) function -> . INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON

    NOT             shift and go to state 77
    NUMBER          shift and go to state 76
    STRING          shift and go to state 78
    IDENTIFIER      shift and go to state 29
    WRITE           shift and go to state 30
    WRITELN         shift and go to state 37
    READ            shift and go to state 36
    READLN          shift and go to state 31
    LENGTH          shift and go to state 25
    INC             shift and go to state 18

    arithmetic_expression          shift and go to state 80
    predicate                      shift and go to state 189
    identifier                     shift and go to state 82
    function                       shift and go to state 81

state 180

    (71) some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET OR some_predicates .

    DO              reduce using rule 71 (some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET OR some_predicates .)


state 181

    (70) some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET AND some_predicates .

    DO              reduce using rule 70 (some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET AND some_predicates .)


state 182

    (76) while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block .

    IF              reduce using rule 76 (while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block .)
    WRITE           reduce using rule 76 (while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block .)
    WRITELN         reduce using rule 76 (while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block .)
    READ            reduce using rule 76 (while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block .)
    READLN          reduce using rule 76 (while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block .)
    LENGTH          reduce using rule 76 (while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block .)
    INC             reduce using rule 76 (while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block .)
    WHILE           reduce using rule 76 (while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block .)
    FOR             reduce using rule 76 (while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block .)
    BREAK           reduce using rule 76 (while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block .)
    IDENTIFIER      reduce using rule 76 (while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block .)
    END             reduce using rule 76 (while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block .)


state 183

    (53) arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .

    PLUS            reduce using rule 53 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    MINUS           reduce using rule 53 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    MUL             reduce using rule 53 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    DIV             reduce using rule 53 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    COMPARISON      reduce using rule 53 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    EQUALITY        reduce using rule 53 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    NON_EQUALITY    reduce using rule 53 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    NON_STRICT_COMPARISON reduce using rule 53 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    IN              reduce using rule 53 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    CLOSE_BRACKET   reduce using rule 53 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    SEMICOLON       reduce using rule 53 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    IF              reduce using rule 53 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    WRITE           reduce using rule 53 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    WRITELN         reduce using rule 53 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    READ            reduce using rule 53 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    READLN          reduce using rule 53 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    LENGTH          reduce using rule 53 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    INC             reduce using rule 53 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    WHILE           reduce using rule 53 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    FOR             reduce using rule 53 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    BREAK           reduce using rule 53 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    IDENTIFIER      reduce using rule 53 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    END             reduce using rule 53 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    TO              reduce using rule 53 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    DOWNTO          reduce using rule 53 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    DO              reduce using rule 53 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)
    CLOSE_SQUARE_BRACKET reduce using rule 53 (arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET .)


state 184

    (79) for -> FOR assignment DOWNTO arithmetic_expression DO block .

    IF              reduce using rule 79 (for -> FOR assignment DOWNTO arithmetic_expression DO block .)
    WRITE           reduce using rule 79 (for -> FOR assignment DOWNTO arithmetic_expression DO block .)
    WRITELN         reduce using rule 79 (for -> FOR assignment DOWNTO arithmetic_expression DO block .)
    READ            reduce using rule 79 (for -> FOR assignment DOWNTO arithmetic_expression DO block .)
    READLN          reduce using rule 79 (for -> FOR assignment DOWNTO arithmetic_expression DO block .)
    LENGTH          reduce using rule 79 (for -> FOR assignment DOWNTO arithmetic_expression DO block .)
    INC             reduce using rule 79 (for -> FOR assignment DOWNTO arithmetic_expression DO block .)
    WHILE           reduce using rule 79 (for -> FOR assignment DOWNTO arithmetic_expression DO block .)
    FOR             reduce using rule 79 (for -> FOR assignment DOWNTO arithmetic_expression DO block .)
    BREAK           reduce using rule 79 (for -> FOR assignment DOWNTO arithmetic_expression DO block .)
    IDENTIFIER      reduce using rule 79 (for -> FOR assignment DOWNTO arithmetic_expression DO block .)
    END             reduce using rule 79 (for -> FOR assignment DOWNTO arithmetic_expression DO block .)


state 185

    (78) for -> FOR assignment TO arithmetic_expression DO block .

    IF              reduce using rule 78 (for -> FOR assignment TO arithmetic_expression DO block .)
    WRITE           reduce using rule 78 (for -> FOR assignment TO arithmetic_expression DO block .)
    WRITELN         reduce using rule 78 (for -> FOR assignment TO arithmetic_expression DO block .)
    READ            reduce using rule 78 (for -> FOR assignment TO arithmetic_expression DO block .)
    READLN          reduce using rule 78 (for -> FOR assignment TO arithmetic_expression DO block .)
    LENGTH          reduce using rule 78 (for -> FOR assignment TO arithmetic_expression DO block .)
    INC             reduce using rule 78 (for -> FOR assignment TO arithmetic_expression DO block .)
    WHILE           reduce using rule 78 (for -> FOR assignment TO arithmetic_expression DO block .)
    FOR             reduce using rule 78 (for -> FOR assignment TO arithmetic_expression DO block .)
    BREAK           reduce using rule 78 (for -> FOR assignment TO arithmetic_expression DO block .)
    IDENTIFIER      reduce using rule 78 (for -> FOR assignment TO arithmetic_expression DO block .)
    END             reduce using rule 78 (for -> FOR assignment TO arithmetic_expression DO block .)


state 186

    (80) if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block .
    (81) if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block . else
    (82) else -> . ELSE block

    IF              reduce using rule 80 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block .)
    WRITE           reduce using rule 80 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block .)
    WRITELN         reduce using rule 80 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block .)
    READ            reduce using rule 80 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block .)
    READLN          reduce using rule 80 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block .)
    LENGTH          reduce using rule 80 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block .)
    INC             reduce using rule 80 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block .)
    WHILE           reduce using rule 80 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block .)
    FOR             reduce using rule 80 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block .)
    BREAK           reduce using rule 80 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block .)
    IDENTIFIER      reduce using rule 80 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block .)
    END             reduce using rule 80 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block .)
    ELSE            shift and go to state 191

    else                           shift and go to state 190

state 187

    (13) block -> BEGIN body END SEMICOLON .

    ELSE            reduce using rule 13 (block -> BEGIN body END SEMICOLON .)
    IF              reduce using rule 13 (block -> BEGIN body END SEMICOLON .)
    WRITE           reduce using rule 13 (block -> BEGIN body END SEMICOLON .)
    WRITELN         reduce using rule 13 (block -> BEGIN body END SEMICOLON .)
    READ            reduce using rule 13 (block -> BEGIN body END SEMICOLON .)
    READLN          reduce using rule 13 (block -> BEGIN body END SEMICOLON .)
    LENGTH          reduce using rule 13 (block -> BEGIN body END SEMICOLON .)
    INC             reduce using rule 13 (block -> BEGIN body END SEMICOLON .)
    WHILE           reduce using rule 13 (block -> BEGIN body END SEMICOLON .)
    FOR             reduce using rule 13 (block -> BEGIN body END SEMICOLON .)
    BREAK           reduce using rule 13 (block -> BEGIN body END SEMICOLON .)
    IDENTIFIER      reduce using rule 13 (block -> BEGIN body END SEMICOLON .)
    END             reduce using rule 13 (block -> BEGIN body END SEMICOLON .)


state 188

    (73) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET . AND some_predicates
    (74) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET . OR some_predicates
    (75) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET .

    AND             shift and go to state 192
    OR              shift and go to state 193
    DO              reduce using rule 75 (some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET .)


state 189

    (70) some_predicates -> OPEN_BRACKET predicate . CLOSE_BRACKET AND some_predicates
    (71) some_predicates -> OPEN_BRACKET predicate . CLOSE_BRACKET OR some_predicates
    (72) some_predicates -> OPEN_BRACKET predicate . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 194


state 190

    (81) if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else .

    IF              reduce using rule 81 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else .)
    WRITE           reduce using rule 81 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else .)
    WRITELN         reduce using rule 81 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else .)
    READ            reduce using rule 81 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else .)
    READLN          reduce using rule 81 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else .)
    LENGTH          reduce using rule 81 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else .)
    INC             reduce using rule 81 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else .)
    WHILE           reduce using rule 81 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else .)
    FOR             reduce using rule 81 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else .)
    BREAK           reduce using rule 81 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else .)
    IDENTIFIER      reduce using rule 81 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else .)
    END             reduce using rule 81 (if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else .)


state 191

    (82) else -> ELSE . block
    (13) block -> . BEGIN body END SEMICOLON

    BEGIN           shift and go to state 102

    block                          shift and go to state 195

state 192

    (73) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET AND . some_predicates
    (70) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET AND some_predicates
    (71) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET OR some_predicates
    (72) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET
    (73) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET AND some_predicates
    (74) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET OR some_predicates
    (75) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 179

    some_predicates                shift and go to state 196

state 193

    (74) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET OR . some_predicates
    (70) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET AND some_predicates
    (71) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET OR some_predicates
    (72) some_predicates -> . OPEN_BRACKET predicate CLOSE_BRACKET
    (73) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET AND some_predicates
    (74) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET OR some_predicates
    (75) some_predicates -> . OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 179

    some_predicates                shift and go to state 197

state 194

    (70) some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET . AND some_predicates
    (71) some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET . OR some_predicates
    (72) some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET .

    AND             shift and go to state 149
    OR              shift and go to state 148
    DO              reduce using rule 72 (some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET .)


state 195

    (82) else -> ELSE block .

    IF              reduce using rule 82 (else -> ELSE block .)
    WRITE           reduce using rule 82 (else -> ELSE block .)
    WRITELN         reduce using rule 82 (else -> ELSE block .)
    READ            reduce using rule 82 (else -> ELSE block .)
    READLN          reduce using rule 82 (else -> ELSE block .)
    LENGTH          reduce using rule 82 (else -> ELSE block .)
    INC             reduce using rule 82 (else -> ELSE block .)
    WHILE           reduce using rule 82 (else -> ELSE block .)
    FOR             reduce using rule 82 (else -> ELSE block .)
    BREAK           reduce using rule 82 (else -> ELSE block .)
    IDENTIFIER      reduce using rule 82 (else -> ELSE block .)
    END             reduce using rule 82 (else -> ELSE block .)


state 196

    (73) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET AND some_predicates .

    DO              reduce using rule 73 (some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET AND some_predicates .)


state 197

    (74) some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET OR some_predicates .

    DO              reduce using rule 74 (some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET OR some_predicates .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MUL in state 76 resolved as shift
WARNING: shift/reduce conflict for DIV in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 81 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 81 resolved as shift
WARNING: shift/reduce conflict for MUL in state 81 resolved as shift
WARNING: shift/reduce conflict for DIV in state 81 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MUL in state 82 resolved as shift
WARNING: shift/reduce conflict for DIV in state 82 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 90 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 90 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 90 resolved as shift
WARNING: shift/reduce conflict for MUL in state 90 resolved as shift
WARNING: shift/reduce conflict for DIV in state 90 resolved as shift
WARNING: shift/reduce conflict for DO in state 109 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 143 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 143 resolved as shift
WARNING: shift/reduce conflict for MUL in state 143 resolved as shift
WARNING: shift/reduce conflict for DIV in state 143 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 144 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 144 resolved as shift
WARNING: shift/reduce conflict for MUL in state 144 resolved as shift
WARNING: shift/reduce conflict for DIV in state 144 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 145 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 145 resolved as shift
WARNING: shift/reduce conflict for MUL in state 145 resolved as shift
WARNING: shift/reduce conflict for DIV in state 145 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 146 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 146 resolved as shift
WARNING: shift/reduce conflict for MUL in state 146 resolved as shift
WARNING: shift/reduce conflict for DIV in state 146 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 151 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 151 resolved as shift
WARNING: shift/reduce conflict for MUL in state 151 resolved as shift
WARNING: shift/reduce conflict for DIV in state 151 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 152 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 152 resolved as shift
WARNING: shift/reduce conflict for MUL in state 152 resolved as shift
WARNING: shift/reduce conflict for DIV in state 152 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 153 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 153 resolved as shift
WARNING: shift/reduce conflict for MUL in state 153 resolved as shift
WARNING: shift/reduce conflict for DIV in state 153 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 154 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 154 resolved as shift
WARNING: shift/reduce conflict for MUL in state 154 resolved as shift
WARNING: shift/reduce conflict for DIV in state 154 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 161 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 161 resolved as shift
WARNING: shift/reduce conflict for MUL in state 161 resolved as shift
WARNING: shift/reduce conflict for DIV in state 161 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 162 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 162 resolved as shift
WARNING: shift/reduce conflict for MUL in state 162 resolved as shift
WARNING: shift/reduce conflict for DIV in state 162 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 163 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 163 resolved as shift
WARNING: shift/reduce conflict for MUL in state 163 resolved as shift
WARNING: shift/reduce conflict for DIV in state 163 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 164 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 164 resolved as shift
WARNING: shift/reduce conflict for MUL in state 164 resolved as shift
WARNING: shift/reduce conflict for DIV in state 164 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 165 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 165 resolved as shift
WARNING: shift/reduce conflict for MUL in state 165 resolved as shift
WARNING: shift/reduce conflict for DIV in state 165 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 166 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 166 resolved as shift
WARNING: shift/reduce conflict for MUL in state 166 resolved as shift
WARNING: shift/reduce conflict for DIV in state 166 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 167 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 167 resolved as shift
WARNING: shift/reduce conflict for MUL in state 167 resolved as shift
WARNING: shift/reduce conflict for DIV in state 167 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 168 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 168 resolved as shift
WARNING: shift/reduce conflict for MUL in state 168 resolved as shift
WARNING: shift/reduce conflict for DIV in state 168 resolved as shift
WARNING: reduce/reduce conflict in state 90 resolved using rule (assignment -> identifier ASSIGNMENT function)
WARNING: rejected rule (arithmetic_expression -> function) in state 90
