
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'IDENTIFIER NON_STRICT_COMPARISON NON_EQUALITY COMPARISON ASSIGNMENT SEMICOLON EQUALITY COLON OPEN_BRACKET CLOSE_BRACKET OPEN_SQUARE_BRACKET CLOSE_SQUARE_BRACKET NUMBER PLUS MINUS DIV MUL STRING POINT ZAPYATAYA CONST IF BREAK DOWNTO TYPE_INTEGER TYPE_STRING ELSE LENGTH THEN OR FOR TYPE_REAL IN END INC WRITE NOT READ TO READLN AND BEGIN DO WHILE WRITELN VAR\n        consts : CONST IDENTIFIER EQUALITY NUMBER SEMICOLON begin_program\n                | CONST IDENTIFIER EQUALITY STRING SEMICOLON begin_program\n                | CONST IDENTIFIER EQUALITY matrix SEMICOLON begin_program\n                | begin_program\n    \n        matrix : OPEN_SQUARE_BRACKET identifiers CLOSE_SQUARE_BRACKET\n    \n        identifiers : IDENTIFIER ZAPYATAYA identifiers\n                    | NUMBER ZAPYATAYA identifiers\n                    | STRING ZAPYATAYA identifiers\n                    | IDENTIFIER\n                    | NUMBER\n                    | STRING\n    \n        begin_program : VAR declarations BEGIN body END POINT\n    \n        block : BEGIN body END SEMICOLON\n    \n        body : expression\n    \n        identifier : IDENTIFIER\n    \n    expression : assignment expression\n                | if expression\n                | function expression\n                | empty\n                | while expression\n                | for expression\n                | break\n    \n        break : BREAK SEMICOLON\n    \n        declarations : declaration declarations\n                    | empty\n    \n        declaration : IDENTIFIER another_identifiers COLON type SEMICOLON\n    \n        another_identifiers : ZAPYATAYA IDENTIFIER another_identifiers\n                            | empty\n    \n        type : TYPE_STRING\n             | TYPE_INTEGER\n             | TYPE_REAL\n    \n        empty :\n    \n        assignment : identifier ASSIGNMENT arithmetic_expression SEMICOLON\n                   | identifier ASSIGNMENT function SEMICOLON\n                   | identifier ASSIGNMENT function\n                   | identifier ASSIGNMENT arithmetic_expression\n    \n    arithmetic_expression : NUMBER\n                     | identifier\n                     | STRING\n                     | function\n                     | identifier PLUS arithmetic_expression\n                     | identifier MINUS arithmetic_expression\n                     | identifier MUL arithmetic_expression\n                     | identifier DIV arithmetic_expression\n                     | NUMBER PLUS arithmetic_expression\n                     | NUMBER MINUS arithmetic_expression\n                     | NUMBER MUL arithmetic_expression\n                     | NUMBER DIV arithmetic_expression\n                     | function PLUS arithmetic_expression\n                     | function MINUS arithmetic_expression\n                     | function MUL arithmetic_expression\n                     | function DIV arithmetic_expression\n                     | identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET\n                     | arithmetic_expression PLUS arithmetic_expression\n                     | arithmetic_expression MINUS arithmetic_expression\n                     | arithmetic_expression MUL arithmetic_expression\n                     | arithmetic_expression DIV arithmetic_expression\n    \n        function : WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON\n                    | WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON\n                    | READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON\n                    | READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON\n                    | LENGTH OPEN_BRACKET identifier CLOSE_BRACKET\n                    | INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON\n    \n    predicate :    arithmetic_expression COMPARISON arithmetic_expression\n                  | arithmetic_expression EQUALITY arithmetic_expression\n                  | arithmetic_expression NON_EQUALITY arithmetic_expression\n                  | arithmetic_expression NON_STRICT_COMPARISON arithmetic_expression\n                  | arithmetic_expression IN identifier\n                  | arithmetic_expression IN matrix\n    \n        some_predicates : OPEN_BRACKET predicate CLOSE_BRACKET AND some_predicates\n                        | OPEN_BRACKET predicate CLOSE_BRACKET OR some_predicates\n                        | OPEN_BRACKET predicate CLOSE_BRACKET\n                        | OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET AND some_predicates\n                        | OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET OR some_predicates\n                        | OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET\n    \n        while : WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block\n              | WHILE some_predicates DO block\n    \n        for : FOR assignment TO arithmetic_expression DO block\n              | FOR assignment DOWNTO arithmetic_expression DO block\n    \n        if : IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block\n            | IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else\n    \n        else : ELSE block\n    '
    
_lr_action_items = {'DIV':([29,76,78,80,81,82,87,89,90,93,128,129,130,141,143,144,145,146,151,152,153,154,157,158,159,160,161,162,163,164,165,166,167,168,169,173,174,175,176,183,],[-15,105,-39,111,120,124,111,111,120,111,111,111,-62,-63,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,-58,-61,-60,-59,-53,]),'CLOSE_SQUARE_BRACKET':([29,69,70,71,72,76,78,81,82,130,138,139,140,141,143,144,145,146,151,152,153,154,161,162,163,164,165,166,167,168,169,173,174,175,176,183,],[-15,-11,-10,-9,100,-37,-39,-40,-38,-62,-8,-7,-6,-63,-47,-48,-46,-45,-56,-57,-55,-54,-51,-52,-50,-49,-43,-44,-42,-41,183,-58,-61,-60,-59,-53,]),'READ':([13,19,21,28,29,32,34,51,56,58,61,65,76,78,81,82,83,84,89,90,102,103,104,105,106,107,108,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,130,134,135,141,143,144,145,146,151,152,153,154,161,162,163,164,165,166,167,168,173,174,175,176,179,182,183,184,185,186,187,190,195,],[36,36,36,36,-15,36,36,36,36,36,36,36,-37,-39,-40,-38,36,36,-36,-35,36,-77,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-62,-33,-34,-63,-47,-48,-46,-45,-56,-57,-55,-54,-51,-52,-50,-49,-43,-44,-42,-41,-58,-61,-60,-59,36,-76,-53,-79,-78,-80,-13,-81,-82,]),'FOR':([13,19,21,28,29,32,34,76,78,81,82,89,90,102,103,130,134,135,141,143,144,145,146,151,152,153,154,161,162,163,164,165,166,167,168,173,174,175,176,182,183,184,185,186,187,190,195,],[24,24,24,24,-15,24,24,-37,-39,-40,-38,-36,-35,24,-77,-62,-33,-34,-63,-47,-48,-46,-45,-56,-57,-55,-54,-51,-52,-50,-49,-43,-44,-42,-41,-58,-61,-60,-59,-76,-53,-79,-78,-80,-13,-81,-82,]),'SEMICOLON':([26,29,39,40,41,44,45,46,47,76,78,81,82,89,90,100,101,130,132,133,136,137,141,143,144,145,146,151,152,153,154,161,162,163,164,165,166,167,168,173,174,175,176,177,183,],[55,-15,66,67,68,-30,-29,73,-31,-37,-39,-40,-38,134,135,-5,141,-62,173,174,175,176,-63,-47,-48,-46,-45,-56,-57,-55,-54,-51,-52,-50,-49,-43,-44,-42,-41,-58,-61,-60,-59,187,-53,]),'CONST':([0,],[2,]),'IF':([13,19,21,28,29,32,34,76,78,81,82,89,90,102,103,130,134,135,141,143,144,145,146,151,152,153,154,161,162,163,164,165,166,167,168,173,174,175,176,182,183,184,185,186,187,190,195,],[27,27,27,27,-15,27,27,-37,-39,-40,-38,-36,-35,27,-77,-62,-33,-34,-63,-47,-48,-46,-45,-56,-57,-55,-54,-51,-52,-50,-49,-43,-44,-42,-41,-58,-61,-60,-59,-76,-53,-79,-78,-80,-13,-81,-82,]),'END':([13,19,21,22,23,28,29,32,34,35,38,49,52,55,57,60,62,76,78,81,82,89,90,102,103,130,134,135,141,142,143,144,145,146,151,152,153,154,161,162,163,164,165,166,167,168,173,174,175,176,182,183,184,185,186,187,190,195,],[-32,-32,-32,-22,-14,-32,-15,-32,-32,63,-19,-16,-17,-23,-21,-18,-20,-37,-39,-40,-38,-36,-35,-32,-77,-62,-33,-34,-63,177,-47,-48,-46,-45,-56,-57,-55,-54,-51,-52,-50,-49,-43,-44,-42,-41,-58,-61,-60,-59,-76,-53,-79,-78,-80,-13,-81,-82,]),'POINT':([63,],[91,]),'TYPE_REAL':([17,],[47,]),'IDENTIFIER':([1,2,8,11,13,19,21,24,28,29,32,34,42,48,51,54,56,58,59,61,64,65,73,76,78,81,82,83,84,89,90,97,98,99,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,134,135,141,143,144,145,146,151,152,153,154,161,162,163,164,165,166,167,168,173,174,175,176,179,182,183,184,185,186,187,190,195,],[5,9,5,16,29,29,29,29,29,-15,29,29,71,29,29,29,29,29,29,29,29,29,-26,-37,-39,-40,-38,29,29,-36,-35,71,71,71,29,-77,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-62,-33,-34,-63,-47,-48,-46,-45,-56,-57,-55,-54,-51,-52,-50,-49,-43,-44,-42,-41,-58,-61,-60,-59,29,-76,-53,-79,-78,-80,-13,-81,-82,]),'MINUS':([29,76,78,80,81,82,87,89,90,93,128,129,130,141,143,144,145,146,151,152,153,154,157,158,159,160,161,162,163,164,165,166,167,168,169,173,174,175,176,183,],[-15,106,-39,112,121,125,112,112,121,112,112,112,-62,-63,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,-58,-61,-60,-59,-53,]),'PLUS':([29,76,78,80,81,82,87,89,90,93,128,129,130,141,143,144,145,146,151,152,153,154,157,158,159,160,161,162,163,164,165,166,167,168,169,173,174,175,176,183,],[-15,107,-39,113,122,126,113,113,122,113,113,113,-62,-63,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,-58,-61,-60,-59,-53,]),'OR':([109,188,194,],[148,193,148,]),'OPEN_SQUARE_BRACKET':([15,29,82,114,],[42,-15,127,42,]),'CLOSE_BRACKET':([29,74,76,78,79,81,82,85,86,87,88,92,93,100,130,141,143,144,145,146,147,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,178,183,189,],[-15,101,-37,-39,109,-40,-38,130,131,132,133,136,137,-5,-62,-63,-47,-48,-46,-45,178,-56,-57,-55,-54,-68,-69,-64,-66,-67,-65,-51,-52,-50,-49,-43,-44,-42,-41,-58,-61,-60,-59,188,-53,194,]),'COMPARISON':([29,76,78,80,81,82,130,141,143,144,145,146,151,152,153,154,161,162,163,164,165,166,167,168,173,174,175,176,183,],[-15,-37,-39,115,-40,-38,-62,-63,-47,-48,-46,-45,-56,-57,-55,-54,-51,-52,-50,-49,-43,-44,-42,-41,-58,-61,-60,-59,-53,]),'TYPE_STRING':([17,],[45,]),'TO':([29,53,76,78,81,82,89,90,130,134,135,141,143,144,145,146,151,152,153,154,161,162,163,164,165,166,167,168,173,174,175,176,183,],[-15,84,-37,-39,-40,-38,-36,-35,-62,-33,-34,-63,-47,-48,-46,-45,-56,-57,-55,-54,-51,-52,-50,-49,-43,-44,-42,-41,-58,-61,-60,-59,-53,]),'NON_EQUALITY':([29,76,78,80,81,82,130,141,143,144,145,146,151,152,153,154,161,162,163,164,165,166,167,168,173,174,175,176,183,],[-15,-37,-39,116,-40,-38,-62,-63,-47,-48,-46,-45,-56,-57,-55,-54,-51,-52,-50,-49,-43,-44,-42,-41,-58,-61,-60,-59,-53,]),'WRITE':([13,19,21,28,29,32,34,51,56,58,61,65,76,78,81,82,83,84,89,90,102,103,104,105,106,107,108,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,130,134,135,141,143,144,145,146,151,152,153,154,161,162,163,164,165,166,167,168,173,174,175,176,179,182,183,184,185,186,187,190,195,],[30,30,30,30,-15,30,30,30,30,30,30,30,-37,-39,-40,-38,30,30,-36,-35,30,-77,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-62,-33,-34,-63,-47,-48,-46,-45,-56,-57,-55,-54,-51,-52,-50,-49,-43,-44,-42,-41,-58,-61,-60,-59,30,-76,-53,-79,-78,-80,-13,-81,-82,]),'WHILE':([13,19,21,28,29,32,34,76,78,81,82,89,90,102,103,130,134,135,141,143,144,145,146,151,152,153,154,161,162,163,164,165,166,167,168,173,174,175,176,182,183,184,185,186,187,190,195,],[20,20,20,20,-15,20,20,-37,-39,-40,-38,-36,-35,20,-77,-62,-33,-34,-63,-47,-48,-46,-45,-56,-57,-55,-54,-51,-52,-50,-49,-43,-44,-42,-41,-58,-61,-60,-59,-76,-53,-79,-78,-80,-13,-81,-82,]),'WRITELN':([13,19,21,28,29,32,34,51,56,58,61,65,76,78,81,82,83,84,89,90,102,103,104,105,106,107,108,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,130,134,135,141,143,144,145,146,151,152,153,154,161,162,163,164,165,166,167,168,173,174,175,176,179,182,183,184,185,186,187,190,195,],[37,37,37,37,-15,37,37,37,37,37,37,37,-37,-39,-40,-38,37,37,-36,-35,37,-77,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-62,-33,-34,-63,-47,-48,-46,-45,-56,-57,-55,-54,-51,-52,-50,-49,-43,-44,-42,-41,-58,-61,-60,-59,37,-76,-53,-79,-78,-80,-13,-81,-82,]),'STRING':([15,42,51,56,58,61,65,83,84,97,98,99,104,105,106,107,108,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,179,],[39,69,78,78,78,78,78,78,78,69,69,69,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'COLON':([5,10,12,16,43,],[-32,-28,17,-32,-27,]),'MUL':([29,76,78,80,81,82,87,89,90,93,128,129,130,141,143,144,145,146,151,152,153,154,157,158,159,160,161,162,163,164,165,166,167,168,169,173,174,175,176,183,],[-15,104,-39,110,119,123,110,110,119,110,110,110,-62,-63,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-58,-61,-60,-59,-53,]),'ASSIGNMENT':([29,33,],[-15,61,]),'BREAK':([13,19,21,28,29,32,34,76,78,81,82,89,90,102,103,130,134,135,141,143,144,145,146,151,152,153,154,161,162,163,164,165,166,167,168,173,174,175,176,182,183,184,185,186,187,190,195,],[26,26,26,26,-15,26,26,-37,-39,-40,-38,-36,-35,26,-77,-62,-33,-34,-63,-47,-48,-46,-45,-56,-57,-55,-54,-51,-52,-50,-49,-43,-44,-42,-41,-58,-61,-60,-59,-76,-53,-79,-78,-80,-13,-81,-82,]),'THEN':([131,],[172,]),'LENGTH':([13,19,21,28,29,32,34,51,56,58,61,65,76,78,81,82,83,84,89,90,102,103,104,105,106,107,108,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,130,134,135,141,143,144,145,146,151,152,153,154,161,162,163,164,165,166,167,168,173,174,175,176,179,182,183,184,185,186,187,190,195,],[25,25,25,25,-15,25,25,25,25,25,25,25,-37,-39,-40,-38,25,25,-36,-35,25,-77,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-62,-33,-34,-63,-47,-48,-46,-45,-56,-57,-55,-54,-51,-52,-50,-49,-43,-44,-42,-41,-58,-61,-60,-59,25,-76,-53,-79,-78,-80,-13,-81,-82,]),'AND':([109,188,194,],[149,192,149,]),'VAR':([0,66,67,68,],[1,1,1,1,]),'DOWNTO':([29,53,76,78,81,82,89,90,130,134,135,141,143,144,145,146,151,152,153,154,161,162,163,164,165,166,167,168,173,174,175,176,183,],[-15,83,-37,-39,-40,-38,-36,-35,-62,-33,-34,-63,-47,-48,-46,-45,-56,-57,-55,-54,-51,-52,-50,-49,-43,-44,-42,-41,-58,-61,-60,-59,-53,]),'NUMBER':([15,42,51,56,58,61,65,83,84,97,98,99,104,105,106,107,108,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,179,],[40,70,76,76,76,76,76,76,76,70,70,70,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'TYPE_INTEGER':([17,],[44,]),'IN':([29,76,78,80,81,82,130,141,143,144,145,146,151,152,153,154,161,162,163,164,165,166,167,168,173,174,175,176,183,],[-15,-37,-39,114,-40,-38,-62,-63,-47,-48,-46,-45,-56,-57,-55,-54,-51,-52,-50,-49,-43,-44,-42,-41,-58,-61,-60,-59,-53,]),'EQUALITY':([9,29,76,78,80,81,82,130,141,143,144,145,146,151,152,153,154,161,162,163,164,165,166,167,168,173,174,175,176,183,],[15,-15,-37,-39,118,-40,-38,-62,-63,-47,-48,-46,-45,-56,-57,-55,-54,-51,-52,-50,-49,-43,-44,-42,-41,-58,-61,-60,-59,-53,]),'INC':([13,19,21,28,29,32,34,51,56,58,61,65,76,78,81,82,83,84,89,90,102,103,104,105,106,107,108,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,130,134,135,141,143,144,145,146,151,152,153,154,161,162,163,164,165,166,167,168,173,174,175,176,179,182,183,184,185,186,187,190,195,],[18,18,18,18,-15,18,18,18,18,18,18,18,-37,-39,-40,-38,18,18,-36,-35,18,-77,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-62,-33,-34,-63,-47,-48,-46,-45,-56,-57,-55,-54,-51,-52,-50,-49,-43,-44,-42,-41,-58,-61,-60,-59,18,-76,-53,-79,-78,-80,-13,-81,-82,]),'DO':([29,50,76,78,81,82,109,128,129,130,141,143,144,145,146,151,152,153,154,161,162,163,164,165,166,167,168,173,174,175,176,180,181,183,188,194,196,197,],[-15,75,-37,-39,-40,-38,150,170,171,-62,-63,-47,-48,-46,-45,-56,-57,-55,-54,-51,-52,-50,-49,-43,-44,-42,-41,-58,-61,-60,-59,-71,-70,-53,-75,-72,-73,-74,]),'READLN':([13,19,21,28,29,32,34,51,56,58,61,65,76,78,81,82,83,84,89,90,102,103,104,105,106,107,108,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,130,134,135,141,143,144,145,146,151,152,153,154,161,162,163,164,165,166,167,168,173,174,175,176,179,182,183,184,185,186,187,190,195,],[31,31,31,31,-15,31,31,31,31,31,31,31,-37,-39,-40,-38,31,31,-36,-35,31,-77,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-62,-33,-34,-63,-47,-48,-46,-45,-56,-57,-55,-54,-51,-52,-50,-49,-43,-44,-42,-41,-58,-61,-60,-59,31,-76,-53,-79,-78,-80,-13,-81,-82,]),'OPEN_BRACKET':([18,20,25,27,30,31,36,37,77,148,149,192,193,],[48,51,54,56,58,59,64,65,108,179,179,179,179,]),'BEGIN':([1,6,7,8,14,73,75,150,170,171,172,191,],[-32,-25,13,-32,-24,-26,102,102,102,102,102,102,]),'NOT':([51,179,],[77,77,]),'ELSE':([186,187,],[191,-13,]),'ZAPYATAYA':([5,16,69,70,71,],[11,11,97,98,99,]),'NON_STRICT_COMPARISON':([29,76,78,80,81,82,130,141,143,144,145,146,151,152,153,154,161,162,163,164,165,166,167,168,173,174,175,176,183,],[-15,-37,-39,117,-40,-38,-62,-63,-47,-48,-46,-45,-56,-57,-55,-54,-51,-52,-50,-49,-43,-44,-42,-41,-58,-61,-60,-59,-53,]),'$end':([3,4,91,94,95,96,],[0,-4,-12,-2,-1,-3,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'assignment':([13,19,21,24,28,32,34,102,],[19,19,19,53,19,19,19,19,]),'matrix':([15,114,],[41,156,]),'if':([13,19,21,28,32,34,102,],[21,21,21,21,21,21,21,]),'break':([13,19,21,28,32,34,102,],[22,22,22,22,22,22,22,]),'expression':([13,19,21,28,32,34,102,],[23,49,52,57,60,62,23,]),'else':([186,],[190,]),'consts':([0,],[3,]),'declarations':([1,8,],[7,14,]),'type':([17,],[46,]),'some_predicates':([20,148,149,192,193,],[50,180,181,196,197,]),'block':([75,150,170,171,172,191,],[103,182,184,185,186,195,]),'while':([13,19,21,28,32,34,102,],[34,34,34,34,34,34,34,]),'predicate':([51,56,108,179,],[79,86,147,189,]),'for':([13,19,21,28,32,34,102,],[28,28,28,28,28,28,28,]),'identifiers':([42,97,98,99,],[72,138,139,140,]),'arithmetic_expression':([51,56,58,61,65,83,84,104,105,106,107,108,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,179,],[80,80,87,89,93,128,129,143,144,145,146,80,151,152,153,154,157,158,159,160,161,162,163,164,165,166,167,168,169,80,]),'empty':([1,5,8,13,16,19,21,28,32,34,102,],[6,10,6,38,10,38,38,38,38,38,38,]),'identifier':([13,19,21,24,28,32,34,48,51,54,56,58,59,61,64,65,83,84,102,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,179,],[33,33,33,33,33,33,33,74,82,85,82,82,88,82,92,82,82,82,33,82,82,82,82,82,82,82,82,82,155,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'another_identifiers':([5,16,],[12,43,]),'body':([13,102,],[35,142,]),'begin_program':([0,66,67,68,],[4,94,95,96,]),'declaration':([1,8,],[8,8,]),'function':([13,19,21,28,32,34,51,56,58,61,65,83,84,102,104,105,106,107,108,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,179,],[32,32,32,32,32,32,81,81,81,90,81,81,81,32,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> consts","S'",1,None,None,None),
  ('consts -> CONST IDENTIFIER EQUALITY NUMBER SEMICOLON begin_program','consts',6,'p_consts','main.py',70),
  ('consts -> CONST IDENTIFIER EQUALITY STRING SEMICOLON begin_program','consts',6,'p_consts','main.py',71),
  ('consts -> CONST IDENTIFIER EQUALITY matrix SEMICOLON begin_program','consts',6,'p_consts','main.py',72),
  ('consts -> begin_program','consts',1,'p_consts','main.py',73),
  ('matrix -> OPEN_SQUARE_BRACKET identifiers CLOSE_SQUARE_BRACKET','matrix',3,'p_matrix','main.py',83),
  ('identifiers -> IDENTIFIER ZAPYATAYA identifiers','identifiers',3,'p_identifiers','main.py',90),
  ('identifiers -> NUMBER ZAPYATAYA identifiers','identifiers',3,'p_identifiers','main.py',91),
  ('identifiers -> STRING ZAPYATAYA identifiers','identifiers',3,'p_identifiers','main.py',92),
  ('identifiers -> IDENTIFIER','identifiers',1,'p_identifiers','main.py',93),
  ('identifiers -> NUMBER','identifiers',1,'p_identifiers','main.py',94),
  ('identifiers -> STRING','identifiers',1,'p_identifiers','main.py',95),
  ('begin_program -> VAR declarations BEGIN body END POINT','begin_program',6,'p_begin_program','main.py',105),
  ('block -> BEGIN body END SEMICOLON','block',4,'p_block','main.py',112),
  ('body -> expression','body',1,'p_body','main.py',119),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','main.py',126),
  ('expression -> assignment expression','expression',2,'p_expression','main.py',135),
  ('expression -> if expression','expression',2,'p_expression','main.py',136),
  ('expression -> function expression','expression',2,'p_expression','main.py',137),
  ('expression -> empty','expression',1,'p_expression','main.py',138),
  ('expression -> while expression','expression',2,'p_expression','main.py',139),
  ('expression -> for expression','expression',2,'p_expression','main.py',140),
  ('expression -> break','expression',1,'p_expression','main.py',141),
  ('break -> BREAK SEMICOLON','break',2,'p_break','main.py',152),
  ('declarations -> declaration declarations','declarations',2,'p_declarations','main.py',159),
  ('declarations -> empty','declarations',1,'p_declarations','main.py',160),
  ('declaration -> IDENTIFIER another_identifiers COLON type SEMICOLON','declaration',5,'p_declaration','main.py',170),
  ('another_identifiers -> ZAPYATAYA IDENTIFIER another_identifiers','another_identifiers',3,'p_another_identifiers','main.py',182),
  ('another_identifiers -> empty','another_identifiers',1,'p_another_identifiers','main.py',183),
  ('type -> TYPE_STRING','type',1,'p_type','main.py',196),
  ('type -> TYPE_INTEGER','type',1,'p_type','main.py',197),
  ('type -> TYPE_REAL','type',1,'p_type','main.py',198),
  ('empty -> <empty>','empty',0,'p_empty','main.py',205),
  ('assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON','assignment',4,'p_assignment','main.py',212),
  ('assignment -> identifier ASSIGNMENT function SEMICOLON','assignment',4,'p_assignment','main.py',213),
  ('assignment -> identifier ASSIGNMENT function','assignment',3,'p_assignment','main.py',214),
  ('assignment -> identifier ASSIGNMENT arithmetic_expression','assignment',3,'p_assignment','main.py',215),
  ('arithmetic_expression -> NUMBER','arithmetic_expression',1,'p_arithmetic_expression','main.py',222),
  ('arithmetic_expression -> identifier','arithmetic_expression',1,'p_arithmetic_expression','main.py',223),
  ('arithmetic_expression -> STRING','arithmetic_expression',1,'p_arithmetic_expression','main.py',224),
  ('arithmetic_expression -> function','arithmetic_expression',1,'p_arithmetic_expression','main.py',225),
  ('arithmetic_expression -> identifier PLUS arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','main.py',226),
  ('arithmetic_expression -> identifier MINUS arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','main.py',227),
  ('arithmetic_expression -> identifier MUL arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','main.py',228),
  ('arithmetic_expression -> identifier DIV arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','main.py',229),
  ('arithmetic_expression -> NUMBER PLUS arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','main.py',230),
  ('arithmetic_expression -> NUMBER MINUS arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','main.py',231),
  ('arithmetic_expression -> NUMBER MUL arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','main.py',232),
  ('arithmetic_expression -> NUMBER DIV arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','main.py',233),
  ('arithmetic_expression -> function PLUS arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','main.py',234),
  ('arithmetic_expression -> function MINUS arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','main.py',235),
  ('arithmetic_expression -> function MUL arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','main.py',236),
  ('arithmetic_expression -> function DIV arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','main.py',237),
  ('arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET','arithmetic_expression',4,'p_arithmetic_expression','main.py',238),
  ('arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','main.py',239),
  ('arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','main.py',240),
  ('arithmetic_expression -> arithmetic_expression MUL arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','main.py',241),
  ('arithmetic_expression -> arithmetic_expression DIV arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','main.py',242),
  ('function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON','function',5,'p_function','main.py',288),
  ('function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON','function',5,'p_function','main.py',289),
  ('function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON','function',5,'p_function','main.py',290),
  ('function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON','function',5,'p_function','main.py',291),
  ('function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET','function',4,'p_function','main.py',292),
  ('function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON','function',5,'p_function','main.py',293),
  ('predicate -> arithmetic_expression COMPARISON arithmetic_expression','predicate',3,'p_predicate','main.py',306),
  ('predicate -> arithmetic_expression EQUALITY arithmetic_expression','predicate',3,'p_predicate','main.py',307),
  ('predicate -> arithmetic_expression NON_EQUALITY arithmetic_expression','predicate',3,'p_predicate','main.py',308),
  ('predicate -> arithmetic_expression NON_STRICT_COMPARISON arithmetic_expression','predicate',3,'p_predicate','main.py',309),
  ('predicate -> arithmetic_expression IN identifier','predicate',3,'p_predicate','main.py',310),
  ('predicate -> arithmetic_expression IN matrix','predicate',3,'p_predicate','main.py',311),
  ('some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET AND some_predicates','some_predicates',5,'p_some_predicates','main.py',366),
  ('some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET OR some_predicates','some_predicates',5,'p_some_predicates','main.py',367),
  ('some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET','some_predicates',3,'p_some_predicates','main.py',368),
  ('some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET AND some_predicates','some_predicates',8,'p_some_predicates','main.py',369),
  ('some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET OR some_predicates','some_predicates',8,'p_some_predicates','main.py',370),
  ('some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET','some_predicates',6,'p_some_predicates','main.py',371),
  ('while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block','while',6,'p_while','main.py',385),
  ('while -> WHILE some_predicates DO block','while',4,'p_while','main.py',386),
  ('for -> FOR assignment TO arithmetic_expression DO block','for',6,'p_for','main.py',396),
  ('for -> FOR assignment DOWNTO arithmetic_expression DO block','for',6,'p_for','main.py',397),
  ('if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block','if',6,'p_if','main.py',404),
  ('if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else','if',7,'p_if','main.py',405),
  ('else -> ELSE block','else',2,'p_else','main.py',415),
]
