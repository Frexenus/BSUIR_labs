import unittest

from numpy import *

import lab05


class QuadroTest(unittest.TestCase):
    # задача 1
    def test1(self):
        m = 3
        n = 8
        A = array([
            [11, 0, 0, 1, 0, -4, -1, 1],
            [1, 1, 0, 0, 1, -1, -1, 1],
            [1, 1, 1, 0, 1, 2, -2, 1]
        ])
        b = array([8, 2, 5])
        d = array([6, 10, 9])
        B = array([[1, -1, 0, 3, -1, 5, -2, 1],
                   [2, 5, 0, 0, -1, 4, 0, 0],
                   [-1, 3, 0, 5, 4, -1, -2, 1]])
        x0 = array([0.7273, 1.2727, 3.0, 0, 0, 0, 0, 0])
        J0 = array([1, 2, 3])
        J = array([1, 2, 3])
        D = None
        c = None

        correct_result = (
        [0.4091181818131582,
         0.0,
         32.27264545507474,
         8.795440909218943,
         0.0, 2.295440909116879,
         36.158968182425824,
         40.0452909097296],
        -108.50000000000006,
        12)

        assert correct_result == lab05.ultimate_method(A, d, B, x0, J0, J, D, c)

    # задача 3
    def test3(self):
        m = 3
        n = 8
        A = array([
            [0.0, 2.0, 1.0, 4.0, 3.0, 0.0, -5.0, 10.0],
            [-1.0, 3.0, 1.0, 0.0, 1.0, 3.0, -5.0, -6.0],
            [1.0, 1.0, 1.0, 0.0, 1.0, -2.0, -5.0, 8.0]
        ])
        b = array([6.0, 4.0, 14.0])
        d = None
        B = None
        D = array([
            [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
        ])
        c = array([1.0, 3.0, -1.0, 3.0, 5.0, 2.0, -2.0, 0.0])
        x0 = array([0.0, 2.0, 0.0, 0.0, 4.0, 0.0, 0.0, 1.0])
        J0 = array([2, 5, 8])
        J = array([2, 5, 8])

        correct_result = None

        assert correct_result == lab05.ultimate_method(A, d, B, x0, J0, J, D, c)

    # задача 4
    def test4(self):
        m = 3
        n = 8
        A = array([
            [0.0, 2.0, 1.0, 4.0, 3.0, 0.0, -5.0, -10.0],
            [-1.0, 1.0, 1.0, 0.0, 1.0, 1.0, -1.0, -1.0],
            [1.0, 1.0, 1.0, 0.0, 1.0, -2.0, -5.0, 8.0]
        ])
        b = array([20.0, 1.0, 7.0])
        d = None
        B = None
        D = array([
            [25.0, 10.0, 0.0, 3.0, -1.0, 13.0, 0.0, 1.0],
            [10.0, 45.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0],
            [0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 0.0, 0.0],
            [3.0, 0.0, 0.0, 29.0, -3.0, 15.0, 0.0, 3.0],
            [-1.0, 0.0, 0.0, -3.0, 21.0, -5.0, 0.0, -1.0],
            [13.0, 20.0, 0.0, 15.0, -5.0, 61.0, 0.0, 5.0],
            [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 20.0, 0.0],
            [1.0, 0.0, 0.0, 3.0, -1.0, 5.0, 0.0, 21.0]
        ])
        c = array([1.0, -3.0, 4.0, 3.0, 5.0, 6.0, -2.0, 0.0])
        x0 = array([3.0, 0.0, 0.0, 2.0, 4.0, 0.0, 0.0, 0.0])
        J0 = array([1, 4, 5])
        J = array([1, 4, 5])

        correct_result = (
        [2.1843994273952676,
         0.2712573955367005,
         0.21009687713587896,
         3.10174121736306,
         2.884289726412629,
         0.0,
         0.0,
         0.18124457168994057], 309.54894205169143, 4)

        assert correct_result == lab05.ultimate_method(A, d, B, x0, J0, J, D, c)



    # задача 5
    def test5(self):
        m = 3
        n = 8
        A = array([
            [0.0, 0.0, 1.0, 5.0, 2.0, 0.0, -5.0, -4.0],
            [1.0, 1.0, -1.0, 0.0, 1.0, -1.0, -1.0, -1.0],
            [1.0, 1.0, 1.0, 0.0, 1.0, 2.0, 5.0, 8.0]
        ])
        b = array([15.0, -1.0, 9.0])
        d = None
        B = None
        D = array([
            [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
        ])
        c = array([1.0, -3.0, 4.0, 3.0, 5.0, 6.0, -2.0, 0.0])
        x0 = array([4.0, 0.0, 5.0, 2.0, 0.0, 0.0, 0.0, 0.0])
        J0 = array([1, 3, 4])
        J = array([1, 3, 4])

        correct_result = ([0.0,
                           0.6666666666666661,
                           0.0, 4.666666666666667,
                           0.0,
                           0.0,
                           1.6666666666666665,
                           0.0], 8.6666666666666679, 4)

        assert correct_result == lab05.ultimate_method(A, d, B, x0, J0, J, D, c)


    # пример 1
    def test6(self):
        m = 3
        n = 8
        A = array([
            [1.0, 2.0, 0.0, 1.0, 0.0, 4.0, -1.0, -3.0],
            [1.0, 3.0, 0.0, 0.0, 1.0, -1.0, -1.0, 2.0],
            [1.0, 4.0, 1.0, 0.0, 0.0, 2.0, -2.0, 0.0]
        ])
        b = array([4.0, 5.0, 3.0])
        d = array([7.0, 3.0, 3.0])
        B = array([[1, 1, -1, 0, 3, 4, -2, 1],
                   [2, 6, 0, 0, 1, -5, 0, 1],
                   [-1, 2, 0, 0, -1, 1, 1, 1]])
        D = array([
            [6.0, 11.0, -1.0, 0.0, 6.0, -7.0, -3.0, -2.0],
            [11.0, 41.0, -1.0, 0.0, 7.0, -24.0, 0.0, -3.0],
            [-1.0, -1.0, 1.0, 0.0, -3.0, -4.0, 2.0, -1.0],
            [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
            [6.0, 7.0, -3.0, 0.0, 11.0, 6.0, -7.0, 1.0],
            [-7.0, -24.0, -4.0, 0.0, 6.0, 42.0, -7.0, 10.0],
            [-3.0, 0.0, 2.0, 0.0, -7.0, -7.0, 5.0, -1.0],
            [-2.0, -3.0, -1.0, 0.0, 1.0, 10.0, -1.0, 3.0]
        ])
        c = array([-10.0, -31.0, 7.0, 0.0, -21.0, -16.0, 11.0, -7.0])
        x0 = array([0.0, 0.0, 6.0, 4.0, 5.0, 0.0, 0.0, 0.0])
        J0 = array([3, 4, 5])
        J = array([3, 4, 5])

        correct_result = ([0.8837209302325504, 0.7906976744186085, 0.0, 1.6744186046511522, 0.023255813953497614, 0.9767441860465103, 0.0, 1.348837209302318], -33.499999999999993, 7)

        assert correct_result == lab05.ultimate_method(A, d, B, x0, J0, J, D, c)

if __name__ == "__main__":
    unittest.main()

# never compare numpy list in unittests
