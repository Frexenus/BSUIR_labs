P = [-1 -2 2 2 1]
T = [3 3 2 -2 4]
spread = 0.8; % установка разброса радиальных базисных функций
net = newgrnn(P, T, spread); % создание НС регрессии
A = sim (net, P); % имитация работы НС регрессии

plot(P, T, '.', 'markersize', 30); % изображение аппроксимируемой функции

plot(P, A, '.', 'markersize', 30, 'color', [1 0 0]);

cla reset; % очистка координатных осей
p = 0.5; % установка нового входа НС регрессии
a = sim(net, p); % получение отклика НС регрессии
plot(P, T, 'markersize', 30); % изображение аппроксимируемой функции

axis([-4 4 -4 8]); % установка диапазонов осей X и Y
hold on; % включение режима добавления графиков
plot(p, a, '.', 'markersize', 30, 'color', [1 0 0]); % изображение отклика НС регрессии на вход р
title( 'Новый входной вектор '); % написать заголовок графика
xlabel('P и р'); % пометить ось X
ylabel('T и а'); % пометить ось Y
cla reset; % очистить координатную сетку

P2 = -4:2:4; % определить последовательность входов Р2
A2 = sim(net, P2); % получить отклик НС регрессии на последовательность входов Р2

plot(P2, A2, 'linewidth', 4, 'color', [1 0 0]); % отклик НС регрессии

hold on; % включить режим добавления графиков
plot(P, T, '.', 'markersize', 30); % изобразить аппроксимируемую функцию
axis([-4 4 0 3.5]); % установить диапазон осей
title('Аппроксимируемая функция'); % озаглавить график
xlabel('P и Р2 '); % пометить ось X
ylabel('T и А2 '); % пометить ось Y
hold off;

cla reset;
plot(P, T, '*');
e = 0,02; % целевой среднеквадратичной ошибки
sp = 1; % величина разброса радиальной базисной нейронной сети
net = newrb(P, T, e, sp); % создание радиальной базисной сети
X = -2 : .01 : 2;
Y = sim (net, X); % формирование отклика Y
hold on; % включение режима добавления графика
plot(X, Y); % изображение результатов аппроксимации
hold off; % отключение режима добавления графика