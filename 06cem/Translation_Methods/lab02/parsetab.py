
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'IDENTIFIER NON_STRICT_COMPARISON NON_EQUALITY COMPARISON ASSIGNMENT SEMICOLON EQUALITY COLON OPEN_BRACKET CLOSE_BRACKET OPEN_SQUARE_BRACKET CLOSE_SQUARE_BRACKET NUMBER PLUS MINUS DIV MUL STRING POINT ZAPYATAYA DO END BEGIN NOT CONST READ TYPE_STRING WRITE WRITELN TYPE_INTEGER IF ELSE READLN TO OR TYPE_REAL VAR BREAK WHILE FOR INC DOWNTO LENGTH AND THEN IN\n        consts : CONST IDENTIFIER EQUALITY NUMBER SEMICOLON begin_program\n                | CONST IDENTIFIER EQUALITY STRING SEMICOLON begin_program\n                | CONST IDENTIFIER EQUALITY matrix SEMICOLON begin_program\n                | begin_program\n    \n        matrix : OPEN_SQUARE_BRACKET identifiers CLOSE_SQUARE_BRACKET\n    \n        identifiers : IDENTIFIER ZAPYATAYA identifiers\n                    | NUMBER ZAPYATAYA identifiers\n                    | STRING ZAPYATAYA identifiers\n                    | IDENTIFIER\n                    | NUMBER\n                    | STRING\n    \n        begin_program : VAR declarations BEGIN body END POINT\n    \n        block : BEGIN body END SEMICOLON\n    \n        body : expression\n    \n        identifier : IDENTIFIER\n                    | IDENTIFIER SEMICOLON\n    \n    expression : assignment expression\n                | if expression\n                | function expression\n                | empty\n                | while expression\n                | for expression\n                | break\n    \n        break : BREAK SEMICOLON\n    \n        declarations : declaration declarations\n                    | empty\n    \n        declaration : IDENTIFIER another_identifiers COLON type SEMICOLON\n    \n        another_identifiers : ZAPYATAYA IDENTIFIER another_identifiers\n                            | empty\n    \n        type : TYPE_STRING\n             | TYPE_INTEGER\n             | TYPE_REAL\n    \n        empty :\n    \n        assignment : identifier ASSIGNMENT arithmetic_expression SEMICOLON\n                   | identifier ASSIGNMENT function SEMICOLON\n                   | identifier ASSIGNMENT function\n                   | identifier ASSIGNMENT arithmetic_expression\n    \n    arithmetic_expression : NUMBER\n                     | identifier\n                     | STRING\n                     | function\n                     | identifier PLUS arithmetic_expression\n                     | identifier MINUS arithmetic_expression\n                     | identifier MUL arithmetic_expression\n                     | identifier DIV arithmetic_expression\n                     | NUMBER PLUS arithmetic_expression\n                     | NUMBER MINUS arithmetic_expression\n                     | NUMBER MUL arithmetic_expression\n                     | NUMBER DIV arithmetic_expression\n                     | function PLUS arithmetic_expression\n                     | function MINUS arithmetic_expression\n                     | function MUL arithmetic_expression\n                     | function DIV arithmetic_expression\n                     | identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET\n                     | arithmetic_expression PLUS arithmetic_expression\n                     | arithmetic_expression MINUS arithmetic_expression\n                     | arithmetic_expression MUL arithmetic_expression\n                     | arithmetic_expression DIV arithmetic_expression\n                     | arithmetic_expression SEMICOLON\n    \n        function : WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON\n                    | WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON\n                    | READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON\n                    | READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON\n                    | LENGTH OPEN_BRACKET identifier CLOSE_BRACKET\n                    | INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON\n                    | LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON\n    \n    predicate :    arithmetic_expression COMPARISON arithmetic_expression\n                  | arithmetic_expression EQUALITY arithmetic_expression\n                  | arithmetic_expression NON_EQUALITY arithmetic_expression\n                  | arithmetic_expression NON_STRICT_COMPARISON arithmetic_expression\n                  | arithmetic_expression IN identifier\n                  | arithmetic_expression IN matrix\n    \n        some_predicates : OPEN_BRACKET predicate CLOSE_BRACKET AND some_predicates\n                        | OPEN_BRACKET predicate CLOSE_BRACKET OR some_predicates\n                        | OPEN_BRACKET predicate CLOSE_BRACKET\n                        | OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET AND some_predicates\n                        | OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET OR some_predicates\n                        | OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET\n    \n        while : WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block\n              | WHILE some_predicates DO block\n    \n        for : FOR assignment TO arithmetic_expression DO block\n              | FOR assignment DOWNTO arithmetic_expression DO block\n    \n        if : IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block\n            | IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else\n    \n        else : ELSE block\n    '
    
_lr_action_items = {'STRING':([15,42,48,52,56,57,65,80,81,98,100,101,102,103,104,105,107,109,110,111,112,113,114,115,116,117,118,119,120,128,129,130,132,138,187,],[41,70,78,78,78,78,78,78,78,70,70,70,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'NUMBER':([15,42,48,52,56,57,65,80,81,98,100,101,102,103,104,105,107,109,110,111,112,113,114,115,116,117,118,119,120,128,129,130,132,138,187,],[39,72,75,75,75,75,75,75,75,72,72,72,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'OPEN_SQUARE_BRACKET':([15,34,63,77,131,],[42,-15,-16,115,42,]),'BEGIN':([1,5,7,8,10,74,91,161,162,172,178,191,],[-33,-33,-26,14,-25,-27,136,136,136,136,136,136,]),'NON_EQUALITY':([34,63,75,77,78,79,87,106,123,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,163,164,165,173,174,180,],[-15,-16,-38,-39,-40,-41,130,-59,-64,-47,-48,-46,-49,-56,-61,-55,-57,-58,-43,-42,-45,-44,-51,-52,-50,-53,-66,-62,-60,-63,-65,-54,]),'LENGTH':([14,21,23,25,32,33,34,48,52,56,57,63,65,75,77,78,79,80,81,83,84,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,128,129,130,132,136,137,138,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,163,164,165,173,174,180,181,182,183,187,188,190,192,195,],[20,20,20,20,20,20,-15,20,20,20,20,-16,20,-38,-39,-40,-41,20,20,-36,-37,20,20,20,20,-59,20,20,20,20,20,20,20,20,20,20,20,20,20,-64,-35,-34,20,20,20,20,20,-80,20,-47,-48,-46,-49,-56,-61,-55,-57,-58,-43,-42,-45,-44,-51,-52,-50,-53,-66,-62,-60,-63,-65,-54,-81,-82,-83,20,-79,-84,-13,-85,]),'CONST':([0,],[3,]),'MUL':([34,63,75,76,77,78,79,83,84,86,87,106,121,122,123,125,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,164,165,166,167,168,171,173,174,180,],[-15,-16,103,110,116,-40,118,118,110,110,110,-59,110,110,-64,-59,110,110,110,110,110,-61,110,110,110,110,110,110,110,110,110,110,110,110,-66,-62,-60,110,110,110,110,-63,-65,-54,]),'NON_STRICT_COMPARISON':([34,63,75,77,78,79,87,106,123,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,163,164,165,173,174,180,],[-15,-16,-38,-39,-40,-41,132,-59,-64,-47,-48,-46,-49,-56,-61,-55,-57,-58,-43,-42,-45,-44,-51,-52,-50,-53,-66,-62,-60,-63,-65,-54,]),'TYPE_REAL':([16,],[46,]),'ZAPYATAYA':([6,17,70,72,73,],[13,13,98,100,101,]),'TYPE_STRING':([16,],[44,]),'CLOSE_SQUARE_BRACKET':([34,63,70,71,72,73,75,77,78,79,106,123,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,164,165,173,174,180,],[-15,-16,-11,99,-10,-9,-38,-39,-40,-41,-59,-64,-8,-7,-6,-47,-48,-46,-49,-56,-61,-55,-57,-58,-43,-42,-45,180,-44,-51,-52,-50,-53,-66,-62,-60,-63,-65,-54,]),'WRITELN':([14,21,23,25,32,33,34,48,52,56,57,63,65,75,77,78,79,80,81,83,84,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,128,129,130,132,136,137,138,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,163,164,165,173,174,180,181,182,183,187,188,190,192,195,],[18,18,18,18,18,18,-15,18,18,18,18,-16,18,-38,-39,-40,-41,18,18,-36,-37,18,18,18,18,-59,18,18,18,18,18,18,18,18,18,18,18,18,18,-64,-35,-34,18,18,18,18,18,-80,18,-47,-48,-46,-49,-56,-61,-55,-57,-58,-43,-42,-45,-44,-51,-52,-50,-53,-66,-62,-60,-63,-65,-54,-81,-82,-83,18,-79,-84,-13,-85,]),'VAR':([0,67,68,69,],[1,1,1,1,]),'WRITE':([14,21,23,25,32,33,34,48,52,56,57,63,65,75,77,78,79,80,81,83,84,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,128,129,130,132,136,137,138,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,163,164,165,173,174,180,181,182,183,187,188,190,192,195,],[26,26,26,26,26,26,-15,26,26,26,26,-16,26,-38,-39,-40,-41,26,26,-36,-37,26,26,26,26,-59,26,26,26,26,26,26,26,26,26,26,26,26,26,-64,-35,-34,26,26,26,26,26,-80,26,-47,-48,-46,-49,-56,-61,-55,-57,-58,-43,-42,-45,-44,-51,-52,-50,-53,-66,-62,-60,-63,-65,-54,-81,-82,-83,26,-79,-84,-13,-85,]),'POINT':([66,],[94,]),'$end':([2,4,94,95,96,97,],[-4,0,-12,-1,-3,-2,]),'PLUS':([34,63,75,76,77,78,79,83,84,86,87,106,121,122,123,125,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,164,165,166,167,168,171,173,174,180,],[-15,-16,104,109,113,-40,119,119,109,109,109,-59,109,109,-64,-59,109,109,109,109,109,-61,109,109,109,109,109,109,109,109,109,109,109,109,-66,-62,-60,109,109,109,109,-63,-65,-54,]),'COMPARISON':([34,63,75,77,78,79,87,106,123,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,163,164,165,173,174,180,],[-15,-16,-38,-39,-40,-41,129,-59,-64,-47,-48,-46,-49,-56,-61,-55,-57,-58,-43,-42,-45,-44,-51,-52,-50,-53,-66,-62,-60,-63,-65,-54,]),'DOWNTO':([34,49,63,75,77,78,79,83,84,106,123,124,125,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,163,164,165,173,174,180,],[-15,81,-16,-38,-39,-40,-41,-36,-37,-59,-64,-35,-34,-47,-48,-46,-49,-56,-61,-55,-57,-58,-43,-42,-45,-44,-51,-52,-50,-53,-66,-62,-60,-63,-65,-54,]),'OPEN_BRACKET':([18,20,24,26,27,28,30,37,92,177,179,196,197,],[48,50,54,56,57,58,60,65,138,187,187,187,187,]),'DIV':([34,63,75,76,77,78,79,83,84,86,87,106,121,122,123,125,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,164,165,166,167,168,171,173,174,180,],[-15,-16,105,111,114,-40,120,120,111,111,111,-59,111,111,-64,-59,111,111,111,111,111,-61,111,111,111,111,111,111,111,111,111,111,111,111,-66,-62,-60,111,111,111,111,-63,-65,-54,]),'MINUS':([34,63,75,76,77,78,79,83,84,86,87,106,121,122,123,125,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,164,165,166,167,168,171,173,174,180,],[-15,-16,102,107,112,-40,117,117,107,107,107,-59,107,107,-64,-59,107,107,107,107,107,-61,107,107,107,107,107,107,107,107,107,107,107,107,-66,-62,-60,107,107,107,107,-63,-65,-54,]),'READLN':([14,21,23,25,32,33,34,48,52,56,57,63,65,75,77,78,79,80,81,83,84,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,128,129,130,132,136,137,138,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,163,164,165,173,174,180,181,182,183,187,188,190,192,195,],[28,28,28,28,28,28,-15,28,28,28,28,-16,28,-38,-39,-40,-41,28,28,-36,-37,28,28,28,28,-59,28,28,28,28,28,28,28,28,28,28,28,28,28,-64,-35,-34,28,28,28,28,28,-80,28,-47,-48,-46,-49,-56,-61,-55,-57,-58,-43,-42,-45,-44,-51,-52,-50,-53,-66,-62,-60,-63,-65,-54,-81,-82,-83,28,-79,-84,-13,-85,]),'TO':([34,49,63,75,77,78,79,83,84,106,123,124,125,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,163,164,165,173,174,180,],[-15,80,-16,-38,-39,-40,-41,-36,-37,-59,-64,-35,-34,-47,-48,-46,-49,-56,-61,-55,-57,-58,-43,-42,-45,-44,-51,-52,-50,-53,-66,-62,-60,-63,-65,-54,]),'AND':([139,193,198,],[177,196,177,]),'COLON':([6,11,12,17,47,],[-33,16,-29,-33,-28,]),'BREAK':([14,21,23,25,32,33,34,63,75,77,78,79,83,84,106,123,124,125,136,137,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,163,164,165,173,174,180,181,182,183,188,190,192,195,],[29,29,29,29,29,29,-15,-16,-38,-39,-40,-41,-36,-37,-59,-64,-35,-34,29,-80,-47,-48,-46,-49,-56,-61,-55,-57,-58,-43,-42,-45,-44,-51,-52,-50,-53,-66,-62,-60,-63,-65,-54,-81,-82,-83,-79,-84,-13,-85,]),'EQUALITY':([9,34,63,75,77,78,79,87,106,123,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,163,164,165,173,174,180,],[15,-15,-16,-38,-39,-40,-41,128,-59,-64,-47,-48,-46,-49,-56,-61,-55,-57,-58,-43,-42,-45,-44,-51,-52,-50,-53,-66,-62,-60,-63,-65,-54,]),'ELSE':([183,192,],[191,-13,]),'IF':([14,21,23,25,32,33,34,63,75,77,78,79,83,84,106,123,124,125,136,137,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,163,164,165,173,174,180,181,182,183,188,190,192,195,],[27,27,27,27,27,27,-15,-16,-38,-39,-40,-41,-36,-37,-59,-64,-35,-34,27,-80,-47,-48,-46,-49,-56,-61,-55,-57,-58,-43,-42,-45,-44,-51,-52,-50,-53,-66,-62,-60,-63,-65,-54,-81,-82,-83,-79,-84,-13,-85,]),'THEN':([133,],[172,]),'ASSIGNMENT':([22,34,63,],[52,-15,-16,]),'INC':([14,21,23,25,32,33,34,48,52,56,57,63,65,75,77,78,79,80,81,83,84,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,128,129,130,132,136,137,138,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,163,164,165,173,174,180,181,182,183,187,188,190,192,195,],[30,30,30,30,30,30,-15,30,30,30,30,-16,30,-38,-39,-40,-41,30,30,-36,-37,30,30,30,30,-59,30,30,30,30,30,30,30,30,30,30,30,30,30,-64,-35,-34,30,30,30,30,30,-80,30,-47,-48,-46,-49,-56,-61,-55,-57,-58,-43,-42,-45,-44,-51,-52,-50,-53,-66,-62,-60,-63,-65,-54,-81,-82,-83,30,-79,-84,-13,-85,]),'CLOSE_BRACKET':([34,63,75,76,77,78,79,82,85,86,88,89,90,93,99,106,123,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,163,164,165,166,167,168,169,170,171,173,174,176,180,185,194,],[-15,-16,-38,108,-39,-40,-41,123,126,127,133,134,135,139,-5,-59,-64,-47,-48,-46,-49,-56,-61,-55,-57,-58,-43,-42,-45,-44,-51,-52,-50,-53,-66,-62,-60,-68,-67,-69,-71,-72,-70,-63,-65,185,-54,193,198,]),'WHILE':([14,21,23,25,32,33,34,63,75,77,78,79,83,84,106,123,124,125,136,137,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,163,164,165,173,174,180,181,182,183,188,190,192,195,],[37,37,37,37,37,37,-15,-16,-38,-39,-40,-41,-36,-37,-59,-64,-35,-34,37,-80,-47,-48,-46,-49,-56,-61,-55,-57,-58,-43,-42,-45,-44,-51,-52,-50,-53,-66,-62,-60,-63,-65,-54,-81,-82,-83,-79,-84,-13,-85,]),'READ':([14,21,23,25,32,33,34,48,52,56,57,63,65,75,77,78,79,80,81,83,84,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,128,129,130,132,136,137,138,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,163,164,165,173,174,180,181,182,183,187,188,190,192,195,],[24,24,24,24,24,24,-15,24,24,24,24,-16,24,-38,-39,-40,-41,24,24,-36,-37,24,24,24,24,-59,24,24,24,24,24,24,24,24,24,24,24,24,24,-64,-35,-34,24,24,24,24,24,-80,24,-47,-48,-46,-49,-56,-61,-55,-57,-58,-43,-42,-45,-44,-51,-52,-50,-53,-66,-62,-60,-63,-65,-54,-81,-82,-83,24,-79,-84,-13,-85,]),'IDENTIFIER':([1,3,5,13,14,19,21,23,25,32,33,34,42,48,50,52,54,56,57,58,60,63,65,74,75,77,78,79,80,81,83,84,98,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,128,129,130,131,132,136,137,138,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,163,164,165,173,174,180,181,182,183,187,188,190,192,195,],[6,9,6,17,34,34,34,34,34,34,34,-15,73,34,34,34,34,34,34,34,34,-16,34,-27,-38,-39,-40,-41,34,34,-36,-37,73,73,73,34,34,34,34,-59,34,34,34,34,34,34,34,34,34,34,34,34,34,-64,-35,-34,34,34,34,34,34,34,-80,34,-47,-48,-46,-49,-56,-61,-55,-57,-58,-43,-42,-45,-44,-51,-52,-50,-53,-66,-62,-60,-63,-65,-54,-81,-82,-83,34,-79,-84,-13,-85,]),'FOR':([14,21,23,25,32,33,34,63,75,77,78,79,83,84,106,123,124,125,136,137,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,163,164,165,173,174,180,181,182,183,188,190,192,195,],[19,19,19,19,19,19,-15,-16,-38,-39,-40,-41,-36,-37,-59,-64,-35,-34,19,-80,-47,-48,-46,-49,-56,-61,-55,-57,-58,-43,-42,-45,-44,-51,-52,-50,-53,-66,-62,-60,-63,-65,-54,-81,-82,-83,-79,-84,-13,-85,]),'SEMICOLON':([29,34,39,40,41,43,44,45,46,63,75,76,77,78,79,83,84,86,87,99,106,108,121,122,123,125,126,127,134,135,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,164,165,166,167,168,171,173,174,180,184,],[59,63,67,68,69,-31,-30,74,-32,-16,-38,106,-39,-40,-41,124,125,106,106,-5,-59,148,106,106,163,-59,164,165,173,174,106,106,106,106,106,-61,106,106,106,106,106,106,106,106,106,106,106,106,-66,-62,-60,106,106,106,106,-63,-65,-54,192,]),'IN':([34,63,75,77,78,79,87,106,123,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,163,164,165,173,174,180,],[-15,-16,-38,-39,-40,-41,131,-59,-64,-47,-48,-46,-49,-56,-61,-55,-57,-58,-43,-42,-45,-44,-51,-52,-50,-53,-66,-62,-60,-63,-65,-54,]),'TYPE_INTEGER':([16,],[43,]),'END':([14,21,23,25,31,32,33,34,35,36,38,51,53,55,59,61,62,63,75,77,78,79,83,84,106,123,124,125,136,137,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,163,164,165,173,174,175,180,181,182,183,188,190,192,195,],[-33,-33,-33,-33,-23,-33,-33,-15,-20,-14,66,-17,-18,-19,-24,-21,-22,-16,-38,-39,-40,-41,-36,-37,-59,-64,-35,-34,-33,-80,-47,-48,-46,-49,-56,-61,-55,-57,-58,-43,-42,-45,-44,-51,-52,-50,-53,-66,-62,-60,-63,-65,184,-54,-81,-82,-83,-79,-84,-13,-85,]),'NOT':([65,187,],[92,92,]),'DO':([34,63,64,75,77,78,79,106,121,122,123,139,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,163,164,165,173,174,180,186,189,193,198,199,200,],[-15,-16,91,-38,-39,-40,-41,-59,161,162,-64,178,-47,-48,-46,-49,-56,-61,-55,-57,-58,-43,-42,-45,-44,-51,-52,-50,-53,-66,-62,-60,-63,-65,-54,-73,-74,-78,-75,-76,-77,]),'OR':([139,193,198,],[179,197,179,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'identifiers':([42,98,100,101,],[71,140,141,142,]),'another_identifiers':([6,17,],[11,47,]),'assignment':([14,19,21,23,25,32,33,136,],[21,49,21,21,21,21,21,21,]),'identifier':([14,19,21,23,25,32,33,48,50,52,54,56,57,58,60,65,80,81,102,103,104,105,107,109,110,111,112,113,114,115,116,117,118,119,120,128,129,130,131,132,136,138,187,],[22,22,22,22,22,22,22,77,82,77,85,77,77,89,90,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,169,77,22,77,77,]),'if':([14,21,23,25,32,33,136,],[23,23,23,23,23,23,23,]),'begin_program':([0,67,68,69,],[2,95,96,97,]),'type':([16,],[45,]),'function':([14,21,23,25,32,33,48,52,56,57,65,80,81,102,103,104,105,107,109,110,111,112,113,114,115,116,117,118,119,120,128,129,130,132,136,138,187,],[25,25,25,25,25,25,79,83,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,25,79,79,]),'consts':([0,],[4,]),'else':([183,],[190,]),'declaration':([1,5,],[5,5,]),'break':([14,21,23,25,32,33,136,],[31,31,31,31,31,31,31,]),'while':([14,21,23,25,32,33,136,],[32,32,32,32,32,32,32,]),'some_predicates':([37,177,179,196,197,],[64,186,189,199,200,]),'for':([14,21,23,25,32,33,136,],[33,33,33,33,33,33,33,]),'empty':([1,5,6,14,17,21,23,25,32,33,136,],[7,7,12,35,12,35,35,35,35,35,35,]),'expression':([14,21,23,25,32,33,136,],[36,51,53,55,61,62,36,]),'matrix':([15,131,],[40,170,]),'arithmetic_expression':([48,52,56,57,65,80,81,102,103,104,105,107,109,110,111,112,113,114,115,116,117,118,119,120,128,129,130,132,138,187,],[76,84,86,87,87,121,122,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,166,167,168,171,87,87,]),'declarations':([1,5,],[8,10,]),'body':([14,136,],[38,175,]),'predicate':([57,65,138,187,],[88,93,176,194,]),'block':([91,161,162,172,178,191,],[137,181,182,183,188,195,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> consts","S'",1,None,None,None),
  ('consts -> CONST IDENTIFIER EQUALITY NUMBER SEMICOLON begin_program','consts',6,'p_consts','semantic.py',146),
  ('consts -> CONST IDENTIFIER EQUALITY STRING SEMICOLON begin_program','consts',6,'p_consts','semantic.py',147),
  ('consts -> CONST IDENTIFIER EQUALITY matrix SEMICOLON begin_program','consts',6,'p_consts','semantic.py',148),
  ('consts -> begin_program','consts',1,'p_consts','semantic.py',149),
  ('matrix -> OPEN_SQUARE_BRACKET identifiers CLOSE_SQUARE_BRACKET','matrix',3,'p_matrix','semantic.py',159),
  ('identifiers -> IDENTIFIER ZAPYATAYA identifiers','identifiers',3,'p_identifiers','semantic.py',166),
  ('identifiers -> NUMBER ZAPYATAYA identifiers','identifiers',3,'p_identifiers','semantic.py',167),
  ('identifiers -> STRING ZAPYATAYA identifiers','identifiers',3,'p_identifiers','semantic.py',168),
  ('identifiers -> IDENTIFIER','identifiers',1,'p_identifiers','semantic.py',169),
  ('identifiers -> NUMBER','identifiers',1,'p_identifiers','semantic.py',170),
  ('identifiers -> STRING','identifiers',1,'p_identifiers','semantic.py',171),
  ('begin_program -> VAR declarations BEGIN body END POINT','begin_program',6,'p_begin_program','semantic.py',181),
  ('block -> BEGIN body END SEMICOLON','block',4,'p_block','semantic.py',188),
  ('body -> expression','body',1,'p_body','semantic.py',195),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','semantic.py',202),
  ('identifier -> IDENTIFIER SEMICOLON','identifier',2,'p_identifier','semantic.py',203),
  ('expression -> assignment expression','expression',2,'p_expression','semantic.py',215),
  ('expression -> if expression','expression',2,'p_expression','semantic.py',216),
  ('expression -> function expression','expression',2,'p_expression','semantic.py',217),
  ('expression -> empty','expression',1,'p_expression','semantic.py',218),
  ('expression -> while expression','expression',2,'p_expression','semantic.py',219),
  ('expression -> for expression','expression',2,'p_expression','semantic.py',220),
  ('expression -> break','expression',1,'p_expression','semantic.py',221),
  ('break -> BREAK SEMICOLON','break',2,'p_break','semantic.py',232),
  ('declarations -> declaration declarations','declarations',2,'p_declarations','semantic.py',239),
  ('declarations -> empty','declarations',1,'p_declarations','semantic.py',240),
  ('declaration -> IDENTIFIER another_identifiers COLON type SEMICOLON','declaration',5,'p_declaration','semantic.py',250),
  ('another_identifiers -> ZAPYATAYA IDENTIFIER another_identifiers','another_identifiers',3,'p_another_identifiers','semantic.py',262),
  ('another_identifiers -> empty','another_identifiers',1,'p_another_identifiers','semantic.py',263),
  ('type -> TYPE_STRING','type',1,'p_type','semantic.py',276),
  ('type -> TYPE_INTEGER','type',1,'p_type','semantic.py',277),
  ('type -> TYPE_REAL','type',1,'p_type','semantic.py',278),
  ('empty -> <empty>','empty',0,'p_empty','semantic.py',285),
  ('assignment -> identifier ASSIGNMENT arithmetic_expression SEMICOLON','assignment',4,'p_assignment','semantic.py',292),
  ('assignment -> identifier ASSIGNMENT function SEMICOLON','assignment',4,'p_assignment','semantic.py',293),
  ('assignment -> identifier ASSIGNMENT function','assignment',3,'p_assignment','semantic.py',294),
  ('assignment -> identifier ASSIGNMENT arithmetic_expression','assignment',3,'p_assignment','semantic.py',295),
  ('arithmetic_expression -> NUMBER','arithmetic_expression',1,'p_arithmetic_expression','semantic.py',305),
  ('arithmetic_expression -> identifier','arithmetic_expression',1,'p_arithmetic_expression','semantic.py',306),
  ('arithmetic_expression -> STRING','arithmetic_expression',1,'p_arithmetic_expression','semantic.py',307),
  ('arithmetic_expression -> function','arithmetic_expression',1,'p_arithmetic_expression','semantic.py',308),
  ('arithmetic_expression -> identifier PLUS arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','semantic.py',309),
  ('arithmetic_expression -> identifier MINUS arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','semantic.py',310),
  ('arithmetic_expression -> identifier MUL arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','semantic.py',311),
  ('arithmetic_expression -> identifier DIV arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','semantic.py',312),
  ('arithmetic_expression -> NUMBER PLUS arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','semantic.py',313),
  ('arithmetic_expression -> NUMBER MINUS arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','semantic.py',314),
  ('arithmetic_expression -> NUMBER MUL arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','semantic.py',315),
  ('arithmetic_expression -> NUMBER DIV arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','semantic.py',316),
  ('arithmetic_expression -> function PLUS arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','semantic.py',317),
  ('arithmetic_expression -> function MINUS arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','semantic.py',318),
  ('arithmetic_expression -> function MUL arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','semantic.py',319),
  ('arithmetic_expression -> function DIV arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','semantic.py',320),
  ('arithmetic_expression -> identifier OPEN_SQUARE_BRACKET arithmetic_expression CLOSE_SQUARE_BRACKET','arithmetic_expression',4,'p_arithmetic_expression','semantic.py',321),
  ('arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','semantic.py',322),
  ('arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','semantic.py',323),
  ('arithmetic_expression -> arithmetic_expression MUL arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','semantic.py',324),
  ('arithmetic_expression -> arithmetic_expression DIV arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','semantic.py',325),
  ('arithmetic_expression -> arithmetic_expression SEMICOLON','arithmetic_expression',2,'p_arithmetic_expression','semantic.py',326),
  ('function -> WRITE OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON','function',5,'p_function','semantic.py',369),
  ('function -> WRITELN OPEN_BRACKET arithmetic_expression CLOSE_BRACKET SEMICOLON','function',5,'p_function','semantic.py',370),
  ('function -> READ OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON','function',5,'p_function','semantic.py',371),
  ('function -> READLN OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON','function',5,'p_function','semantic.py',372),
  ('function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET','function',4,'p_function','semantic.py',373),
  ('function -> INC OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON','function',5,'p_function','semantic.py',374),
  ('function -> LENGTH OPEN_BRACKET identifier CLOSE_BRACKET SEMICOLON','function',5,'p_function','semantic.py',375),
  ('predicate -> arithmetic_expression COMPARISON arithmetic_expression','predicate',3,'p_predicate','semantic.py',397),
  ('predicate -> arithmetic_expression EQUALITY arithmetic_expression','predicate',3,'p_predicate','semantic.py',398),
  ('predicate -> arithmetic_expression NON_EQUALITY arithmetic_expression','predicate',3,'p_predicate','semantic.py',399),
  ('predicate -> arithmetic_expression NON_STRICT_COMPARISON arithmetic_expression','predicate',3,'p_predicate','semantic.py',400),
  ('predicate -> arithmetic_expression IN identifier','predicate',3,'p_predicate','semantic.py',401),
  ('predicate -> arithmetic_expression IN matrix','predicate',3,'p_predicate','semantic.py',402),
  ('some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET AND some_predicates','some_predicates',5,'p_some_predicates','semantic.py',457),
  ('some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET OR some_predicates','some_predicates',5,'p_some_predicates','semantic.py',458),
  ('some_predicates -> OPEN_BRACKET predicate CLOSE_BRACKET','some_predicates',3,'p_some_predicates','semantic.py',459),
  ('some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET AND some_predicates','some_predicates',8,'p_some_predicates','semantic.py',460),
  ('some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET OR some_predicates','some_predicates',8,'p_some_predicates','semantic.py',461),
  ('some_predicates -> OPEN_BRACKET NOT OPEN_BRACKET predicate CLOSE_BRACKET CLOSE_BRACKET','some_predicates',6,'p_some_predicates','semantic.py',462),
  ('while -> WHILE OPEN_BRACKET predicate CLOSE_BRACKET DO block','while',6,'p_while','semantic.py',476),
  ('while -> WHILE some_predicates DO block','while',4,'p_while','semantic.py',477),
  ('for -> FOR assignment TO arithmetic_expression DO block','for',6,'p_for','semantic.py',487),
  ('for -> FOR assignment DOWNTO arithmetic_expression DO block','for',6,'p_for','semantic.py',488),
  ('if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block','if',6,'p_if','semantic.py',495),
  ('if -> IF OPEN_BRACKET predicate CLOSE_BRACKET THEN block else','if',7,'p_if','semantic.py',496),
  ('else -> ELSE block','else',2,'p_else','semantic.py',506),
]
