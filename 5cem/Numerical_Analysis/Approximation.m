%Составить разностную схему и получить численное решение
%краевой задачи с точностью 10 -3
clc;% очистка командной строки
clear;% очистка консоли
reset(symengine);% рестарт
syms x a b l r Y  % инициализация переменных
a = sin(14);  % присваиваем переменной а значение синуса 14градусов
b = cos(14);  % присваиваем переменной b значение косинуса 14градусов
l = -1; % l соответственно значение -1
r = 1; % r присвоим значение 1
n = 9; % n соответственно 9
h = (r-l)/n;  %отрезок на кол-во интервалов
interval = l:h:r; %делим отрезок на N частей
yArray = sym('y%d',[1 n+1]); %создаём массив от 1..10
eqs(1) = subs(a*(yArray(2) - 2*yArray(1))/h^2 + (1+b*x^2)*yArray(1) + 1,x,interval(1)); %выражаем y" вторую производную
for k=2:n-2 %создаём цикл каждый раз уменьшая n на 2 единицы
    eqs(k) = subs(a*(yArray(k+1) - 2*yArray(k) + yArray(k-1))/h^2 + (1+b*x^2)*yArray(k) + 1,x,interval(k)); % и получаем систему с (n+1) уравнений
end
eqs(n-1) = subs(a*(-2*yArray(n-1)+yArray(n-2))/h^2 + (1+b*x^2)*yArray(n-1) +1, x, interval(n-1)); %решение которого будет приближенным решением краевой задачи
Y = solve(eqs == [0 0 0 0 0 0 0 0]);  % запуск solve для решения задачи
yValues(1) = 0;   %установка значений для построения графика
yValues(2) = Y.y1; %~_~
yValues(3) = Y.y2; %~_~
yValues(4) = Y.y3; %~_~
yValues(5) = Y.y4; %~_~
yValues(6) = Y.y5; %~_~
yValues(7) = Y.y6; %~_~
yValues(8) = Y.y7; %~_~
yValues(9) = Y.y8; %~_~
yValues(10) = 0;   %~_~

disp(yValues);     %отображение значений в командной строке
%yValues.Marker = '*'
axis equal %ставим равнозначиные оси
title('2-D Line Plot') %назване для графика
xlabel('x') %подпись оси х
ylabel('border task') %подпись оси у
plot(interval, yValues,'--');  %отображение графика
